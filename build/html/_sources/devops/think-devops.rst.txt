.. _think-devops:

==================
思考DevOps
==================

DevOps，即 ``Development and Operation`` 的组合，不再把开发和运维割裂开来，从最初的软件开发到最终的交付运行，通过自动化工具结合管理流程，实现完整的闭环。

在 :ref:`devops` 中，不仅仅是技术和工具，更多的是日常开发和运维工作中的思考。也许最初只是一个模糊的想法，但是我相信随着不断打磨，就像一块河床上的石头，最终会露出美玉的光泽。

请阅读一下一篇引人思考的文章 `如何部署软件 - 让你团队的部署像地狱一样无聊且毫无压力 <https://blog.coding.net/blog/deploying-software>`_ :

- 好的测试（不是快的测试）
- 使用Feature Flag - 通过开关来启用新功能
- 可查验的正确的部署 - 部署的每一步都能够检查验证（自动），通过监控和自动测试工具来实现验证
- 金丝雀和灰度验证
- 代码管理：分支、评审，然后采用微小迭代的分支进行部署测试（金丝雀、灰度）
- 合并到master的代码必须是完整测试和验证的代码
- 蓝绿部署
- 审计日志（跟踪问题并可以回滚到任何节点）
- 禁止手工变更 - 通过版本管理和自动部署实现变更（可以是Puppet、Ansible这样的配置管理工具，也可以是Docker纯容器的微服务部署）
- 度量指数 - 通过日志实时采集和分析来实现部署评估，设置阀值在误码率达到一定阀值后自动回滚或停止发布

.. note::

   蓝绿部署：蓝意味着在线的生产环境，绿代表空闲的生产环境。
