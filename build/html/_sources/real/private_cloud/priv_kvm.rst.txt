.. _priv_kvm:

=======================
私有云KVM环境
=======================

和 :ref:`kvm_docker_in_studio` 类似，在私有云的物理服务器上部署KVM运行环境::

   yum install libvirt virt-install qemu-kvm
   systemctl start libvirtd
   systemctl enable libvirtd

.. note::

   仅安装字符界面工具

创建模版虚拟机
===================

- 创建CentOS 7.6模版::

   virt-install \
     --network bridge:virbr0 \
     --name centos7 \
     --ram=2048 \
     --vcpus=1 \
     --os-type=centos7.0 \
     --disk path=/var/lib/libvirt/images/centos7.qcow2,format=qcow2,bus=virtio,cache=none,size=16 \
     --graphics none \
     --location=http://mirrors.163.com/centos/7/os/x86_64/ \
     --extra-args="console=tty0 console=ttyS0,115200" 

.. note::

   构建 Ubuntu 模版guest系统，则参考 :ref:`create_vm` 

虚拟机串口设置
----------------

.. note::

   通过上述串口控制台安装的CentOS 7虚拟机，已经默认在Guest OS的内核启动参数中添加了 ``console=ttyS0,115200`` ，所以可以直接在Host主机上使用 ``virsh console <虚拟机>`` 访问虚拟机控制台。

   如果是早期CentOS 版本，可能默认没有配置串口输出，则在guest系统的 ``/etc/default/grub`` 中设置::

      GRUB_TERMINAL="serial console"
      GRUB_SERIAL_COMMAND="serial --speed=115200"
      GRUB_CMDLINE_LINUX="crashkernel=auto console=ttyS0,115200"

静态IP
----------

.. note::

   模板虚拟机依然采用NAT网络 ``192.168.122.x`` ，不占用物理网络有限的IP地址资源。

和 :ref:`libvirt_static_ip_in_studio` 相同，我们配置KVM固定分配一部分IP地址给模版主机。

- 编辑默认网络::

   virsh net-edit default

将::

    <dhcp>
      <range start='192.168.122.2' end='192.168.122.254'/>
    </dhcp>

修改成::

    <dhcp>
      <range start='192.168.122.51' end='192.168.122.254'/>
    </dhcp>

- 然后重新生成libvirt网络::

   virsh  net-destroy default
   virsh  net-start default

- 并重新将虚拟机网络连接到default网络::

   brctl addif virbr0 vnet0
   brctl addif virbr0 vnet1
   ...

- 根据 ``/var/lib/libvirt/dnsmasq/virbr0.status`` 内容获取当前DHCP分配给模版虚拟机的IP地址，这样可以 ssh 进入虚拟机，并配置静态IP地址: 修订 ``/etc/sysconfig/network-scripts/ifcfg-eth0`` ::

   # Generated by dracut initrd
   NAME="eth0"
   HWADDR="52:54:00:d0:84:1f"
   ONBOOT=yes
   NETBOOT=yes
   UUID="d5a03523-af20-4aff-af1c-4a4393219707"
   TYPE=Ethernet
   
   # 以下新加
   IPV6INIT=no
   BOOTPROTO=static
   IPADDR=192.168.122.3
   NETMASK=255.255.255.0
   GATEWAY=192.168.122.1
   DNS1=192.168.122.1

然后在控制台重启生效::

   /etc/init.d/network restart

复制KVM虚拟机(Kubernetes Master)
=====================================

.. note::

   详细克隆KVM虚拟机请参考 :ref:`clone_vm` 。

   准备 :ref:`priv_k8s_docker` 中作为 kubemaster 服务器的虚拟机，详细架构解析请参考 

- 暂停虚拟机::

   virsh suspend centos7

- clone虚拟机::

   virt-clone --connect qemu:///system --original centos7 --name kubemaster-1 --file /var/lib/libvirt/images/kubemaster-1.qcow2

.. note::

   分别在3台物理服务器上创建 ``kubemaster-1`` ``kubemaster-2`` 和 ``kubemaster-3`` 。

- 使用 ``virt-sysprep`` 初始化虚拟机::

   virt-sysprep -d kubemaster-1 --hostname kubemaster-1 --root-password password:CHANGE_ME

.. note::

   如果要保留一些设置，可以参考 `How to reset a KVM clone virtual Machines with virt-sysprep on Linux <https://www.cyberciti.biz/faq/reset-a-kvm-clone-virtual-machines-with-virt-sysprep-on-linux/>`_ 做一些重置调整::

      virt-sysprep -d nullstack --hostname nullstack \
        --run 'sed -i "s/192.168.122.3/192.168.122.10/" /etc/sysconfig/network-scripts/ifcfg-eth0' \
        --keep-user-accounts huatai --keep-user-accounts root

- 参考 :ref:`libvirt_bridged_network` 配置网桥型网络::

   待补充

- 启动虚拟机，进一步定制::

   virsh start kubemaster-1


