<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Django开发环境</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="django">
<span id="django-env"></span><h1>Django开发环境</h1>
<p>作为Python Web框架，Django需要Python支持才能运行。目前Python 2.x已经终止开发，如果你的项目刚刚开始，请从Python 3开始(Python 3不兼容Python 2)。请首先安装Python 3。</p>
<p>建议从 <a class="reference external" href="https://www.python.org/downloads/">Python官网下载</a><span class="link-target"> [https://www.python.org/downloads/]</span> 最新版本，或者从发行版安装。</p>
<p>对于macOS系统默认安装了Python 2.7为了兼容遗留代码，最新的Catalina(10.15.x)也安装了Python 3，不过需要注意执行命令是 <code class="docutils literal notranslate"><span class="pre">python3</span></code> 。但是需要注意的是，即使macOS Big Sur 11.1内建的Python 3也不支持GUI的 <a class="reference internal" href="../../python/gui/python_tkinter.xhtml#python-tkinter"><span class="std std-ref">Python Tkinter</span></a> ，所以建议从官方网站安装最新版本(包含了完整的库支持)。</p>
<p>也可以通过 <a class="reference external" href="http://brew.sh/">Homebrew</a><span class="link-target"> [http://brew.sh/]</span> 安装Python3:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">xcode</span><span class="o">-</span><span class="n">select</span> <span class="o">--</span><span class="n">install</span>
<span class="n">ruby</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>

<span class="n">echo</span> <span class="s2">&quot;export PATH=/usr/local/bin:$PATH&quot;</span> <span class="o">&gt;&gt;</span> <span class="o">~/.</span><span class="n">bash_profile</span>

<span class="n">brew</span> <span class="n">install</span> <span class="n">python3</span>
</pre></div>
</div>
<section id="virtualenv">
<h2>安装Virtualenv</h2>
<p>为了方便使用Python 3，建议通过virtualenv来构建Python运行环境:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">pip3</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="n">pip</span>
<span class="n">sudo</span> <span class="n">pip3</span> <span class="n">install</span> <span class="n">virtualenv</span>
<span class="c1"># 在Catalina上，使用默认Python3</span>
<span class="c1">#/usr/local/bin/virtualenv venv3</span>

<span class="c1"># 在早期Mac OS X 10.9(Mavericks)，使用Python官方Python3</span>
<span class="n">virtualenv</span> <span class="n">venv3</span>
</pre></div>
</div>
<p>根据提示，将脚本路径 <code class="docutils literal notranslate"><span class="pre">/Users/huataihuang/Library/Python/3.7/bin</span></code> 加入环境变量 <code class="docutils literal notranslate"><span class="pre">$PATH</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>export PATH=$PATH:$HOME/bin:/usr/local/mysql/bin:/Users/huataihuang/Library/Python/3.7/bin
</pre></div>
</div>
<p>然后激活环境变量:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># Catalina系统使用zsh，如果是早期版本，使用 ~/.bash_profile</span>
<span class="o">.</span> <span class="o">~/.</span><span class="n">zshrc</span>
</pre></div>
</div>
<p>再激活Python 3的virutalenv:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">.</span> <span class="n">venv3</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">activate</span>
</pre></div>
</div>
<p>此时激活了virtualenv环境，则执行 <code class="docutils literal notranslate"><span class="pre">python</span></code> 指令显示的运行环境就是Python 3。</p>
<ul class="simple">
<li><p>安装我的常用开发依赖库：即编辑一个 <code class="docutils literal notranslate"><span class="pre">requirements.txt</span></code> 配置（通常可以在Django项目的目录下存放），这里和 <a class="reference internal" href="../../docker/applications/docker_compose_django.xhtml#docker-compose-django"><span class="std std-ref">在Docker环境运行Django</span></a> 共用 <code class="docutils literal notranslate"><span class="pre">requirements.tst</span></code> :</p></li>
</ul>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">1</span>
<span class="normal">2</span>
<span class="normal">3</span>
<span class="normal">4</span>
<span class="normal">5</span>
<span class="normal">6</span>
<span class="normal">7</span>
<span class="normal">8</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span>sphinx
sphinx_rtd_theme
Django
selenium
djangorestframework
markdown
django-filter
mysqlclient
</pre></div>
</td></tr></table></div>
<p>然后执行以下命令安装:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements</span><span class="o">.</span><span class="n">txt</span>
</pre></div>
</div>
</section>
<section id="id1">
<h2>安装Django</h2>
<p>在Python 3的virtualenv环境中，我们可以通过 <code class="docutils literal notranslate"><span class="pre">pip</span></code> (也是 <code class="docutils literal notranslate"><span class="pre">pip3</span></code> ) 或者 <code class="docutils literal notranslate"><span class="pre">pip3</span></code> 命令来安装django:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pip</span> <span class="n">install</span> <span class="n">Django</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>以上默认安装的是office release，适合大多数用户。</p>
<p>此外，还可以安装操作系统发行版的Django。(根据发行版不同使用对应的包管理工具安装)</p>
<p>或者安装最新的开发版本:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">django</span><span class="o">/</span><span class="n">django</span><span class="o">.</span><span class="n">git</span>
<span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">e</span> <span class="n">django</span><span class="o">/</span>
</pre></div>
</div>
</div>
<p>安装以后可以验证所安装的Django版本:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">django</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">django</span><span class="o">.</span><span class="n">get_version</span><span class="p">())</span>
<span class="go">3.0.2</span>
</pre></div>
</div>
</section>
<section id="selenium">
<h2>安装Selenium(硒)</h2>
<p>测试驱动开发模式下，我们安装Selenium来作为浏览器自动化工具:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pip</span> <span class="n">install</span> <span class="n">selenium</span>
</pre></div>
</div>
</section>
<section id="id2">
<h2>测试功能</h2>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">functional_tests.py</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="n">browser</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Firefox</span><span class="p">()</span>
<span class="n">browser</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;http://localhost:8000&#39;</span><span class="p">)</span>
<span class="k">assert</span> <span class="s1">&#39;Django&#39;</span> <span class="ow">in</span> <span class="n">browser</span><span class="o">.</span><span class="n">title</span>
</pre></div>
</div>
</li>
<li><p>执行:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">python</span> <span class="n">functional_tests</span><span class="o">.</span><span class="n">py</span>
</pre></div>
</div>
</li>
</ul>
<p>注意，上述执行的功能测试调用了 <code class="docutils literal notranslate"><span class="pre">webdriver.Firefox()</span></code> 驱动，所以需要系统中已经安装了Firefox。但是，即使安装了Firefox，依然会报错:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="ne">FileNotFoundError</span><span class="p">:</span> <span class="p">[</span><span class="n">Errno</span> <span class="mi">2</span><span class="p">]</span> <span class="n">No</span> <span class="n">such</span> <span class="n">file</span> <span class="ow">or</span> <span class="n">directory</span><span class="p">:</span> <span class="s1">&#39;geckodriver&#39;</span><span class="p">:</span> <span class="s1">&#39;geckodriver&#39;</span>
<span class="o">...</span>
<span class="n">selenium</span><span class="o">.</span><span class="n">common</span><span class="o">.</span><span class="n">exceptions</span><span class="o">.</span><span class="n">WebDriverException</span><span class="p">:</span> <span class="n">Message</span><span class="p">:</span> <span class="s1">&#39;geckodriver&#39;</span> <span class="n">executable</span> <span class="n">needs</span> <span class="n">to</span> <span class="n">be</span> <span class="ow">in</span> <span class="n">PATH</span><span class="o">.</span>
</pre></div>
</div>
<p>这是因为Selenium需要一个web驱动。所谓的web驱动是一个和web浏览器交互的软件包，可以和本地浏览器或者远程的web服务器通过一种通用协议交互。以下是三种主流的浏览器的web驱动:</p>
<ul class="simple">
<li><p>chrome: <a class="reference external" href="https://sites.google.com/a/chromium.org/chromedriver/downloads">https://sites.google.com/a/chromium.org/chromedriver/downloads</a></p></li>
<li><p>firefox: <a class="reference external" href="https://github.com/mozilla/geckodriver/releases">https://github.com/mozilla/geckodriver/releases</a></p></li>
<li><p>safari: <a class="reference external" href="https://webkit.org/blog/6900/webdriver-support-in-safari-10/">https://webkit.org/blog/6900/webdriver-support-in-safari-10/</a></p></li>
</ul>
<p>在案例中我们使用了firefox的geckodriver，所以下载对应驱动，存放到 <code class="docutils literal notranslate"><span class="pre">$HOME/bin</span></code> 目录下，然后在个人profile中添加:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>export PATH=$PATH:$HOME/bin
</pre></div>
</div>
<p>加载环境变量之后，再次在virtualenv中执行上述 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">functional_tests.py</span></code> 就会打开Firefox浏览器，访问 <a class="reference external" href="http://localhost:8000">http://localhost:8000</a></p>
<p>OK，现在我们已经就绪了程序开发和运行环境，我们将准备Django的Demo以及一些开发必要工作。</p>
</section>
<section id="id3">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://docs.djangoproject.com/en/3.0/intro/install/">django quick install guide</a><span class="link-target"> [https://docs.djangoproject.com/en/3.0/intro/install/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>