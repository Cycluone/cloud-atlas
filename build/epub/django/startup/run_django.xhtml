<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>运行Django</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="django">
<span id="run-django"></span><h1>运行Django</h1>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>对于Django，初始化整个项目称为 <code class="docutils literal notranslate"><span class="pre">startproject</span></code> ，此时默认会在项目下生成一个和项目同名的 <code class="docutils literal notranslate"><span class="pre">app</span></code></p>
<p>初始化项目下的某个应用功能，例如 <code class="docutils literal notranslate"><span class="pre">api</span></code> ，则在项目目录下执行 <code class="docutils literal notranslate"><span class="pre">startapp</span></code> ，例如，如果要使用 <a class="reference internal" href="../rest_framework/drf_quickstart.xhtml#drf-quickstart"><span class="std std-ref">Django REST framework快速起步</span></a> 则执行:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">django</span><span class="o">-</span><span class="n">admin</span><span class="o">.</span><span class="n">py</span> <span class="n">startapp</span> <span class="n">api</span>
</pre></div>
</div>
</div>
<ul class="simple">
<li><p>创建开发项目</p></li>
</ul>
<p>Djang提供了一个命令行工具来创建一个项目，这里我们构建的是一个清单程序，所以命名项目 <code class="docutils literal notranslate"><span class="pre">superlists</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">django</span><span class="o">-</span><span class="n">admin</span><span class="o">.</span><span class="n">py</span> <span class="n">startproject</span> <span class="n">superlists</span>
</pre></div>
</div>
<p>上述命令会创建目录 <code class="docutils literal notranslate"><span class="pre">superlists</span></code> 并在这个目录下还有一个同名的 <code class="docutils literal notranslate"><span class="pre">superlists</span></code> 子目录：这个 <code class="docutils literal notranslate"><span class="pre">superlists/superlists</span></code> 文件夹就是用来保存应用的整个项目的文件。</p>
<p>在 <code class="docutils literal notranslate"><span class="pre">superlists</span></code> 目录下 <code class="docutils literal notranslate"><span class="pre">manage.py</span></code> 程序，这个程序是负责Django环境管理和运行的。</p>
<ul>
<li><p>数据库同步(Apply all migrations: admin, auth, contenttypes, sessions):</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">migrate</span>
</pre></div>
</div>
</li>
<li><p>运行开发服务器:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">runserver</span>
</pre></div>
</div>
</li>
</ul>
<p>此时，再次运行 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">functional_tests.py</span></code> 则可以看到启动的Firefox正确打开了Django页面。</p>
<section id="git">
<h2>创建Git仓库</h2>
<p>现在把程序提交到git仓库( <code class="docutils literal notranslate"><span class="pre">functional_tests.py</span></code> 移动到 <code class="docutils literal notranslate"><span class="pre">superlists</span></code> 目录下然后再执行 ):</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">init</span> <span class="o">.</span>
</pre></div>
</div>
<p>git仓库初始化之后，提交文件前需要先把不合适提交的数据敏感文件剔除，例如 <code class="docutils literal notranslate"><span class="pre">superlists/db.sqlite3</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">echo</span> <span class="s2">&quot;db.sqlite3&quot;</span> <span class="o">&gt;&gt;</span> <span class="o">.</span><span class="n">gitignore</span>
<span class="n">echo</span> <span class="s2">&quot;__pycache__&quot;</span> <span class="o">&gt;&gt;</span> <span class="o">.</span><span class="n">gitignore</span>
<span class="n">echo</span> <span class="s2">&quot;*.pyc&quot;</span> <span class="o">&gt;&gt;</span> <span class="o">.</span><span class="n">gitignore</span>
</pre></div>
</div>
<p>如果没有剔除不需要添加的文件，例如 <code class="docutils literal notranslate"><span class="pre">superlists/superlists/__pycache__</span></code> 目录下的文件，则使用以下命令删除:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">rm</span> <span class="o">-</span><span class="n">r</span> <span class="o">--</span><span class="n">cached</span> <span class="n">superlists</span><span class="o">/</span><span class="n">superlists</span><span class="o">/</span><span class="n">__pycache__</span>
</pre></div>
</div>
<p>然后添加文件:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
<span class="n">git</span> <span class="n">status</span>
</pre></div>
</div>
<p>检查没有问题，就提交:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">commit</span>
</pre></div>
</div>
<p>此时填写提交的简述。</p>
<p>如果要提交到远程github上，参考github的文档。</p>
</section>
<section id="docker-compose">
<h2>Docker Compose运行开发环境</h2>
<p>我们通过部署 <a class="reference internal" href="django_env.xhtml#django-env"><span class="std std-ref">Django开发环境</span></a> 来 <a class="reference internal" href="#run-django"><span class="std std-ref">运行Django</span></a> ，但是每次这样重复创建环境也是非常麻烦的事情。并且，部署到测试环境、生产环境，都是重复的工作。我们通过 <a class="reference internal" href="../../docker/index.xhtml#docker"><span class="std std-ref">Docker Atlas</span></a> 可以 <a class="reference internal" href="../../docker/applications/docker_compose_django.xhtml#docker-django-quickstart"><span class="std std-ref">快速实现Docker运行Djgnao</span></a> 。</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>