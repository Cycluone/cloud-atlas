<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Studio环境KVM和Docker</title>
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="studiokvmdocker">
<span id="kvm-docker-in-studio"></span><h1>Studio环境KVM和Docker</h1>
<section id="kvm">
<h2>安装KVM</h2>
<section id="ubuntukvm">
<h3>Ubuntu安装KVM</h3>
<ul>
<li><p>安装软件包:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">apt</span> <span class="n">install</span> <span class="n">qemu</span><span class="o">-</span><span class="n">kvm</span> <span class="n">libvirt</span><span class="o">-</span><span class="n">daemon</span><span class="o">-</span><span class="n">system</span> <span class="n">libvirt</span><span class="o">-</span><span class="n">clients</span> <span class="n">bridge</span><span class="o">-</span><span class="n">utils</span> <span class="n">virtinst</span> <span class="n">libguestfs</span><span class="o">-</span><span class="n">tools</span> <span class="n">ovmf</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">qemu-kvm</span></code> QEMU核心</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">libvirt-*</span></code> libvirtd用于管理QEMU</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">virtinst</span></code> 安装Guest的工具</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">libguestfs-tools</span></code> 是Guest文件系统工具，包含了初始化虚拟机的工具命令 <code class="docutils literal notranslate"><span class="pre">virt-sysprep</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">ovmf</span></code> 是模拟EFI firmwarre的功能，请参考 <a class="reference external" href="https://fedoraproject.org/wiki/Using_UEFI_with_QEMU">Using UEFI with QEMU</a><span class="link-target"> [https://fedoraproject.org/wiki/Using_UEFI_with_QEMU]</span></p></li>
</ul>
</div>
<ul>
<li><p>(可选) 将 <code class="docutils literal notranslate"><span class="pre">自己</span></code> 的账号添加到 <code class="docutils literal notranslate"><span class="pre">libvirt</span></code> 用户组（18.04版本可能是 <code class="docutils literal notranslate"><span class="pre">libvirtd</span></code> 用户组），以便可以直接运行虚拟机:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>sudo adduser `id -un` libvirt
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在最新的Ubuntu 18.10中安装libvirt，安装执行命令的用户已经自动被加入 <code class="docutils literal notranslate"><span class="pre">libvirt</span></code> 用户组</p>
</div>
<ul>
<li><p>检查验证:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">virsh</span> <span class="nb">list</span> <span class="o">--</span><span class="nb">all</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>Ubuntu安装libvirt时已经自动激活启动</p>
</div>
</section>
<section id="arch-linuxkvm">
<h3>Arch Linux安装KVM</h3>
<ul>
<li><p>安装:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">pacman</span> <span class="o">-</span><span class="n">S</span> <span class="n">qemu</span> <span class="n">libvirt</span> <span class="n">virt</span><span class="o">-</span><span class="n">install</span> \
   <span class="n">dnsmasq</span> <span class="n">ebtables</span> <span class="n">firewalld</span> <span class="n">bridge</span><span class="o">-</span><span class="n">utils</span>

<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">start</span> <span class="n">firewalld</span>
<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">firewalld</span>
<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">start</span> <span class="n">libvirtd</span>
<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">libvirtd</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<ul class="simple">
<li><p>安装 <code class="docutils literal notranslate"><span class="pre">bridge-utils</span></code> 才能具备 <code class="docutils literal notranslate"><span class="pre">brctl</span></code> 工具，这样才能建立virtbr0这个NAT旺桥</p></li>
<li><p>libvirt需要dnsmasq, ebtables, firewalld 来分配NAT网络IP地址和设置netfilter防火墙规则，否则也启动不了NAT网络。详见 <a class="reference internal" href="../kvm/libvirt/network/libvirt_nat_network.xhtml#libvirt-nat-network"><span class="std std-ref">libvirt NAT型网络</span></a></p></li>
</ul>
<p>参考 <a class="reference external" href="https://computingforgeeks.com/how-to-create-and-use-network-bridge-on-arch-linux-and-manjaro/">How to Create and use Network Bridge on Arch Linux and Manjaro</a><span class="link-target"> [https://computingforgeeks.com/how-to-create-and-use-network-bridge-on-arch-linux-and-manjaro/]</span></p>
</div>
<ul>
<li><p>安装完qemu之后，如果没有重启系统，则此时还没有加载kvm内核模块，可以通过以下命令手工加载:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">modprobe</span> <span class="n">kvm_intel</span>
</pre></div>
</div>
</li>
<li><p>加载virtio模块:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">modprobe</span> <span class="n">virtio</span>
</pre></div>
</div>
</li>
</ul>
</section>
</section>
<section id="id1">
<h2>嵌套虚拟化</h2>
<p>在使用 <code class="docutils literal notranslate"><span class="pre">一台</span></code> 物理主机(MacBook Pro)模拟多个物理服务器来组成集群，部署基于KVM虚拟化的云计算，需要使用 <a class="reference internal" href="../kvm/kvm_nested_virtual.xhtml#kvm-nested-virtual"><span class="std std-ref">KVM嵌套虚拟化</span></a> 来实现。在后续 <a class="reference internal" href="../kvm/index.xhtml#kvm"><span class="std std-ref">KVM Atlas</span></a> 实践中，会详介绍如何在一台物理主机上运行支持hypervisor的虚拟机，以实现物理服务器集群模拟。</p>
</section>
<section id="docker">
<span id="install-docker-in-studio"></span><h2>Docker</h2>
<p>在MacBook Pro的Host环境，不仅要运行嵌套虚拟户的KVM实现OpenStack的集群模拟，而且要运行Docker来支撑一些底层服务。这是因为，底层服务需要更高的性能，而且要具备隔离以实现模拟分布式集群。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>安装Docker CE方法参考 Kubernetes 文档 <a class="reference external" href="https://kubernetes.io/docs/setup/cri/">CRI installation</a><span class="link-target"> [https://kubernetes.io/docs/setup/cri/]</span></p>
</div>
<ul>
<li><p>安装Docker CE:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># remove all previous Docker versions</span>
<span class="n">sudo</span> <span class="n">apt</span> <span class="n">remove</span> <span class="n">docker</span> <span class="n">docker</span><span class="o">-</span><span class="n">engine</span> <span class="n">docker</span><span class="o">.</span><span class="n">io</span>

<span class="c1"># Install packages to allow apt to use a repository over HTTPS</span>
<span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span> <span class="o">&amp;&amp;</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">apt</span><span class="o">-</span><span class="n">transport</span><span class="o">-</span><span class="n">https</span> <span class="n">ca</span><span class="o">-</span><span class="n">certificates</span> <span class="n">curl</span> <span class="n">software</span><span class="o">-</span><span class="n">properties</span><span class="o">-</span><span class="n">common</span>

<span class="c1"># add Docker official GPG key</span>
<span class="n">curl</span> <span class="o">-</span><span class="n">fsSL</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">download</span><span class="o">.</span><span class="n">docker</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">ubuntu</span><span class="o">/</span><span class="n">gpg</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">add</span> <span class="o">-</span>

<span class="c1"># Add Docker repository (for Ubuntu Bionic) 注意：nvidia-docker会检查docker-ce版本，强制要求 ubuntu-bionic</span>
<span class="c1"># 所以这里必须采用 bionic 仓库安装 docker-ce</span>
<span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> \
    <span class="s2">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu </span><span class="se">\</span>
<span class="s2">    $(lsb_release -cs) </span><span class="se">\</span>
<span class="s2">    stable&quot;</span>

<span class="n">sudo</span> <span class="n">apt</span> <span class="n">update</span>
<span class="n">sudo</span> <span class="n">apt</span> <span class="n">install</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span>
</pre></div>
</div>
</li>
</ul>
<p>注意，由于我使用 <a class="reference internal" href="../docker/storage/docker_btrfs_driver.xhtml#docker-btrfs-driver"><span class="std std-ref">Docker btrfs 存储驱动</span></a> 并且 <a class="reference internal" href="../kubernetes/startup_prepare/install_run_minikube.xhtml#minikube-debug-cri-install"><span class="std std-ref">minikube CRI安装排查</span></a> 要求，需要设置 <code class="docutils literal notranslate"><span class="pre">btrfs</span></code> 存储驱动和  <code class="docutils literal notranslate"><span class="pre">systemd</span></code> 作为cgroup驱动，所以执行以下命令:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># Setup daemon</span>
<span class="n">cat</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">docker</span><span class="o">/</span><span class="n">daemon</span><span class="o">.</span><span class="n">json</span> <span class="o">&lt;&lt;</span><span class="n">EOF</span>
<span class="p">{</span>
  <span class="s2">&quot;exec-opts&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;native.cgroupdriver=systemd&quot;</span><span class="p">],</span>
  <span class="s2">&quot;log-driver&quot;</span><span class="p">:</span> <span class="s2">&quot;json-file&quot;</span><span class="p">,</span>
  <span class="s2">&quot;log-opts&quot;</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">&quot;max-size&quot;</span><span class="p">:</span> <span class="s2">&quot;100m&quot;</span>
  <span class="p">},</span>
  <span class="s2">&quot;storage-driver&quot;</span><span class="p">:</span> <span class="s2">&quot;btrfs&quot;</span>
<span class="p">}</span>
<span class="n">EOF</span>

<span class="n">mkdir</span> <span class="o">-</span><span class="n">p</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">systemd</span><span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">service</span><span class="o">.</span><span class="n">d</span>
</pre></div>
</div>
<p>然后重启docker:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># Restart docker.</span>
<span class="n">systemctl</span> <span class="n">daemon</span><span class="o">-</span><span class="n">reload</span>
<span class="n">systemctl</span> <span class="n">restart</span> <span class="n">docker</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>由于 <a class="reference internal" href="../docker/gpu/nvidia-docker.xhtml#nvidia-docker"><span class="std std-ref">Docker运行NVIDIA容器</span></a> 依赖Docker官方最新版本的docker，所以这里不使用发行版提供的docker，而是 <a class="reference internal" href="../docker/gpu/nvidia-docker.xhtml#install-docker-ce"><span class="std std-ref">安装 docker-ce</span></a> 。如果没有这个需求，也可以安装Ubuntu发行版的 <code class="docutils literal notranslate"><span class="pre">docker.io</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">apt</span> <span class="n">install</span> <span class="n">docker</span><span class="o">.</span><span class="n">io</span>
</pre></div>
</div>
</div>
<ul>
<li><p>(可选) 将 <code class="docutils literal notranslate"><span class="pre">自己</span></code> 的账号添加到 <code class="docutils literal notranslate"><span class="pre">docker</span></code> 用户组:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>sudo adduser `id -un` docker
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>用户加入docker组还是需要重启主机操作系统才能直接使用 <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">ps</span></code></p>
</div>
<section id="arch-linuxdocker">
<h3>Arch Linux安装Docker</h3>
<ul>
<li><p>安装Docker:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">pacman</span> <span class="o">-</span><span class="n">S</span> <span class="n">docker</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在启动docker服务之前，需要确保系统没有启动VPN连接，因为VPN和Docker的网桥以及overlay网络冲突。这种情况下，需要在启动docker之前先断开VPN。</p>
</div>
<p>我遇到一个问题，就是 <code class="docutils literal notranslate"><span class="pre">sysctl</span> <span class="pre">-a</span> <span class="pre">|</span> <span class="pre">grep</span> <span class="pre">ip_forward</span></code> 输出已经显示:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">net</span><span class="o">.</span><span class="n">ipv4</span><span class="o">.</span><span class="n">ip_forward</span> <span class="o">=</span> <span class="mi">1</span>
</pre></div>
</div>
<p>但是创建的容器不能通外网，导致安装以后</p>
</section>
</section>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p>详细的Ubuntu中安装KVM环境请参考 <a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/tree/master/virtual/kvm/kvm_on_ubuntu/installation.md">Ubuntu环境</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/tree/master/virtual/kvm/kvm_on_ubuntu/installation.md]</span></p></li>
<li><p><a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/virtual/kvm/nested_virtualization/nested_virtualization_kvm_centos7.md">CentOS7的嵌套虚拟化(nested virtualization)部署实践</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/blob/master/virtual/kvm/nested_virtualization/nested_virtualization_kvm_centos7.md]</span></p></li>
<li><p><a class="reference external" href="https://wiki.archlinux.org/index.php/KVM">Arch Linux文档 - KVM</a><span class="link-target"> [https://wiki.archlinux.org/index.php/KVM]</span></p></li>
<li><p><a class="reference external" href="https://wiki.archlinux.org/index.php/QEMU">Arch Linux文档 - QEMU</a><span class="link-target"> [https://wiki.archlinux.org/index.php/QEMU]</span></p></li>
<li><p><a class="reference external" href="https://wiki.archlinux.org/index.php/Libvirt">Arch Linux文档 - Libvirt</a><span class="link-target"> [https://wiki.archlinux.org/index.php/Libvirt]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>