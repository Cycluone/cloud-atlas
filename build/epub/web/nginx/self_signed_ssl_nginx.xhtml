<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>配置Nginx自签名SSL证书</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="nginxssl">
<span id="self-signed-ssl-nginx"></span><h1>配置Nginx自签名SSL证书</h1>
<p>实际上现在互联网WEB网站都提供了https服务，甚至如果网站没有启用https服务会被搜索引擎降低权重。对于个人使用的小型网站，也强烈建议启用https服务，以便能够一定程度降低GFW的干扰。</p>
<p>对于企业内部的测试环境，有时候我们需要使用一些自签名SSL证书来构建HTTPS的web网站，主要用于测试，也避免购买证书的成本。不过，对于公开网站，是需要使用证书签发机构提供的权威证书，否则无法得到浏览器的默认支持。特别是对于电子商务网站或者任何使用密码账号认证的网站，都需要强制使用HTTPS，否则根本无法信任网站安全。</p>
<section id="ssl">
<h2>创建SSL证书</h2>
<p>TLS/SSL 结合使用公共证书和私钥。SSL key是服务器的密钥，用于加密发送给客户端的数据。这个SSL证书是任何请求内容的共享证书。这个SSL密钥可以用于解密使用相应SSL key签名的内容。</p>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">/etc/ssl/certs</span></code> 目录保存了公共证书，需要在服务器上始终存在。需要创建并锁定目录:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">mkdir</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">private</span>
<span class="n">sudo</span> <span class="n">chmod</span> <span class="mi">700</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">private</span>
</pre></div>
</div>
</li>
<li><p>创建自签名密钥和使用OpenSSL签名证书对:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">openssl</span> <span class="n">req</span> <span class="o">-</span><span class="n">x509</span> <span class="o">-</span><span class="n">nodes</span> <span class="o">-</span><span class="n">days</span> <span class="mi">36500</span> <span class="o">-</span><span class="n">newkey</span> <span class="n">rsa</span><span class="p">:</span><span class="mi">2048</span> <span class="o">-</span><span class="n">keyout</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">private</span><span class="o">/</span><span class="n">nginx</span><span class="o">-</span><span class="n">selfsigned</span><span class="o">.</span><span class="n">key</span> <span class="o">-</span><span class="n">out</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">certs</span><span class="o">/</span><span class="n">nginx</span><span class="o">-</span><span class="n">selfsigned</span><span class="o">.</span><span class="n">crt</span>
</pre></div>
</div>
</li>
</ul>
<p>参数说明：</p>
<blockquote>
<div><ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">openssl</span></code> 是创建和管理OpenSSL证书，密钥和其他文件的基本命令</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">req</span></code> 子命令是指定使用 X.509证书签名请求(certificate signing request, CSR)管理。这里的 <code class="docutils literal notranslate"><span class="pre">X.509</span></code> 是一个管理SSL和TLS密钥和证书的公钥架构标准。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">-x509</span></code> 就是子命令参数，也就是我们自签名证书</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">-nodes</span></code> 参数可以使OpenSSL跳过使用密码加密证书的选项，这是因为我们需要Nginx能够直接读取文件，而不是每次启动服务都要我们输入密码。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">-days</span> <span class="pre">36500</span></code> 我这里签了100年的证书，实际上就是让证书不过期</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">-newkey</span> <span class="pre">rsa:2048</span></code> 我们需要同时生成一个证书和密钥，这个 <code class="docutils literal notranslate"><span class="pre">rsa:2048</span></code> 是指定采用2048位长度RSA证书密钥</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">--keyout</span></code> 指定输出的私钥文件名</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">-out</span></code> 指定创建证书的位置</p></li>
</ul>
</div></blockquote>
<ul>
<li><p>由于使用OpenSSL，可以创建一个强Diffie-Hellman group，用于和客户端协商Perfect Forward Secrecy，使用以下命令:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">openssl</span> <span class="n">dhparam</span> <span class="o">-</span><span class="n">out</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">certs</span><span class="o">/</span><span class="n">dhparam</span><span class="o">.</span><span class="n">pem</span> <span class="mi">2048</span>
</pre></div>
</div>
</li>
</ul>
</section>
<section id="id1">
<h2>配置Nginx使用SSL</h2>
<p>默认Nginx配置采用在主配置文件配置，同时会检查 <code class="docutils literal notranslate"><span class="pre">/etc/nginx/conf.d</span></code> 目录下配置，我们的定制配置就存放到这个目录</p>
<section id="tls-ssl">
<h3>创建TLS/SSL服务器配置</h3>
<ul class="simple">
<li><p>在 <code class="docutils literal notranslate"><span class="pre">/etc/nginx/conf.d/</span></code> 目录下创建一个 <code class="docutils literal notranslate"><span class="pre">ssl.conf</span></code> 配置</p></li>
</ul>
<div class="literal-block-wrapper docutils container" id="id3">
<div class="code-block-caption"><span class="caption-text">self_signed_ssl_nginx/ssl.conf</span></div>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span>server <span class="o">{</span>
    listen       <span class="m">443</span> ssl http2 default_server<span class="p">;</span>
    <span class="c1">#listen       [::]:443 ssl http2 default_server;</span>
    server_name  _<span class="p">;</span>
    root         /usr/share/nginx/html<span class="p">;</span>

    ssl_certificate <span class="s2">&quot;/etc/ssl/certs/nginx-selfsigned.crt&quot;</span><span class="p">;</span>
    ssl_certificate_key <span class="s2">&quot;/etc/ssl/private/nginx-selfsigned.key&quot;</span><span class="p">;</span>
    ssl_dhparam /etc/ssl/certs/dhparam.pem<span class="p">;</span>
    ssl_session_cache shared:SSL:1m<span class="p">;</span>
    ssl_session_timeout  10m<span class="p">;</span>
    ssl_ciphers HIGH:!aNULL:!MD5<span class="p">;</span>
    ssl_prefer_server_ciphers on<span class="p">;</span>

    location / <span class="o">{</span>
    <span class="o">}</span>

    error_page <span class="m">404</span> /404.html<span class="p">;</span>
    <span class="nv">location</span> <span class="o">=</span> /404.html <span class="o">{</span>
    <span class="o">}</span>

    error_page <span class="m">500</span> <span class="m">502</span> <span class="m">503</span> <span class="m">504</span> /50x.html<span class="p">;</span>
    <span class="nv">location</span> <span class="o">=</span> /50x.html <span class="o">{</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table></div>
</div>
<ul class="simple">
<li><p>重新启动nginx就具备了SSL加密https服务</p></li>
</ul>
</section>
</section>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-on-centos-7">How To Create a Self-Signed SSL Certificate for Nginx on CentOS 7</a><span class="link-target"> [https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-on-centos-7]</span> - 主要参考该文，非常完善的文档</p></li>
<li><p><a class="reference external" href="https://www.techrepublic.com/article/how-to-enable-ssl-on-nginx/">How to enable SSL on NGINX</a><span class="link-target"> [https://www.techrepublic.com/article/how-to-enable-ssl-on-nginx/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>