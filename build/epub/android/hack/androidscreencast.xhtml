<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>AndroidScreencast控制Android</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="androidscreencastandroid">
<span id="androidscreencast"></span><h1>AndroidScreencast控制Android</h1>
<p>在一些特定的场景下，你可能需要在电脑主机上查看Android手机上的屏幕运行程序，或者通过鼠标键盘远程操作手机。举个例子，我在工作中需要使用的一个企业软件只有Android版本，没有提供Linux版本(对于我个人而言，Linux是我主要的工作平台)，这种运行模式就非常有用：</p>
<ul class="simple">
<li><p>可以在Android手机上运行企业软件，显示投影到自己的笔记本电脑上进行操作</p></li>
<li><p>电脑屏幕可以放大显示，避免使用Android程序是过小的屏幕无法看清同事共享给你的屏幕</p></li>
<li><p>如果你的Android已经root过，还能直接使用电脑的键盘鼠标操作Android，非常方便输入文字</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>AndroidScreencast 是采用Java编写的工具，另外，也有开源基于C编写的Android设备显示和控制软件 <a class="reference internal" href="scrcpy.xhtml#scrcpy"><span class="std std-ref">scrcpy控制Android</span></a> ，性能可能更好，但是Android要求版本更高一些(Android 5)</p>
</div>
<section id="id1">
<h2>AndroidScreencast功能</h2>
<ul class="simple">
<li><p>不需要在手机上安装客户端</p></li>
<li><p>支持点击和滑动操作</p></li>
<li><p>可以使用PC的键盘写消息</p></li>
<li><p>支持横屏模式</p></li>
<li><p>可以在PC上浏览手机文件</p></li>
<li><p>在浏览时可以录制手机屏幕</p></li>
</ul>
</section>
<section id="id2">
<h2>准备工作</h2>
<ul class="simple">
<li><p>下载安装 <a class="reference external" href="http://developer.android.com/sdk/index.html">Android SDK</a><span class="link-target"> [http://developer.android.com/sdk/index.html]</span> ，由于我已经安装了 <a class="reference internal" href="../develop/startup/android_develop_env.xhtml#android-develop-env"><span class="std std-ref">Android开发环境</span></a> ，所以已经具备了Andorid SDK。你也可以单独下载SDK部分。
* 在 <code class="docutils literal notranslate"><span class="pre">SDK</span> <span class="pre">Manager</span></code> 中，只需要选择 <code class="docutils literal notranslate"><span class="pre">Android</span> <span class="pre">SDK</span> <span class="pre">Platform-Tools</span></code> 就可以满足运行需求</p></li>
<li><p>下载 <a class="reference external" href="https://xsavikx.github.io/AndroidScreencast/">AndroidScreencast官方仓库</a><span class="link-target"> [https://xsavikx.github.io/AndroidScreencast/]</span> 提供的JAR或安装包</p></li>
<li><p>操作系统安装Java运行环境 - 在macOS中，在终端程序中执行 <code class="docutils literal notranslate"><span class="pre">java</span> <span class="pre">version</span></code> 命令，如果系统没有安装java会提示你直接从Oracle网站下载安装。</p></li>
</ul>
<p>连接好手机和主机，执行以下命令确保手机设备就绪:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">adb</span> <span class="n">devices</span>
</pre></div>
</div>
<p>可以看到输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">List</span> <span class="n">of</span> <span class="n">devices</span> <span class="n">attached</span>
<span class="n">HT6C10200963</span>    <span class="n">device</span>
</pre></div>
</div>
<ul class="simple">
<li><p>将下载的 <code class="docutils literal notranslate"><span class="pre">androidscrencast.jnlp</span></code> 复制到 <code class="docutils literal notranslate"><span class="pre">android-sdk</span></code> 目录，在macOS中，复制到 <code class="docutils literal notranslate"><span class="pre">~/Library/Android/sdk/platform-tools/</span></code> 目录下</p></li>
</ul>
</section>
<section id="id4">
<h2>配置</h2>
<p>有两种方法运行应用:</p>
<ul class="simple">
<li><p>自己运行ADB服务器</p></li>
<li><p>设置正确的 <code class="docutils literal notranslate"><span class="pre">app.properties</span></code> 文件</p></li>
</ul>
<section id="adb">
<h3>自己运行ADB服务器</h3>
<ul>
<li><p>首先确保主机已经安装好了 <code class="docutils literal notranslate"><span class="pre">adb</span></code> 然后使用以下命令运行服务器:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">adb</span> <span class="n">start</span><span class="o">-</span><span class="n">server</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>如果在 <code class="docutils literal notranslate"><span class="pre">adb.path</span></code> 中填写了 <code class="docutils literal notranslate"><span class="pre">app.properties</span></code> ，则 AndroidScreencast会在应用程序终止时也停止ADB server。例如，通过ssh forwarding方式使用远程ADB server，则建议不要使用 <code class="docutils literal notranslate"><span class="pre">app.properties</span></code> 或者将该配置文件中的 <code class="docutils literal notranslate"><span class="pre">adb.path</span></code> 属性注释掉。</p>
</div>
</section>
<section id="app-properties">
<h3>设置正确的 <code class="docutils literal notranslate"><span class="pre">app.properties</span></code> 文件</h3>
<p>为了正确运行应用，你需要在 <code class="docutils literal notranslate"><span class="pre">app.properties</span></code> 配置中指定正确的 <code class="docutils literal notranslate"><span class="pre">adb.path</span></code> ，例如:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1">#relative or absolute path to ADB</span>
<span class="n">adb</span><span class="o">.</span><span class="n">path</span><span class="o">=/</span><span class="n">Users</span><span class="o">/</span><span class="n">huataihuang</span><span class="o">/</span><span class="n">Library</span><span class="o">/</span><span class="n">Android</span><span class="o">/</span><span class="n">sdk</span><span class="o">/</span><span class="n">platform</span><span class="o">-</span><span class="n">tools</span><span class="o">/</span><span class="n">adb</span>
</pre></div>
</div>
<p>此外， <code class="docutils literal notranslate"><span class="pre">app.properties</span></code> 配置还提供了一些有关设置应用程序特性的配置，如启动窗口大小，以及是否让应用运行类似 natively程序。</p>
</section>
</section>
<section id="jnlp">
<h2>JNLP</h2>
<p>AndroidScreencast使用了Java web start技术，下载 <a class="reference external" href="http://xsavikx.github.io/AndroidScreencast/jnlp/androidscreencast.jnlp">androidscreencast.jnlp</a><span class="link-target"> [http://xsavikx.github.io/AndroidScreencast/jnlp/androidscreencast.jnlp]</span> 存放到 androidscreecast JAR文件相同目录下。</p>
<ul class="simple">
<li><p>在文件管理器中点击之心 <code class="docutils literal notranslate"><span class="pre">androidscreencast.jnlp</span></code> 就会启动AndroidScreencast运行程序。</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>我在macOS上运行 <code class="docutils literal notranslate"><span class="pre">androidscreencast.jnlp</span></code> 发现总是提示需要JRE运行环境，并引导我下载(访问到却是flash.cn网站，像是被劫持了域名)。但是实践发现，在macOS的文件管理器中，直接点解运行 androidscreencast.jar 也是能够正常工作的。</p>
<p>注意运行时，手机屏幕不能锁屏，否则Java应用的屏幕是完全空白的。手机解锁以后，就能够正常在Java应用页面看到屏幕输出。虽然有些延迟和缓慢，但是可以将这种方式作为投屏解决方案，引对一些屏幕比较静态的应用使用。</p>
</div>
<figure class="align-default">
<img alt="../../_images/androidscreencast.png" src="../../_images/androidscreencast.png" style="width: 482.25px; height: 600.0px;" />
</figure>
</section>
<section id="id5">
<h2>AndroidScreencast使用场景</h2>
<p>虽然AndroidScreencast看起来性能较差，使用体验不佳(毕竟没法在电脑上灵活使用手机屏幕的交互操作)，但是依然有一些特定场景非常有用：</p>
<ul class="simple">
<li><p>公司的商业VPN软件和视频会议系统没有对应的Linux版本，但是可以在Android手机上使用：通过AndroidScreencast可以把手机屏幕放大到电脑屏幕上，可以清晰看清视频会议的共享桌面进行协作</p></li>
<li><p>在对外演示自己的Android上应用操作，可以通过电脑屏幕投影出来做演示，特别是一些会议投屏不支持手机直连，只能通过笔记本电脑输出。</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>结合 <a class="reference internal" href="vpn_hotspot.xhtml#vpn-hotspot"><span class="std std-ref">VPN Hotspot</span></a> ，你可以随时随地移动办公 ^_^</p>
</div>
</section>
<section id="id6">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://www.howtogeek.com/howto/42491/how-to-remote-view-and-control-your-android-phone/">How to Remote View and Control Your Android Phone</a><span class="link-target"> [https://www.howtogeek.com/howto/42491/how-to-remote-view-and-control-your-android-phone/]</span></p></li>
<li><p><a class="reference external" href="https://github.com/xSAVIKx/AndroidScreencast">AndroidScreencast GitHub网站</a><span class="link-target"> [https://github.com/xSAVIKx/AndroidScreencast]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>