<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Docker in Docker部署工具kind</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="docker-in-dockerkind">
<span id="docker-in-docker-kind"></span><h1>Docker in Docker部署工具kind</h1>
<p>在 <a class="reference internal" href="docker_in_docker_arch.xhtml#docker-in-docker-arch"><span class="std std-ref">Docker in Docker架构</span></a> 中，可以通过一个单节点Docker主机运行多个Docker容器，而在Docker容器中运行Docker容器。这种方式可以模拟出一个大规模的Kubernetes集群。</p>
<p>在早期的GitHub项目 <a class="reference external" href="https://github.com/Mirantis/kubeadm-dind-cluster">Mirantis/kubeadm-dind-cluster</a><span class="link-target"> [https://github.com/Mirantis/kubeadm-dind-cluster]</span> 上发展出一个非常灵活的 <a class="reference external" href="https://kind.sigs.k8s.io">本地Kubernetes集群部署工具kind</a><span class="link-target"> [https://kind.sigs.k8s.io]</span> ，简单的命令就能够在一台物理机上构建出多个Kubernetes集群，完全模拟生产环境部署。这对Kubernetes开发、测试、部署演练有非常大的帮助。</p>
<figure class="align-default" id="id4">
<img alt="../../_images/docker_in_docker_kind.png" src="../../_images/docker_in_docker_kind.png" style="width: 394.0px; height: 237.60000000000002px;" />
<figcaption>
<p><span class="caption-text">Kind的Logo是一个非常形象化的漂流瓶里的Kubernetes/Docker集装箱船模型</span></p>
</figcaption>
</figure>
<section id="id1">
<h2>运行环境准备</h2>
<p>为了达到最佳性能和功能，我在 Docker in Docker 的测试运行环境中，采用的是:</p>
<ul>
<li><p>CentOS 8 - 可以直接 <a class="reference internal" href="../../linux/redhat_linux/centos/install_centos8.xhtml#install-centos8"><span class="std std-ref">安装CentOS8</span></a> 或者 <a class="reference internal" href="../../linux/redhat_linux/centos/upgrade_centos_7_to_8.xhtml#upgrade-centos-7-to-8"><span class="std std-ref">升级CentOS 7到CentOS 8</span></a></p></li>
<li><p>Docker-CE最新版本 - <a class="reference internal" href="../startup/install_docker_centos8.xhtml#install-docker-centos8"><span class="std std-ref">在CentOS 8上安装Docker CE</span></a> 这里我采用docker-ce最新版本:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">dnf</span> <span class="n">config</span><span class="o">-</span><span class="n">manager</span> <span class="o">--</span><span class="n">add</span><span class="o">-</span><span class="n">repo</span><span class="o">=</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">download</span><span class="o">.</span><span class="n">docker</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">centos</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">ce</span><span class="o">.</span><span class="n">repo</span>
<span class="n">dnf</span> <span class="n">install</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">download</span><span class="o">.</span><span class="n">docker</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">centos</span><span class="o">/</span><span class="mi">7</span><span class="o">/</span><span class="n">x86_64</span><span class="o">/</span><span class="n">stable</span><span class="o">/</span><span class="n">Packages</span><span class="o">/</span><span class="n">containerd</span><span class="o">.</span><span class="n">io</span><span class="o">-</span><span class="mf">1.2</span><span class="o">.</span><span class="mi">13</span><span class="o">-</span><span class="mf">3.2</span><span class="o">.</span><span class="n">el7</span><span class="o">.</span><span class="n">x86_64</span><span class="o">.</span><span class="n">rpm</span>
<span class="n">dnf</span> <span class="n">install</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span>
<span class="n">systemctl</span> <span class="n">enable</span> <span class="o">--</span><span class="n">now</span> <span class="n">docker</span>
</pre></div>
</div>
</li>
<li><p>Go最新版本 - <a class="reference internal" href="../../kubernetes/develop/install_golang.xhtml#install-golang"><span class="std std-ref">安装 Go 语言包</span></a> 源代码编译KIND需要go 1.14以上版本支持</p></li>
</ul>
</section>
<section id="kind">
<h2>安装kind</h2>
<ul>
<li><p>对于macOS/Linux可以直接下载官方提供的执行程序:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-$(uname)-amd64
chmod +x ./kind
mv ./kind /some-dir-in-your-PATH/kind
</pre></div>
</div>
</li>
<li><p>更为方便的是通过 <a class="reference internal" href="../../apple/studio/homebrew.xhtml#homebrew"><span class="std std-ref">Homebrew</span></a> 在Mac/Lknux上安装kind:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">brew</span> <span class="n">install</span> <span class="n">kind</span>
</pre></div>
</div>
</li>
</ul>
</section>
<section id="id2">
<h2>创建集群</h2>
<p>通过kind，可以非常方便创建集群，只需要一条命令:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kind</span> <span class="n">create</span> <span class="n">cluster</span>
</pre></div>
</div>
<p>以上命令将使用一个预先构建的 <a class="reference external" href="https://kind.sigs.k8s.io/docs/design/node-image">node image</a><span class="link-target"> [https://kind.sigs.k8s.io/docs/design/node-image]</span> 来 bootstrap 一个Kubernetes集群。在 docker hub 的 <a class="reference external" href="https://hub.docker.com/r/kindest/node/">kindest/node</a><span class="link-target"> [https://hub.docker.com/r/kindest/node/]</span> 可以找到这个预先构建的node image。</p>
<p>这里下载镜像可能需要较长的时间，有可能导致超时，所以在 <code class="docutils literal notranslate"><span class="pre">create</span> <span class="pre">cluster</span></code> 命令加上 <code class="docutils literal notranslate"><span class="pre">--wait</span></code> 参数来指定超时时间，以便在``control plane`` 达到ready状态再运行 <code class="docutils literal notranslate"><span class="pre">create</span> <span class="pre">cluster</span></code> 。</p>
<p>注意，上述简单的命令默认创建的集群名字是 <code class="docutils literal notranslate"><span class="pre">kind</span></code> ，可以通过 <code class="docutils literal notranslate"><span class="pre">--name</span></code> 参数来指定集群名称。</p>
<p>此时提示信息:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>Creating cluster &quot;kind&quot; ...
 ✓ Ensuring node image (kindest/node:v1.18.2)
 ✓ Preparing nodes
 ✓ Writing configuration
 ✓ Starting control-plane
 ✓ Installing CNI
 ✓ Installing StorageClass
Set kubectl context to &quot;kind-kind&quot;
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a nice day!
</pre></div>
</div>
<p>然后你可以 <a class="reference internal" href="../../kubernetes/startup_prepare/install_setup_kubectl.xhtml#install-setup-kubectl"><span class="std std-ref">安装和设置kubectl</span></a> ，然后验证部署的测试集群:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">cluster</span><span class="o">-</span><span class="n">info</span>
</pre></div>
</div>
<p>可以看到集群信息:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">Kubernetes</span> <span class="n">master</span> <span class="ow">is</span> <span class="n">running</span> <span class="n">at</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">13773</span>
<span class="n">KubeDNS</span> <span class="ow">is</span> <span class="n">running</span> <span class="n">at</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">13773</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">v1</span><span class="o">/</span><span class="n">namespaces</span><span class="o">/</span><span class="n">kube</span><span class="o">-</span><span class="n">system</span><span class="o">/</span><span class="n">services</span><span class="o">/</span><span class="n">kube</span><span class="o">-</span><span class="n">dns</span><span class="p">:</span><span class="n">dns</span><span class="o">/</span><span class="n">proxy</span>
</pre></div>
</div>
<p>并且可以看到这个集群只有一个节点:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">nodes</span>
</pre></div>
</div>
<p>输出信息:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>                 <span class="n">STATUS</span>   <span class="n">ROLES</span>    <span class="n">AGE</span>    <span class="n">VERSION</span>
<span class="n">kind</span><span class="o">-</span><span class="n">control</span><span class="o">-</span><span class="n">plane</span>   <span class="n">Ready</span>    <span class="n">master</span>   <span class="mi">148</span><span class="n">m</span>   <span class="n">v1</span><span class="o">.</span><span class="mf">18.2</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>上述简单的部署kind，默认仅部署了单机集群，并没有体现出趣味。如果你更感兴趣是部署多节点集群，则可以参考 <a class="reference internal" href="kind_multi_node.xhtml#kind-multi-node"><span class="std std-ref">kind多节点集群</span></a> 来部署一个完整的集群。</p>
</div>
</section>
<section id="id3">
<h2>参考</h2>
<blockquote>
<div><ul class="simple">
<li><p><a class="reference external" href="https://kind.sigs.k8s.io/docs/user/quick-start/">kind Quick Start</a><span class="link-target"> [https://kind.sigs.k8s.io/docs/user/quick-start/]</span></p></li>
</ul>
</div></blockquote>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>