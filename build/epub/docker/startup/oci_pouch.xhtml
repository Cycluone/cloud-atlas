<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>基于OCI标准的Pouch容器</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="ocipouch">
<span id="oci-pouch"></span><h1>基于OCI标准的Pouch容器</h1>
<section id="oci">
<h2>OCI标准</h2>
<p>Open Container Initiative (OCI) 是Linux基金会旗下负责 <a class="reference external" href="https://en.wikipedia.org/wiki/Container_(virtualization)">操作系统层虚拟化(容器)</a><span class="link-target"> [https://en.wikipedia.org/wiki/Container_(virtualization)]</span> 开放标准制定的项目。当前主要开发两项标准：</p>
<ul class="simple">
<li><p>运行时标准 (Runtime Specification, <a class="reference external" href="http://www.github.com/opencontainers/runtime-spec">runtime-spec</a><span class="link-target"> [http://www.github.com/opencontainers/runtime-spec]</span> )</p></li>
<li><p>镜像标准 (Image Specification, <a class="reference external" href="http://www.github.com/opencontainers/image-spec">image-spec</a><span class="link-target"> [http://www.github.com/opencontainers/image-spec]</span> )</p></li>
</ul>
<p>runtime标准概括了如何运行一个从磁盘解包的 <a class="reference external" href="https://github.com/opencontainers/runtime-spec/blob/master/bundle.md">文件系统包 (filesystem bundle)</a><span class="link-target"> [https://github.com/opencontainers/runtime-spec/blob/master/bundle.md]</span> (类似macOS上分发的软件bundle) 。从上层的OCI实现将下载一个OCI镜像，然后将镜像解包成为一个OCI运行时的文件系统包（OCI Runtime filesystem bundler）。此时OCI运行时文件系统包将被一个OCI runtime运行起来。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>OCI标准定义了容器运行时和镜像规范，使得不同容器实现（LXC, Docker, Kata, rkt) 以相同的标准运行，这样开发人员构建、打包和部署容器，可以运行在不同厂商的解决方案上。</p>
</div>
</section>
<section id="pouch">
<h2>Pouch</h2>
<p><a class="reference external" href="https://github.com/alibaba/pouch">PouchContainer</a><span class="link-target"> [https://github.com/alibaba/pouch]</span> 是阿里巴巴集团创建并遵循OCI容器标准的开源容器方案，目前用于集团基础架构。支持以下容器运行：</p>
<ul class="simple">
<li><p><a class="reference external" href="https://github.com/opencontainers/runc">runc</a><span class="link-target"> [https://github.com/opencontainers/runc]</span> 集运Linux cgroups和namespaces的container runtime，即Docker</p></li>
<li><p><a class="reference external" href="https://github.com/kata-containers/runtime">katacontainers</a><span class="link-target"> [https://github.com/kata-containers/runtime]</span> 基于hypervisor的container runtime， <a class="reference external" href="https://katacontainers.io/">Kata Containers</a><span class="link-target"> [https://katacontainers.io/]</span> 结合了内核虚拟化的轻量级容器，提供比单纯容器更好的安全隔离</p></li>
<li><p><a class="reference external" href="https://linuxcontainers.org/lxc/getting-started/">runlxc</a><span class="link-target"> [https://linuxcontainers.org/lxc/getting-started/]</span> 基于LXC的container runtime(对于较老的2.6.32+内核支持)</p></li>
</ul>
<img alt="../../_images/pouchcontainer-arch.png" src="../../_images/pouchcontainer-arch.png" style="width: 775.8px; height: 397.2px;" />
<p>PouchContainer主要的功能:</p>
<ul class="simple">
<li><p>提供了集成多个服务、hooks以及多种容器功能，这样可以兼容传统的运维模式。不过需要注意的是，pouch并不代表富容器，而是提供了富容器的部署选项；pouch也可以提供标准纯净的容器，通过插件实现富容器的支持。</p></li>
<li><p>支持基于hypervisor的容器(Kata Containers)提供跟多安全隔离</p></li>
<li><p>通过 <a class="reference external" href="https://github.com/alibaba/dragonfly">Dragonfly</a><span class="link-target"> [https://github.com/alibaba/dragonfly]</span> 实现P2P的镜像分发，加速大规模镜像分发速度</p></li>
<li><p>支持 Kubernetes Native 实现，即符合 <a class="reference external" href="https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/">Kubernetes Container Runtime Interface (CRI)</a><span class="link-target"> [https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/]</span> 标准，可以集成在Kubernetes集群</p></li>
</ul>
</section>
<section id="id2">
<h2>Pouch解析</h2>
<p>在上图中组件集成了很多开源项目和标准，以下做一个简单解析：</p>
<ul class="simple">
<li><p><a class="reference external" href="https://www.opencontainers.org/">OCI</a><span class="link-target"> [https://www.opencontainers.org/]</span> 维护OCI的运行时和镜像标准。当前的docker版本支持OCI镜像和运行时标准。</p></li>
<li><p><a class="reference external" href="http://containerd.io/">containerd</a><span class="link-target"> [http://containerd.io/]</span> 是一个用于管理完整容器生命周期的容器运行服务，包括镜像传输和存储，以及容器运行，容器监督和容器网络都是由 <code class="docutils literal notranslate"><span class="pre">contained</span></code> 负责</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">containerd-shim</span></code> 负责处理headless 容器（没有显示输出的容器），即负责容器的初始化。</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在计算机程序开发中， <a class="reference external" href="https://en.wikipedia.org/wiki/Shim_(computing)">shim</a><span class="link-target"> [https://en.wikipedia.org/wiki/Shim_(computing)]</span> （英文原义是垫片，帮助两个物体更好组装而填补缝隙的薄片）是一种透明拦截API调用并更改传递的参数，以便处理不同软件（库）平台调用的转换兼容。</p>
</div>
<ul class="simple">
<li><p><a class="reference external" href="http://runc.io/">runc容器</a><span class="link-target"> [http://runc.io/]</span> 是一个轻量级统一运行时容器，遵守了OCI标准。 <code class="docutils literal notranslate"><span class="pre">runc</span></code> 是 <code class="docutils literal notranslate"><span class="pre">containerd</span></code> 使用的，用于启动并运行符合OCI标准的容器。这个进程也通常被 <code class="docutils literal notranslate"><span class="pre">libcontainer</span></code> 重新包装。</p></li>
<li><p><a class="reference external" href="http://www.grpc.io/">gRPC</a><span class="link-target"> [http://www.grpc.io/]</span> 用于在docker-engine之间通讯。</p></li>
</ul>
</section>
<section id="id5">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://www.opencontainers.org/blog/2018/08/29/pouchcontainer">PouchContainer: How OCI Specifications Power Alibaba</a><span class="link-target"> [https://www.opencontainers.org/blog/2018/08/29/pouchcontainer]</span></p></li>
<li><p><a class="reference external" href="http://alexander.holbreich.org/docker-components-explained/">Docker components explained</a><span class="link-target"> [http://alexander.holbreich.org/docker-components-explained/]</span></p></li>
<li><p><a class="reference external" href="https://stackoverflow.com/questions/41645665/how-containerd-compares-to-runc">How containerd compares to runC</a><span class="link-target"> [https://stackoverflow.com/questions/41645665/how-containerd-compares-to-runc]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>