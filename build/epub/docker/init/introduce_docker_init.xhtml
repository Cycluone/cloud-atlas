<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Docker多进程容器init进程简介</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="dockerinit">
<span id="introduce-docker-init"></span><h1>Docker多进程容器init进程简介</h1>
<p>在容器技术领域，有一个咒语 <code class="docutils literal notranslate"><span class="pre">每个容器一个进程</span></code> ，也就是说你不应该将容器视为传统的 <code class="docutils literal notranslate"><span class="pre">大而全的虚拟机</span></code> ，而是轻量级专用容器。</p>
<p>然而，事实上，在一个容器中确实运行了多个进程，例如 <code class="docutils literal notranslate"><span class="pre">ENTRYPOINT</span></code> 就是一个不折不扣的 <code class="docutils literal notranslate"><span class="pre">init</span> <span class="pre">process</span></code> 。有时我们需要在容器中运行多个相互依赖的进程(例如 <a class="reference internal" href="../../kubernetes/concepts/workloads/pods/sidecar.xhtml#sidecar"><span class="std std-ref">sidecar概念和应用</span></a> ) 或者将历史应用程序迁移到容器环境中，此时我们需要一个传统的进程管理器以便在容器中运行多个进程。</p>
<section id="id1">
<h2>不同的进程管理器</h2>
<ul class="simple">
<li><p><a class="reference internal" href="../../linux/redhat_linux/systemd/index.xhtml#systemd"><span class="std std-ref">Systemd进程管理器</span></a> - 大而全的系统进程管理器，功能复杂且强大，对于Docker容器环境 <a class="reference internal" href="docker_systemd.xhtml#docker-systemd"><span class="std std-ref">Docker systemd进程管理器</span></a> 是比较重的解决方案，但是符合传统运维管理模式</p></li>
<li><p><a class="reference internal" href="../../linux/compute/supervisord.xhtml#supervisord"><span class="std std-ref">supervisord进程管理器</span></a> - 易于使用的进程管理器</p></li>
<li><p><a class="reference external" href="https://mmonit.com/monit/">monit</a><span class="link-target"> [https://mmonit.com/monit/]</span> 小型的进程管理器</p></li>
<li><p><a class="reference external" href="http://smarden.org/runit/">runit</a><span class="link-target"> [http://smarden.org/runit/]</span></p></li>
<li><p><a class="reference external" href="https://skarnet.org/software/s6/">s6</a><span class="link-target"> [https://skarnet.org/software/s6/]</span> 非常著名的进程管理器，在 <a class="reference external" href="https://github.com/just-containers/s6-overlay">s6-overlay</a><span class="link-target"> [https://github.com/just-containers/s6-overlay]</span> 项目提供了精彩的文档，并被很多用户推崇。我将在 <a class="reference internal" href="docker_s6.xhtml#docker-s6"><span class="std std-ref">Docker s6进程管理器</span></a> 中实践。</p></li>
<li><p><a class="reference internal" href="docker_tini.xhtml#docker-tini"><span class="std std-ref">Docker tini进程管理器</span></a> 是Docker默认进程管理器</p></li>
</ul>
</section>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://ahmet.im/blog/minimal-init-process-for-containers/">Choosing an init process for multi-process containers</a><span class="link-target"> [https://ahmet.im/blog/minimal-init-process-for-containers/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>