<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>nsenter管理namespace</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="nsenternamespace">
<span id="nsenter"></span><h1>nsenter管理namespace</h1>
<p>在深入学习moby架构之前，我想先介绍一个docker环境中常用的管理namespace的工具 <code class="docutils literal notranslate"><span class="pre">nsenter</span></code> 。</p>
<p>我们知道Docker使用了Linux的namespace来隔离容器资源，我们在维护Docker的运行实例时，经常需要在物理主机上去检查容器内部。这时候，有一个工具 <code class="docutils literal notranslate"><span class="pre">nsenter</span></code> 可以帮助我们进入容器的namespace。</p>
<section id="dockershell">
<h2>Docker的shell</h2>
<p>Docker提供了 <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">exec</span></code> 指令允许用户进入Docker容器:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">docker</span> <span class="n">exec</span> <span class="o">-</span><span class="n">it</span> <span class="n">CONTAINER_NAME</span> <span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>
</pre></div>
</div>
<p>nsenter和docker exec不同，nsenter不会进入cgroups，所以也就避免了资源限制。带来的潜在好处就是方便debugging和额外审计，但是对于远程访问， <strong>docker exec是当前推荐的方式</strong> 。</p>
<p>nsenter提供了一种进入现有namespaces的方法，也可以在一个新的namespace中启动一个进程。这样nsenter就可以做很多事情，但最重要但用途是进入Docker容器进行维护操作。</p>
</section>
<section id="id1">
<h2>nsenter使用</h2>
<ul>
<li><p>首先找出需要进入的容器的PID:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>PID=$(docker inspect --format {{.State.Pid}} &lt;container_name_or_ID&gt;)
</pre></div>
</div>
</li>
<li><p>然后使用以下命令进入容器:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>nsenter --target $PID --mount --uts --ipc --net --pid
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在 <a class="reference internal" href="../startup/install_docker_macos.xhtml#install-docker-macos"><span class="std std-ref">macOS安装Docker</span></a> 所使用的是Docker Desktop，采用的是macOS系统的HyperKit运行的Linux系统。</p>
</div>
<p>上述命令也可以通过一条命令结合起来:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>sudo nsenter -t $(docker inspect --format &#39;{{ .State.Pid  }}&#39; $(docker ps -lq)) -m -u -i -n -p -w
</pre></div>
</div>
<p>其中 <code class="docutils literal notranslate"><span class="pre">$(docker</span> <span class="pre">inspect</span> <span class="pre">--format</span> <span class="pre">'{{</span> <span class="pre">.State.Pid</span>&#160; <span class="pre">}}'</span> <span class="pre">[container_id])</span></code> 命令可以返回指定容器的PID，这样就能够通过 <code class="docutils literal notranslate"><span class="pre">nsenter</span> <span class="pre">-t</span></code> 命令进入指定PID的namespace。</p>
<p><code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">ps</span> <span class="pre">-lq</span></code> 命令则是返回最新运行的容器的container ID</p>
</section>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://github.com/jpetazzo/nsenter">Looking to start a shell inside a Docker container?</a><span class="link-target"> [https://github.com/jpetazzo/nsenter]</span></p></li>
<li><p><a class="reference external" href="https://coderwall.com/p/xwbraq/attach-to-your-docker-containers-with-ease-using-nsenter">Attach to your Docker containers with ease using nsenter</a><span class="link-target"> [https://coderwall.com/p/xwbraq/attach-to-your-docker-containers-with-ease-using-nsenter]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>