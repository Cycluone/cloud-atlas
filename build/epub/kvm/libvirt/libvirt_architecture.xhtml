<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>libvirt 架构</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="libvirt">
<span id="libvirt-architecture"></span><h1>libvirt 架构</h1>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>Arch Linux的运行和管理对于技术要求较高，需要比较深入地了解软件运行远离和关系，所以相对CentOS / Ubuntu难度高很多。不过，Arch Linux的文档撰写非常完善，可以通过社区文档对虚拟化技术深入学习。本文是学习实践的笔记。</p>
</div>
<p>Libvirt是一组用于提供管理虚拟机和虚拟化功能的软件，例如可以管理存储和网络接口。Libvirt软件集包括一系列稳定的C API，一个daemon服务(libvirtd)，以及命令行工具(virsh)。libvirt的主要目标是提供一个简单的方式来管理不同的虚拟化技术 / <a class="reference internal" href="../hypervisor.xhtml#hypervisor"><span class="std std-ref">hypervisor</span></a> ，例如KVM/QEMU，Xen, LXC, OpenVZ 或者 VirtualBox hypervisor等。</p>
<p>libvir主要功能包括:</p>
<ul class="simple">
<li><p>VM管理: domain的不同生命周期操作，例如，start, stop, pause, save, restore, migrate。很多设备类型，例如磁盘和网络借口，内存，CPU都支持热插拔操作。</p></li>
<li><p>远程主机管理: 所有的libvirt功能都可以在任何运行libvirt daemon的任何主机上实现，包括远程主机。通过简单使用SSH，不需要复杂的配置就可以支持远程连接。</p></li>
<li><p>存储管理: 运行libvirt daemon的主机可以管理不同的村粗：创建不同的镜像文件(qcow2, vmdk, raw …)，挂载NFS共享存储，处理现存的LVM卷组，创建新的LVM卷组和逻辑卷，裸磁盘设备分区，挂载iSCSI共享，等等。</p></li>
<li><p>网络接口管理: 运行libvirt daemon的主机可以管理物理和逻辑网络接口，配置和创建借口，网桥，vlan以及bond设备。</p></li>
<li><p>虚拟NAT和基于路由的网络: 运行libvirt daemon的主机可以管理和创建虚拟网络，使用防火墙规则实现路由器，提供VM透明访问host主机网络。</p></li>
</ul>
<section id="id1">
<h2>安装</h2>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>Arch Linux将libvirt相关软件的安装拆分，所以你需要对相关组件的功能了解后按需安装。没有类似Red Hat和Ubuntu这样一股脑全部安装。请仔细阅读社区文档，深入理解原理。</p>
</div>
<section id="id2">
<h3>服务器</h3>
<p>服务器上安装 libvirt 软件包，以及至少一个 <a class="reference internal" href="../hypervisor.xhtml#hypervisor"><span class="std std-ref">hypervisor</span></a> ，通常KVM激活情况下，libvirt KVM/QEMU驱动会作为主要libvirt驱动。</p>
<p>为了能够使用网络，需要分别安装以下组件:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">ebtables</span></code> 和 <code class="docutils literal notranslate"><span class="pre">dnsmasq</span></code> 是默认的 NAT/DHCP 网络所必须的</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">bridge-utils</span></code> 是网桥网络所必须的</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">openbsd-netcat</span></code> 是基于SSH远程管理所必须的</p></li>
</ul>
<p>为了能够使用网络，需要分别安装以下组件:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">ebtables</span></code> 和 <code class="docutils literal notranslate"><span class="pre">dnsmasq</span></code> 是默认的 NAT/DHCP 网络所必须的</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">bridge-utils</span></code> 是网桥网络所必须的</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">openbsd-netcat</span></code> 是基于SSH远程管理所必须的</p></li>
</ul>
<p>为了能够使用网络，需要分别安装以下组件:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">ebtables</span></code> 和 <code class="docutils literal notranslate"><span class="pre">dnsmasq</span></code> 是默认的 NAT/DHCP 网络所必须的</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">bridge-utils</span></code> 是网桥网络所必须的</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">openbsd-netcat</span></code> 是基于SSH远程管理所必须的</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>如果使用 <code class="docutils literal notranslate"><span class="pre">firewalld</span></code> ，则需要修改 <code class="docutils literal notranslate"><span class="pre">/etc/firewalld/firewalld.conf</span></code> 的 firewall backend 配置，从 <code class="docutils literal notranslate"><span class="pre">nftables</span></code> 修改成 <code class="docutils literal notranslate"><span class="pre">iptables</span></code> 。</p>
</div>
<p>安装:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pacman</span> <span class="o">-</span><span class="n">S</span> <span class="n">libvirt</span> <span class="n">ebtables</span> <span class="n">dnsmasq</span> <span class="n">bridge</span><span class="o">-</span><span class="n">utils</span> <span class="n">openbsd</span><span class="o">-</span><span class="n">netcat</span>
</pre></div>
</div>
</section>
<section id="id3">
<h3>客户端</h3>
<p>libvirt客户端是用户接口，用于管理和访问虚拟机：</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">virsh</span></code> 命令行管理和配置domain工具 (软件包 <code class="docutils literal notranslate"><span class="pre">libvirt</span></code> )</p></li>
<li><p>GNOME Boxes 是一个简单的Gnome 3应用程序，用于访问远程和虚拟机 (软件包 <code class="docutils literal notranslate"><span class="pre">gnome-boxes</span></code> )</p></li>
<li><p>Libvirt Sandbox 应用程序沙盒toolkit (软件包 <code class="docutils literal notranslate"><span class="pre">libvirt-sandbox</span></code> ，需要使用 AUR 安装)</p></li>
<li><p>Remote viewer - 简单的远程显示客户端 (软件包 <code class="docutils literal notranslate"><span class="pre">virt-viewer</span></code> )</p></li>
<li><p>Qt VirtManager - 管理虚拟机的Qt应用程序 (软件包 <code class="docutils literal notranslate"><span class="pre">qt-virt-manager</span></code> ，需要使用 AUR 安装)</p></li>
<li><p>Virtual Machine Manager - 通过libvirt管理KVM, Xen, LXC的图形化工具</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>实际我在使用中仅安装 <code class="docutils literal notranslate"><span class="pre">libvirt</span></code> 软件包，只使用 <code class="docutils literal notranslate"><span class="pre">virsh</span></code> 命令行工具。</p>
</div>
</section>
</section>
<section id="id4">
<h2>配置libvirt</h2>
<p>在系统级别的系统管理，libvirt最少需要设置认证和启动daemon。</p>
<section id="id5">
<h3>设置认证</h3>
<p>libvirt daemon允许系统管理员选择用于客户端每次网络socket链接的认证机制。这个控制是通过libvirt daemon的主配置文件 <code class="docutils literal notranslate"><span class="pre">/etc/libvirt/libvirtd.conf</span></code> 管理。每个libvirt socket可以配置独立的认证机制。当前可以选择的认证机制有: <code class="docutils literal notranslate"><span class="pre">none</span></code> ， <code class="docutils literal notranslate"><span class="pre">polkit</span></code> 和 <code class="docutils literal notranslate"><span class="pre">sasl</span></code> 。</p>
<p>由于libvirt安装过程安装了polkit作为以来，所以默认在 <code class="docutils literal notranslate"><span class="pre">unix_sock_auth</span></code> 参数配置的是 <code class="docutils literal notranslate"><span class="pre">polkit</span></code> 。而基于文件的授权则没有提供。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>检查libvirt默认安装配置的 <code class="docutils literal notranslate"><span class="pre">/etc/libvirt/libvirtd.conf</span></code> 中实际上允许任何人链接socket，即没有限制:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1">#auth_unix_ro = &quot;none&quot;</span>
<span class="c1">#auth_unix_rw = &quot;none&quot;</span>
</pre></div>
</div>
<p>TCP链接认证默认是sasl:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1">#auth_tcp = &quot;sasl&quot;</span>
</pre></div>
</div>
</div>
<p>待续</p>
</section>
</section>
<section id="id6">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://wiki.archlinux.org/index.php/Libvirt">Arch Linux文档 - libvirt</a><span class="link-target"> [https://wiki.archlinux.org/index.php/Libvirt]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>