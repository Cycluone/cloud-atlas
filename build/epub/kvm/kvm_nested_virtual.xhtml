<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>KVM嵌套虚拟化</title>
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="kvm">
<span id="kvm-nested-virtual"></span><h1>KVM嵌套虚拟化</h1>
<p>为了能够在一台物理主机（MacBook Pro）上能够模拟出OpenStack集群，即同时运行多个hypervisor，需要使用嵌套虚拟化(Nested Virtualization)。</p>
<img alt="../_images/inception.jpg" src="../_images/inception.jpg" style="width: 270.0px; height: 400.0px;" />
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在支持 <a class="reference internal" href="intel_vmcs.xhtml#intel-vmcs"><span class="std std-ref">Intel VMCS</span></a> 硬件加速的CPU上使用嵌套虚拟化可以得到较大性能的提升，在Hawwell核心之前的Intel处理器则使用软件方式实现嵌套虚拟化。</p>
<p>在 <a class="reference external" href="https://software.intel.com/en-us/blogs/2014/12/12/enabling-virtual-machine-control-structure-shadowing-on-a-nested-virtual-machine">Enabling Virtual Machine Control Structure Shadowing On A Nested Virtual Machine With The Intel® Xeon® E5-2600 V3 Product Family</a><span class="link-target"> [https://software.intel.com/en-us/blogs/2014/12/12/enabling-virtual-machine-control-structure-shadowing-on-a-nested-virtual-machine]</span> 介绍了Haswell志强处理器平台激活VMCS Shadow特性来运行嵌套虚拟化的案例。</p>
<p>我所使用的 <a class="reference internal" href="../linux/ubuntu_linux/ubuntu_on_mbp.xhtml#ubuntu-on-mbp"><span class="std std-ref">MacBook Pro上运行Ubuntu</span></a> 使用的是等同于Haswell的 <a class="reference internal" href="../studio/hardware/intel_core_i7_4850hq.xhtml#intel-core-i7-4850hq"><span class="std std-ref">Intel Core i7-4850HQ处理器</span></a> 处理器，所以也可以实现硬件加速的嵌套虚拟化。</p>
</div>
<ul>
<li><p>检查系统内核是否激活嵌套虚拟化:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cat</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">module</span><span class="o">/</span><span class="n">kvm_intel</span><span class="o">/</span><span class="n">parameters</span><span class="o">/</span><span class="n">nested</span>
</pre></div>
</div>
</li>
</ul>
<p>输入如果是 <code class="docutils literal notranslate"><span class="pre">Y</span></code> 就表示已经激活嵌套虚拟化，如果是 <code class="docutils literal notranslate"><span class="pre">N</span></code> 则执行下一步激活</p>
<ul>
<li><p>(根据需要执行这一步)激活嵌套虚拟化步骤是通过重新加载KVM intel内核模块实现:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">rmmod</span> <span class="n">kvm</span><span class="o">-</span><span class="n">intel</span>
<span class="n">sudo</span> <span class="n">sh</span> <span class="o">-</span><span class="n">c</span> <span class="s2">&quot;echo &#39;options kvm-intel nested=y&#39; &gt;&gt; /etc/modprobe.d/kvm_intel.conf&quot;</span>
<span class="n">sudo</span> <span class="n">modprobe</span> <span class="n">kvm</span><span class="o">-</span><span class="n">intel</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在Ubuntu 18.10上，已经不需要执行这步–因为默认已经有配置文件 <code class="docutils literal notranslate"><span class="pre">/etc/modprobe.d/qemu-system-x86.conf</span></code> 配置文件激活了 <code class="docutils literal notranslate"><span class="pre">kvm_intel</span></code> 模块的嵌套虚拟化（内容如下）:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">options</span> <span class="n">kvm_intel</span> <span class="n">nested</span><span class="o">=</span><span class="mi">1</span>
</pre></div>
</div>
<p>并且通过检查 <code class="docutils literal notranslate"><span class="pre">cat</span> <span class="pre">/sys/module/kvm_intel/parameters/nested</span></code> 可以看到内核模块 <code class="docutils literal notranslate"><span class="pre">kvm-intel</span></code> 已经激活了嵌套虚拟化。</p>
</div>
<ul>
<li><p>检查是否激活了 <a class="reference internal" href="intel_vmcs.xhtml#intel-vmcs"><span class="std std-ref">Intel VMCS</span></a> Shadowing:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cat</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">module</span><span class="o">/</span><span class="n">kvm_intel</span><span class="o">/</span><span class="n">parameters</span><span class="o">/</span><span class="n">enable_shadow_vmcs</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p><a class="reference internal" href="intel_vmcs.xhtml#intel-vmcs"><span class="std std-ref">Intel VMCS</span></a> 特性需要CPU硬件特性支持，必须是Haswell核心之后支持AVX2版本的处理器。如果CPU支持VMCS，则可以在 <code class="docutils literal notranslate"><span class="pre">/etc/modprobe.d/kvm-intel.conf</span></code> 配置文件中添加以下参数:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">options</span> <span class="n">kvm</span><span class="o">-</span><span class="n">intel</span> <span class="n">nested</span><span class="o">=</span><span class="mi">1</span>
<span class="n">options</span> <span class="n">kvm</span><span class="o">-</span><span class="n">intel</span> <span class="n">enable_shadow_vmcs</span><span class="o">=</span><span class="mi">1</span>
</pre></div>
</div>
<p>然后重新启动物理主机或者重新加载 <code class="docutils literal notranslate"><span class="pre">kvm-intel</span></code> 模块。</p>
</div>
<ul>
<li><p>将虚拟化扩展输出给虚拟机，例如 <a class="reference internal" href="../openstack/devstack.xhtml#devstack"><span class="std std-ref">DevStack</span></a></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">virsh</span> <span class="n">edit</span> <span class="n">devstack</span>
</pre></div>
</div>
</li>
</ul>
<p>将内容:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">&lt;</span><span class="n">cpu</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;custom&#39;</span> <span class="n">match</span><span class="o">=</span><span class="s1">&#39;exact&#39;</span> <span class="n">check</span><span class="o">=</span><span class="s1">&#39;partial&#39;</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">model</span> <span class="n">fallback</span><span class="o">=</span><span class="s1">&#39;allow&#39;</span><span class="o">&gt;</span><span class="n">Haswell</span><span class="o">-</span><span class="n">noTSX</span><span class="o">-</span><span class="n">IBRS</span><span class="o">&lt;/</span><span class="n">model</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">cpu</span><span class="o">&gt;</span>
</pre></div>
</div>
<p>修改成:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">&lt;</span><span class="n">cpu</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;host-passthrough&#39;</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">cpu</span><span class="o">&gt;</span>
</pre></div>
</div>
<p>然后重启虚拟机，在虚拟机内部执行 <code class="docutils literal notranslate"><span class="pre">lscpu</span></code> 可以看到如下输出证明已经支持KVM虚拟化:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">Virtualization</span><span class="p">:</span>      <span class="n">VT</span><span class="o">-</span><span class="n">x</span>
<span class="n">Hypervisor</span> <span class="n">vendor</span><span class="p">:</span>   <span class="n">KVM</span>
<span class="n">Virtualization</span> <span class="nb">type</span><span class="p">:</span> <span class="n">full</span>
</pre></div>
</div>
<p>另外在虚拟机内部可以看到增加了设备文件 <code class="docutils literal notranslate"><span class="pre">/dev/kvm</span></code></p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>详细请参考 <a class="reference external" href="https://docs.openstack.org/devstack/latest/guides/devstack-with-nested-kvm.html">Configure DevStack with KVM-based Nested Virtualization</a><span class="link-target"> [https://docs.openstack.org/devstack/latest/guides/devstack-with-nested-kvm.html]</span></p>
<p>这里我创建的第一个虚拟机 <code class="docutils literal notranslate"><span class="pre">devstack</span></code> 将作为Openstack的开发环境。</p>
</div>
<section id="id1">
<h2>模拟物理服务器集群</h2>
<p>为了在笔记本环境中通过嵌套虚拟化模拟出多个物理服务器，在实验环境中， <a class="reference internal" href="startup/clone_vm.xhtml#clone-vm"><span class="std std-ref">复制KVM虚拟机</span></a> 创建的3台模拟物理服务器的主机 <code class="docutils literal notranslate"><span class="pre">machine-1</span></code> ， <code class="docutils literal notranslate"><span class="pre">machine-2</span></code> 和 <code class="docutils literal notranslate"><span class="pre">machine-3</span></code> 也请按照上述方法设置好嵌套虚拟化，后续测试将采用这3台主机部署OpenStack集群。</p>
</section>
<section id="id2">
<h2>下一步</h2>
<p>为了能够稳定运行 <a class="reference internal" href="../openstack/index.xhtml#openstack"><span class="std std-ref">OpenStack Atlas</span></a> 的开发测试环境 <a class="reference internal" href="../openstack/devstack.xhtml#devstack"><span class="std std-ref">DevStack</span></a> ，我们需要为 <code class="docutils literal notranslate"><span class="pre">devstack</span></code> 增加一块大容量的磁盘：</p>
<ul class="simple">
<li><p><a class="reference internal" href="kvm_vdisk_live.xhtml#kvm-vdisk-live"><span class="std std-ref">KVM虚拟机动态添加、调整磁盘</span></a></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>