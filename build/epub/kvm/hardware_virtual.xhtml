<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>硬件虚拟化</title>
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="hardware-virtual">
<span id="id1"></span><h1>硬件虚拟化</h1>
<p><a class="reference external" href="https://en.wikipedia.org/wiki/Virtualization#Hardware_virtualization">Hardware virtualization</a><span class="link-target"> [https://en.wikipedia.org/wiki/Virtualization#Hardware_virtualization]</span> 也称为平台虚拟化（platform virtualization），指创建的虚拟机就好像在真实主机上运行的操作系统。在硬件虚拟化的虚拟机中软件运行是和底层物理硬件资源隔离的，Guest操作系统和Host操作系统可以是完全不同内核和不同种类的操作系统。</p>
<p>在2005年和2006年，Intel和AMD分别提供了x86架构下的硬件辅助虚拟化技术。其中，Intel虚拟化技术称为 <code class="docutils literal notranslate"><span class="pre">VT-x</span></code> ，在笔记本到服务器的很多主流Intel芯片都提供了VT-x虚拟化技术支持。在 <a class="reference internal" href="index.xhtml#kvm"><span class="std std-ref">KVM Atlas</span></a> 中，我实践的KVM虚拟化技术大多也是基于Intel VT-x硬件辅助虚拟化实现的。</p>
<p>不过，实际上现代主流处理器，包括X86(intel和AMD) / ARM / PowerPC 等都对KVM有不同程度的支持，我们可以通过处理器信息检查了解CPU支持虚拟化情况:</p>
<ul class="simple">
<li><p>Intel:</p>
<ul>
<li><p>在Linux操作系统中通过 <code class="docutils literal notranslate"><span class="pre">/proc/cpuinfo</span></code> 检查是否包含 <code class="docutils literal notranslate"><span class="pre">vmx</span></code> 关键字</p></li>
<li><p>在 macOS中通过命令检查 <code class="docutils literal notranslate"><span class="pre">sysctl</span> <span class="pre">machdep.cpu.features</span></code> 检查。</p></li>
</ul>
</li>
</ul>
<p><code class="docutils literal notranslate"><span class="pre">vmx</span></code> 即 Virtual Machine Extensions (虚拟机扩展)，添加了10条新指令: VMPTRLD, VMPTRST, VMCLEAR, VMREAD, VMWRITE, VMCALL, VMLAUNCH, VMRESUME, VMXOFF, 和 VMXON 。这些指令允许进入和退出一个虚拟化执行模式，此时guest OS以为自己运行在完全权限（ring 0），而其实Host OS依然受到保护。</p>
<ul class="simple">
<li><p>AMD:</p>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">/proc/cpuinfo</span></code> 中 <code class="docutils literal notranslate"><span class="pre">svm</span></code> 关键字</p></li>
</ul>
</li>
<li><p>ARM:</p>
<ul>
<li><p>ARM从ARMv7-A处理器的Contex-A15开始支持虚拟化，包括Contex-A7和Contex-A17</p></li>
<li><p>ARMv8-A处理器也支持虚拟化</p></li>
<li><p>详见 <a class="reference external" href="https://www.arm.com/products/silicon-ip-cpu">ARM products processes</a><span class="link-target"> [https://www.arm.com/products/silicon-ip-cpu]</span></p></li>
</ul>
</li>
</ul>
<section id="id2">
<h2>嵌套虚拟化</h2>
<p>嵌套虚拟化在guest操作系统内部也提供了hypervisor功能，这样第一层虚拟机内部还可以再运行第二层虚拟机，对于云计算平台，甚至可以嵌套不同的云计算技术，例如在OpenStack云计算环境中嵌套运行Vmware云计算平台，对于一些传统的IT架构可以无缝迁移到新的云计算平台。</p>
<p>嵌套虚拟化的实现是基于 <a class="reference external" href="https://en.wikipedia.org/wiki/Hardware-assisted_virtualization">硬件辅助虚拟化</a><span class="link-target"> [https://en.wikipedia.org/wiki/Hardware-assisted_virtualization]</span> 的切分计算机架构来实现的。如果没有提供硬件支持的嵌套虚拟化，一些软件技术也能够实现嵌套虚拟化，不过现在越来越多的嵌套虚拟化是需要硬件支持的。例如，从Intel Haswell微架构开始（2013年），Intel开始提供 <a class="reference external" href="https://en.wikipedia.org/wiki/VMCS_shadowing">VMCS shadowing</a><span class="link-target"> [https://en.wikipedia.org/wiki/VMCS_shadowing]</span> 技术来支持嵌套虚拟化加速。</p>
<ul class="simple">
<li><p><a class="reference internal" href="intel_vmcs.xhtml#intel-vmcs"><span class="std std-ref">Intel VMCS</span></a></p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>我所使用的模拟集群部署的MacBook Pro 2015 later恰好是等同于Haswell的Crystal Well系列处理器（ <a class="reference internal" href="../studio/hardware/intel_core_i7_4850hq.xhtml#intel-core-i7-4850hq"><span class="std std-ref">Intel Core i7-4850HQ处理器</span></a> ），在 <a class="reference internal" href="kvm_nested_virtual.xhtml#kvm-nested-virtual"><span class="std std-ref">KVM嵌套虚拟化</span></a> 我就只需要使用一台MacBook Pro来模拟OpenStack集群。请参考我的 <a class="reference internal" href="kvm_nested_virtual.xhtml#kvm-nested-virtual"><span class="std std-ref">KVM嵌套虚拟化</span></a> 来了解嵌套虚拟化的神奇能力。</p>
</div>
</section>
<section id="id4">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://www.linux-kvm.org/page/Processor_support">KVM Process support</a><span class="link-target"> [https://www.linux-kvm.org/page/Processor_support]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>