<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>OpenStack 安装概览</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="openstack">
<span id="openstack-install-overview"></span><h1>OpenStack 安装概览</h1>
<p>OpenStack是一个支持所有类型运计算环境的开源云计算平台。项目的目标是简化事实，强大的伸缩性以及丰富的功能。</p>
<p>OpenStack通过多种互补的服务提供了基础架构即服务(Infrastructure-as-a-Service, IaaS)解决方案，每个服务提供了应用程序编程接口(Application Programming Interface, API)来促进这个集成。</p>
<p>这里的 <a class="reference internal" href="index.xhtml#openstack-installation"><span class="std std-ref">OpenStack安装</span></a> 是一步步完成主要的OpenStack服务实现一个新用户可工作案例架构，虽然不是生产环境系统安装，但是创建了一个最小化可验证的OpenStack部署。</p>
<p>在熟悉了基本安装、配置、操作和故障排查之后，就可以进一步实现生产环境架构的 <a class="reference internal" href="../deployment/index.xhtml#openstack-deployment"><span class="std std-ref">OpenStack部署</span></a> :</p>
<ul class="simple">
<li><p>决策和实现必要的核心和可选服务来实现性能和容灾的优化</p></li>
<li><p>使用防火墙、加密和服务策略来增强安全</p></li>
<li><p>通过Ansible, Chef, Puppet 或 Salt来自动化部署和管理产品环境</p></li>
</ul>
<section id="id1">
<h2>案例架构</h2>
<p>我的部署实践是在3台物理服务器上实现OpenStack的微型架构，底层基础服务架构将混合裸机和Docker来运行，以便获得最佳性能：例如，消息队列、数据库、分布式存储。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>初始底层存储、消息队列、数据库采用物理服务器部署，成熟以后（性能、稳定性），迁移到docker中运行，以方便重复部署。但是，不会直接运行于Kubernetes，除非能够在部署快速部署一套Kubernetes集群（目前还缺乏实践）。</p>
<p>不过，底层服务docker或者Kubernetes虽然在大规模重复部署上有优势，但是带来了多层复杂化，排查故障更为困难。总之，架构和能力有关，不同的能力层次对于复杂度和可运维性有不同的理解。</p>
</div>
<p>组件：</p>
<ul class="simple">
<li><p>管控</p></li>
<li><p>计算</p></li>
<li><p>块存储</p></li>
<li><p>对象存储</p></li>
<li><p>网络</p></li>
</ul>
<section id="id2">
<h3>网络选型</h3>
<p>OpenStack有两种网络选型：</p>
<ul class="simple">
<li><p>Provider networks:
主要是2层(交换)网络服务和VLAN分片网络。基础是将虚拟网络桥接到物理网络并且依赖物理网络架构来实现三层(路由)服务。另外，一个DHCP服务提供IP地址信息给虚拟机实例。</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>这是一种比较简单的经典网络结构</p>
</div>
<ul class="simple">
<li><p>Self-service networks:</p></li>
</ul>
<p>自服务网络选型是采用VXLAN这样的overlay分片方式实现self-service networks。底层，使用NAT将虚拟网络路由给物理网络，这个网络选型提供了高级服务功能，例如LBaaS和FWaaS。</p>
<p>OpenStack用户可以在不知道底层数据网络的情况下构建虚拟网络，包括VLAN网络，如果配置了layer-2插件。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>我采用Self-service network，以便实现VXLAN的虚拟网络。</p>
</div>
<figure class="align-default">
<img alt="../../_images/network2-services.png" src="../../_images/network2-services.png" />
</figure>
<ul class="simple">
<li></li>
</ul>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>