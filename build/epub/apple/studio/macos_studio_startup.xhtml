<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>macOS工作室起步</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="macos">
<span id="macos-studio-startup"></span><h1>macOS工作室起步</h1>
<p>在日常工作中使用的笔记本是MacBook Pro，性能非常卓越的笔记本，虽然我在 <a class="reference internal" href="../../studio/introduce_my_studio.xhtml#introduce-my-studio"><span class="std std-ref">模拟云计算的Studio</span></a> 使用了旧款MacBook Pro采用 <a class="reference internal" href="../../kvm/kvm_nested_virtual.xhtml#kvm-nested-virtual"><span class="std std-ref">KVM嵌套虚拟化</span></a> 来构建与计算集群，Host主机使用的操作系统是Linux ( <a class="reference internal" href="../../linux/index.xhtml#linux"><span class="std std-ref">Linux Atlas</span></a> ) ，但是作为图形桌面系统， 即使如 <a class="reference internal" href="../../linux/ubuntu_linux/ubuntu_desktop.xhtml#ubuntu-desktop"><span class="std std-ref">Ubuntu Desktop</span></a>  和 <a class="reference internal" href="../../linux/arch_linux/archlinux_on_mbp.xhtml#archlinux-on-mbp"><span class="std std-ref">MacBook Pro上运行Arch Linux</span></a> 依然缺乏必要的商用软件，导致我花费了太多时间精力在模拟Windows和Android上，仅仅是为了通过 <a class="reference internal" href="../../linux/arch_linux/wine.xhtml#wine"><span class="std std-ref">wine环境运行Windows程序</span></a> 或者 <a class="reference internal" href="../../android/virtual/anbox.xhtml#anbox"><span class="std std-ref">Anbox运行Andorid程序</span></a> 运行一个钉钉即时通讯工具。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>商业公司对Linux使用往往仅限于服务器端投入，对于Linux桌面客户端则完全是放弃，因为无利可图。这导致技术工作者想要完全使用Linux工作需要限制自己的应用番位。类似阿里这样的企业，其日常工作沟通完全基于钉钉，这就使得使用Linux工作极其困难。</p>
<p>不过，我有一个思路是采用 <a class="reference internal" href="../../linux/chromium_os/index.xhtml#chromium-os"><span class="std std-ref">Chromium OS</span></a> 工作，我相信通过一定的技术努力，可以通过Android应用方式打通Linux和商业平台的连接。</p>
</div>
<p>言归正传，如果你的工作基于Linux开发或运维，则macOS是一个非常好的兼容Unix/Linux和Windows的图形工作平台，很容易流畅使用商用软件。</p>
<p>我在这里整理如何打造精简的macOS工作平台，首先安装必要的工作软件，然后再部署虚拟化平台，实现开发和运维的完美融合。</p>
<section id="id1">
<h2>macOS软件安装和设置</h2>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>其实我梳理了一下我自己常用的应用软件，其实非常有限 – 我的目标是摈弃过多的工具，集中精力打磨合适的工具来完成重点工作。</p>
</div>
<ul class="simple">
<li><p>Magnet - 非常推荐的一款桌面窗口平铺化工具，弥补了macOS无法像Win10那样提供窗口并排的缺憾。</p></li>
</ul>
<figure class="align-default">
<img alt="../../_images/magnet.png" src="../../_images/magnet.png" style="width: 600.0px; height: 185.25px;" />
</figure>
<ul class="simple">
<li><p>iTerm2 - 替代默认Terminal的工具，功能非常强大，对于需要远程访问Linux服务器必备。</p></li>
<li><p><a class="reference internal" href="../../docker/startup/install_docker_macos.xhtml#install-docker-macos"><span class="std std-ref">macOS安装Docker</span></a></p></li>
</ul>
<p>如前所述，在macOS上我使用的虚拟化技术之一就是基于macOS操作系统自带Hypervisor的xhyve。在这个基础上，开源项目 <a class="reference internal" href="../../docker/moby/hyperkit/index.xhtml#hyperkit"><span class="std std-ref">hyperkit</span></a> 成为 <a class="reference internal" href="../../docker/index.xhtml#docker"><span class="std std-ref">Docker Atlas</span></a> 和 <a class="reference internal" href="../../docker/moby/hyperkit/multipass.xhtml#multipass"><span class="std std-ref">Multipass</span></a> 的共有基础。</p>
<p>由于HyperKit源代码安装比较繁琐，所以采用先安装Docker for macOS Desktop软件包来获得HyperKit，也就为后续安装Multipass打下基础。</p>
<ul class="simple">
<li><p><a class="reference internal" href="../vmware/vmware_fusion.xhtml#vmware-fusion"><span class="std std-ref">Studio环境中的VMware Fusion</span></a></p></li>
</ul>
<p>安装了Docker之后，紧接着安装VMware Fusion虚拟化软件，以便能够借助 <a class="reference internal" href="../vmware/vmware_nested_virtual.xhtml#vmware-nested-virtual"><span class="std std-ref">VMware嵌套虚拟化</span></a> 构建一个 <a class="reference internal" href="../../openstack/index.xhtml#openstack"><span class="std std-ref">OpenStack Atlas</span></a> 集群，并在openstack集群之上构建Kubernetes集群或者其他分布式系统。</p>
<ul class="simple">
<li><p><a class="reference internal" href="homebrew.xhtml#homebrew"><span class="std std-ref">Homebrew</span></a></p></li>
</ul>
<p>很多GNU/Linux工具通过HomeBrew安装是最为快捷方便的，在macOS上，不论是 <a class="reference internal" href="../../kubernetes/startup_prepare/install_run_minikube.xhtml#install-run-minikube"><span class="std std-ref">安装和运行minikube</span></a> 还是 <a class="reference internal" href="../../devops/docs/write_doc.xhtml#write-doc"><span class="std std-ref">写文档</span></a> (安装Python/Sphinx) ，都需要使用 <a class="reference internal" href="homebrew.xhtml#homebrew"><span class="std std-ref">Homebrew</span></a> 。</p>
<ul class="simple">
<li><p><a class="reference internal" href="../../docker/moby/hyperkit/multipass.xhtml#multipass"><span class="std std-ref">Multipass</span></a></p></li>
</ul>
<p>在Docker安装之后，系统已经具备了HyperKit，这样安装Multipass就不再需要安装HyperKit。可以直接安装Multipass。</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>