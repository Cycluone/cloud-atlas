<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>macOS工作环境</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="macos">
<span id="introduce-macos-studio"></span><h1>macOS工作环境</h1>
<section id="id1">
<h2>目标</h2>
<p>当我拿到全新安装的macOS(当前是Catalina 10.15.3)，我的目标是:</p>
<ul class="simple">
<li><p>构建虚拟化和容器化开发环境，把所有的工作都尽可能在VM和Container中运行，这样可以随时更换工作环境(迁移虚拟机和容器)</p></li>
<li><p>保持Host主机的纯净化，仅在本机运行macOS开发所需的软件</p></li>
</ul>
</section>
<section id="id2">
<h2>实现规划</h2>
<section id="id3">
<h3>虚拟化</h3>
<p>在macOS上我推荐使用的虚拟化技术主要有:</p>
<ul class="simple">
<li><p><a class="reference internal" href="../../docker/moby/hyperkit/index.xhtml#hyperkit"><span class="std std-ref">hyperkit</span></a> - 底层采用了 <a class="reference internal" href="../../kvm/macos_xhyve/xhyve.xhtml#xhyve"><span class="std std-ref">xhyve - macOS平台的KVM</span></a> 来使用macOS内建的Hypervisor.framework实现虚拟化</p></li>
</ul>
<p>hyperkit也是在macOS上运行Docker的基础，并且Ubuntu提供了基于hyperkit的完整桌面虚拟化解决方案 <a class="reference internal" href="../../docker/moby/hyperkit/multipass.xhtml#multipass"><span class="std std-ref">Multipass</span></a> ，可以非常方便在macOS上运行多个Ubuntu服务器，这要就可以非常轻松构建服务器集群。</p>
<p>我在公司配发的MacBook Pro笔记本上，通过这种解决方案可以运行一个完整的Kubernetes集群，能够做很多开发和验证工作。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p><a class="reference internal" href="../../docker/startup/install_docker_macos.xhtml#install-docker-macos"><span class="std std-ref">macOS安装Docker</span></a> 使用的Docker Desktop on Mac，实际上就是 <a class="reference internal" href="../../kvm/macos_xhyve/xhyve.xhtml#xhyve"><span class="std std-ref">xhyve - macOS平台的KVM</span></a> 所运行的一个虚拟机。不过，这个部署只运行了一台 <a class="reference internal" href="../../linux/alpine_linux/index.xhtml#alpine-linux"><span class="std std-ref">Alpine Linux</span></a> 虚拟机来运行 <a class="reference internal" href="../../docker/index.xhtml#docker"><span class="std std-ref">Docker Atlas</span></a> ，所以类似 <a class="reference internal" href="../../kubernetes/startup_prepare/install_run_minikube.xhtml#install-run-minikube"><span class="std std-ref">安装和运行minikube</span></a> 只是单机版本，如果要在一个虚拟机中体验Kubernetes，可以采用 <a class="reference internal" href="../../docker/docker_in_docker/index.xhtml#docker-in-docker"><span class="std std-ref">Docker in Docker</span></a> 。</p>
</div>
<ul class="simple">
<li><p><a class="reference internal" href="../vmware/vmware_fusion.xhtml#vmware-fusion"><span class="std std-ref">Studio环境中的VMware Fusion</span></a> - VMware Fusion是商用软件，虽然不是macOS内置的虚拟化技术，略微沉重，但是，设置非常方便，并且不仅支持硬件虚拟化(当然hyperkit也支持)而且支持 <a class="reference internal" href="../vmware/vmware_nested_virtual.xhtml#vmware-nested-virtual"><span class="std std-ref">VMware嵌套虚拟化</span></a> ，这项技术和 <a class="reference internal" href="../../kvm/kvm_nested_virtual.xhtml#kvm-nested-virtual"><span class="std std-ref">KVM嵌套虚拟化</span></a> 类似，通过嵌套虚拟化技术在一台物理主机上运行多个支持虚拟化的虚拟机，可以构建复杂的云计算集群。</p></li>
</ul>
</section>
</section>
<section id="id4">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://zhuanlan.zhihu.com/p/102385239">Docker+VSCode配置属于自己的炼丹炉</a><span class="link-target"> [https://zhuanlan.zhihu.com/p/102385239]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>