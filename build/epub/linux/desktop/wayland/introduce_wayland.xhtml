<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Wayland简介</title>
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="wayland">
<span id="introduce-wayland"></span><h1>Wayland简介</h1>
<p>Wayland是一个显示服务器协议，目标是替代X Window System，实现一个现代、安全和简单的窗口系统。在Wayland协议中显示服务器被称为 <code class="docutils literal notranslate"><span class="pre">compositors</span></code> ，这是因为Wayland也作为 <code class="docutils literal notranslate"><span class="pre">compositing</span> <span class="pre">window</span> <span class="pre">managers</span></code> (wayland支持的窗口管理器分2类：平铺窗口管理器和堆叠窗口管理器，例如 <a class="reference internal" href="../sway/index.xhtml#sway"><span class="std std-ref">sway - i3兼容Wayland compositor</span></a> 属于平铺窗口管理器，而KDE的KWin和Gnome的Mutter属于堆叠窗口管理器) 。主要的桌面系统，例如KDE Plasma和GNOME都已经实现了各自都Wayland compositors。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>KDE的KWin和Gnome的Mutter同时支持Xorg和Wayland，取决于使用哪种显示服务器。例如Mutter在使用Wayland显示服务器，就运行在KMS和libinput之上，实现了Wayland核心协议的compositor，并且在运行X11应用程序时作为Xwayland。当Mutter运行在Xorg之上，则作为一个X11窗口管理器和compositing manager。</p>
</div>
<p>目前主流的Gnome和KDE都支持运行在Wayland上，不过 <a class="reference internal" href="../xfce.xhtml#xfce"><span class="std std-ref">Xfce</span></a> 还没有实现Wayland（即使最新的4.16版本也不支持，但是社区计划follow gnome和kde社区迁移到Wayland。目前，我比较倾向在这个先进的显示服务器上运行 <a class="reference internal" href="../sway/index.xhtml#sway"><span class="std std-ref">sway - i3兼容Wayland compositor</span></a> ，实现轻量级的桌面管理。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>参考 <a class="reference external" href="http://www.rasterman.com/index.php?news=2017.12.27-Enlightenment_on_Raspberry_Pi_and_Wayland_Smoothness">Enlightenment on Raspberry Pi 3 in Wayland mode is pretty smooth</a><span class="link-target"> [http://www.rasterman.com/index.php?news=2017.12.27-Enlightenment_on_Raspberry_Pi_and_Wayland_Smoothness]</span> 可以了解到，Wayland现代化的图形显示架构，可以加速图形并降低硬件需求：</p>
<p>Enlightenment with no X11 (running as a wayland compositor) at a smooth 60fps even with a live miniature pager preview updating to match, a full desktop all smooth at 60fps. Terminology running and Rage playing movies smoothly. On a stock Rasperry Pi 3 running 32bit Arch Linux with Mesa VC4 drivers.</p>
</div>
<section id="id1">
<h2>要求</h2>
<p>大多数Wayland组件只能工作在 <a class="reference internal" href="../../../kernel/kms.xhtml#kms"><span class="std std-ref">KMS (Kernel mode setting)</span></a> 的系统上。这要求选择兼容的硬件，区别是两种不同的缓存API：GBM和EGLStreams。NVIDIA GPU使用EGLStreams驱动，其他显卡驱动则支持GBM。对于Wayland compositor必须支持这两种API或者其中一种API才能正常工作。例如，GNOME(使用Mutter)同时支持GBM和EGLStreams，而KDE
Plasma(使用KWin)则在所有版本中zhchiGBM，不过只从Plasma 5.16才开始支持EGLStreams。其他Compositors如果只支持GBM就不能在NVIDIA上工作。</p>
<p>目前除了上述GNOME和KDE，其他的Wayland compositors推荐使用 <a class="reference internal" href="../sway/index.xhtml#sway"><span class="std std-ref">sway - i3兼容Wayland compositor</span></a> 和 enlightenment 。</p>
</section>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://wiki.archlinux.org/index.php/wayland">Arch Linux - Wayland</a><span class="link-target"> [https://wiki.archlinux.org/index.php/wayland]</span></p></li>
<li><p><a class="reference external" href="https://wiki.debian.org/Wayland">Debian - Wayland</a><span class="link-target"> [https://wiki.debian.org/Wayland]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>