<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>vim基础</title>
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="vim">
<span id="vim-basic"></span><h1>vim基础</h1>
<p>vim的基础使用真是非常非常简单，然而需要不断训练形成肌肉记忆。</p>
<p>按照我自己的基础，我自认为基本使用不需要再重复，我仅仅在这里推荐一些容易被忽视的基础技能(或者说我最初没有意识到的基础)。</p>
<section id="id1">
<h2>模式</h2>
<p>vi的 <strong>常用模式</strong> 如下：</p>
<ul class="simple">
<li><p>Normal: 默认模式，也就是可以移动光标的模式，这需要使用导向按键，例如著名的 <code class="docutils literal notranslate"><span class="pre">hjkl</span></code> 键</p></li>
<li><p>Insert: 插入和修改文本，使用 <code class="docutils literal notranslate"><span class="pre">i</span></code> (insert) 或者 <code class="docutils literal notranslate"><span class="pre">a</span></code> (append)</p></li>
<li><p>Command Line: 命令行输入指令，以 <code class="docutils literal notranslate"><span class="pre">:</span></code> 开始，例如保存 <code class="docutils literal notranslate"><span class="pre">:s</span></code> 退出 <code class="docutils literal notranslate"><span class="pre">:q</span></code></p></li>
</ul>
<p>如果命令后加上 <code class="docutils literal notranslate"><span class="pre">!</span></code> 则表示强制(force)</p>
<p>其他比较有用的模式是 <code class="docutils literal notranslate"><span class="pre">Virtual</span></code> ，可以用来选择文本，批量编辑</p>
<p>关键的切换 <code class="docutils literal notranslate"><span class="pre">Normal</span></code> 模式按键是 <code class="docutils literal notranslate"><span class="pre">Esc</span></code> 按键，这也是 Mac 电脑曾经用TouchBar替代的关键按键，最后不得不回归的对专业计算机用户非常重要的按键。</p>
</section>
<section id="yark-paste">
<h2>yark 和 paste</h2>
<p>复制粘贴:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">yy</span>
<span class="n">使用</span> <span class="n">hjkl</span> <span class="n">移动光标</span>
<span class="n">p</span>   <span class="n">粘贴</span>
</pre></div>
</div>
<p>上述 <code class="docutils literal notranslate"><span class="pre">yy</span></code> 会整行复制到剪贴板，然后用 <code class="docutils literal notranslate"><span class="pre">p</span></code> 可以粘贴到光标下一行。</p>
<p>但是，如果你不是要整行复制，而是只复制一部分就要用到前面说的 <code class="docutils literal notranslate"><span class="pre">Visual</span></code> 模式:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>v   进入visual模式
使用 hjkl 移动光标，光标经过的地方都会高亮
y   复制高亮部分到剪贴板
再次使用 hjkl 移动光标到需要粘贴的位置
p   粘贴
</pre></div>
</div>
</section>
<section id="undo-redo">
<h2>undo 和 redo</h2>
<p>如果错误操作，则按下 <code class="docutils literal notranslate"><span class="pre">u</span></code> 执行 Undo ，并且可以不断按 <code class="docutils literal notranslate"><span class="pre">u</span></code> 进行回退。</p>
</section>
<section id="id2">
<h2>搜索</h2>
<p>命令行模式按下 <code class="docutils literal notranslate"><span class="pre">/</span></code> 就是进入搜索</p>
<p>搜索一次以后，如果再次搜索就按 <code class="docutils literal notranslate"><span class="pre">n</span></code></p>
<p>注意，这个搜索是从上往下搜索。</p>
<p>如果要从下网商搜索，则按下 <code class="docutils literal notranslate"><span class="pre">?</span></code> 进入搜索，也是按下 <code class="docutils literal notranslate"><span class="pre">n</span></code> 继续搜索，只不过方向是从下往上。</p>
</section>
<section id="split">
<h2>split模式(重点)</h2>
<p>vim提供了屏幕分割模式，命令行输入:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">split</span>
</pre></div>
</div>
<p>就可以将编辑屏幕分割成上下两部分。上述 <code class="docutils literal notranslate"><span class="pre">split</span></code> 命令可以简写成 <code class="docutils literal notranslate"><span class="pre">sp</span></code> ，也就是只要按下 <code class="docutils literal notranslate"><span class="pre">sp</span></code> 简单的2个按键就可以分割好。</p>
<p>现在我们需要在分割的上下两个窗口间切换:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">ctrl</span><span class="o">+</span><span class="n">ww</span>
</pre></div>
</div>
<p>如果要垂直分割屏幕，则使用 <code class="docutils literal notranslate"><span class="pre">vsplit</span></code> （简写命令是 <code class="docutils literal notranslate"><span class="pre">vs</span></code> )，就能把屏幕分割成左右两个部分。</p>
<p>那么，如果我们把屏幕分割成更多部分，例如上下左右，有该如何切换窗口呢？</p>
<p>方法也是先按下 <code class="docutils literal notranslate"><span class="pre">ctrl+w</span></code> 表示窗口模式，然后按下 <code class="docutils literal notranslate"><span class="pre">hjkl</span></code> 著名的4向移动按键进行窗口的 <code class="docutils literal notranslate"><span class="pre">左下上右</span></code> 切换。</p>
</section>
<section id="vimterminal">
<h2>vim的terminal</h2>
<p>vim 8.1开始内建了一个终端功能，使用 <code class="docutils literal notranslate"><span class="pre">:term</span></code> 命令就可以使用。</p>
<p>不过，非常建议使用 <a class="reference internal" href="../tmux.xhtml#tmux"><span class="std std-ref">tmux多会话终端管理</span></a> 来结合shell完成工作，这是一个非常灵活的终端会话管理工具。</p>
</section>
<section id="id3">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://opensource.com/article/19/3/getting-started-vim">Getting started with Vim: The basics</a><span class="link-target"> [https://opensource.com/article/19/3/getting-started-vim]</span></p></li>
<li><p><a class="reference external" href="https://stackoverflow.com/questions/1236563/how-do-i-run-a-terminal-inside-of-vim">How do I run a terminal inside of Vim?</a><span class="link-target"> [https://stackoverflow.com/questions/1236563/how-do-i-run-a-terminal-inside-of-vim]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>