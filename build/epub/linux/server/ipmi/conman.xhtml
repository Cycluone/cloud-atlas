<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>conman串口管理</title>
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="conman">
<span id="id1"></span><h1>conman串口管理</h1>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>我已经介绍了 <a class="reference internal" href="use_ipmi.xhtml#use-ipmi"><span class="std std-ref">使用IPMI(智能平台管理接口)</span></a> 通过带外管理服务器，不过使用ipmitool对本机操作通常只能管理单台服务器，使用 <code class="docutils literal notranslate"><span class="pre">ipmitool</span></code> 网络命令也存在操作繁琐，并且最主要缺少一种对大规模集群并发监控串口控制台输出的能力。</p>
<p><code class="docutils literal notranslate"><span class="pre">conman</span></code> 就是一种对集群串口进行并发串口控制台日志采集以及远程控制的ipmi增强工具。</p>
</div>
<section id="id2">
<h2>conman简介</h2>
<p><code class="docutils literal notranslate"><span class="pre">conman</span></code> 是一个串口控制管理程序，用于支持大量的控制台，不仅支持本地串口设备，也支持远程terminal服务器。结合IPMI协议，对大量服务器的串口日志进行采集，方便进行日志分析管理。并且 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 结合IPMI Sol方式，可以远程对服务器进行串口控制台操作，实现sysrq magic组合键获取内核core dump。</p>
<p><a class="reference external" href="https://github.com/dun/conman">caonman官方网站</a><span class="link-target"> [https://github.com/dun/conman]</span></p>
</section>
<section id="escape">
<h2>Escape（逃脱）字符</h2>
<p>Escape字符是非常重要的字符，用于向串口发送特殊组合命令，以实现类似 <code class="docutils literal notranslate"><span class="pre">sysrq</span></code> 这样的magic按键组合。</p>
<p><code class="docutils literal notranslate"><span class="pre">conman</span></code> 默认的Escape字符是 <code class="docutils literal notranslate"><span class="pre">&amp;</span></code></p>
<p>重要的控制台字符：</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">&amp;B</span></code> 向控制台发送 <code class="docutils literal notranslate"><span class="pre">serial-break</span></code> 字符，这个字符组合特定指令可以实现sysrq</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">&amp;.</span></code> 断开conman连接</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">&amp;?</span></code> 显示可用的escapes字符</p></li>
</ul>
<section id="conmansysrq">
<h3>通过conman实现sysrq</h3>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>实际上也可以通过ipmi Serial over LAN来实现： 使用以下命令构建ipmi Serial over LAN连接到服务器串口:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">ipmitool</span> <span class="o">-</span><span class="n">U</span> <span class="p">[</span><span class="n">user</span><span class="p">]</span> <span class="o">-</span><span class="n">P</span> <span class="p">[</span><span class="n">password</span><span class="p">]</span> <span class="o">-</span><span class="n">H</span> <span class="p">[</span><span class="n">ip</span><span class="o">/</span><span class="n">hostname</span> <span class="n">of</span> <span class="n">bmc</span><span class="p">]</span> <span class="o">-</span><span class="n">I</span> <span class="n">lanplus</span> <span class="n">sol</span> <span class="n">activate</span>
</pre></div>
</div>
</div>
<p>然后依次执行如下组合键 - 注意：大写字幕 <code class="docutils literal notranslate"><span class="pre">B</span></code> 表示 <code class="docutils literal notranslate"><span class="pre">serial-break</span></code> 字符，也就是前面所说的对于conman就是同时按下 <code class="docutils literal notranslate"><span class="pre">&amp;B</span></code> 。例如，这里 <code class="docutils literal notranslate"><span class="pre">Bc</span></code> 就是表示先同时按下 <code class="docutils literal notranslate"><span class="pre">&amp;B</span></code> ，然后放开按键，马上按一下 <code class="docutils literal notranslate"><span class="pre">c</span></code> ，就能够 <strong>触发crash dump</strong></p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">Bt</span></code> - 生成堆栈跟踪</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">Bm</span></code> - 打印内存状态，特别是在out of memory情况，特别需要此项信息</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">Bc</span></code> - 触发crash dump</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>操作系统必须激活 <code class="docutils literal notranslate"><span class="pre">sysrq</span></code> 功能才能使得上述操作生效，否则会提示 <code class="docutils literal notranslate"><span class="pre">SysRq</span> <span class="pre">:</span> <span class="pre">This</span> <span class="pre">sysrq</span> <span class="pre">operation</span> <span class="pre">is</span> <span class="pre">disabled.</span></code> 。请事先在操作系统执行以下命令使得sysrq功能生效:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sysctl</span> <span class="n">kernel</span><span class="o">.</span><span class="n">sysrq</span><span class="o">=</span><span class="mi">1</span>
</pre></div>
</div>
</div>
</section>
</section>
<section id="id3">
<h2>conman设置案例</h2>
<section id="id4">
<h3>服务器配置启用内核串口设置</h3>
<p>对于RHEL/CentOS操作系统， <code class="docutils literal notranslate"><span class="pre">/etc/sysconfig/grub</span></code> 设置了串口输出配置:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">GRUB_CMDLINE_LINUX</span><span class="o">=</span><span class="s2">&quot;crashkernel=auto console=ttyS0,115200n8&quot;</span>
</pre></div>
</div>
<p>然后执行以下指令生成grub启动配置:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">grub2</span><span class="o">-</span><span class="n">mkconfig</span> <span class="o">-</span><span class="n">o</span> <span class="o">/</span><span class="n">boot</span><span class="o">/</span><span class="n">grub2</span><span class="o">/</span><span class="n">grub</span><span class="o">.</span><span class="n">cfg</span>
</pre></div>
</div>
<p>重启服务器后，控制台将输出到串口。</p>
</section>
<section id="id5">
<h3>安装conman</h3>
<p>RHEL/CentOS 发行版已经包含了 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 软件包:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">yum</span> <span class="n">install</span> <span class="n">conman</span> <span class="o">-</span><span class="n">y</span>
</pre></div>
</div>
</section>
<section id="id6">
<h3>配置conman的简单案例</h3>
<p>请参考 <a class="reference internal" href="quick_config_ipmi.xhtml#quick-config-ipmi"><span class="std std-ref">快速配置IPMI</span></a> 设置BMC访问管理账号和管理IP地址。conman将通过IPMI协议访问服务器的串口控制台。</p>
<p>安装 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 软件包之后 <code class="docutils literal notranslate"><span class="pre">/etc/conman.conf</span></code> 是默认的配置文档，包含了大量的配置案例。</p>
<p>详细的设置可以参考 <a class="reference external" href="https://shachimaru.wiki.fc2.com/wiki/conman">conman设置案例（日文）</a><span class="link-target"> [https://shachimaru.wiki.fc2.com/wiki/conman]</span></p>
<ul class="simple">
<li><p>修改配置 <code class="docutils literal notranslate"><span class="pre">/etc/conman.conf</span></code></p></li>
</ul>
<div class="literal-block-wrapper docutils container" id="id12">
<div class="code-block-caption"><span class="caption-text">conman/conman.conf</span></div>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span>server <span class="nv">coredump</span><span class="o">=</span>on
server <span class="nv">coredumpdir</span><span class="o">=</span><span class="s2">&quot;/var/log/conman&quot;</span>
server <span class="nv">keepalive</span><span class="o">=</span>on
server <span class="nv">logdir</span><span class="o">=</span><span class="s2">&quot;/var/log/conman&quot;</span>
server <span class="nv">logfile</span><span class="o">=</span>info
server <span class="nv">timestamp</span><span class="o">=</span>1h
global <span class="nv">log</span><span class="o">=</span><span class="s2">&quot;%N.log&quot;</span>
global <span class="nv">logopts</span><span class="o">=</span><span class="s2">&quot;timestamp&quot;</span>
global <span class="nv">seropts</span><span class="o">=</span><span class="s2">&quot;1152000,8n1&quot;</span>

console <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;server-0&quot;</span> <span class="nv">dev</span><span class="o">=</span><span class="s2">&quot;/usr/share/conman/exec/ipmitool.exp 192.168.1.10 admin&quot;</span>
console <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;server-1&quot;</span> <span class="nv">dev</span><span class="o">=</span><span class="s2">&quot;/usr/share/conman/exec/ipmitool.exp 192.168.1.11 admin&quot;</span>
console <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;server-2&quot;</span> <span class="nv">dev</span><span class="o">=</span><span class="s2">&quot;/usr/share/conman/exec/ipmitool.exp 192.168.1.11 admin&quot;</span>
</pre></div>
</td></tr></table></div>
</div>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">/etc/conman.pswd</span></code> - 这个配置文件是 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 存储每个服务器对应的IPMI账号密码的文件，对于某些IDC环境，可能每台服务器设置不同的IPMI访问密码（第一列是访问IP，第二列是访问账号，第三列是访问密码），就可以使用这个配置文件:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="mf">192.168</span><span class="o">.</span><span class="mf">1.10</span> <span class="p">:</span> <span class="n">admin</span> <span class="p">:</span> <span class="n">password0</span>
<span class="mf">192.168</span><span class="o">.</span><span class="mf">1.11</span> <span class="p">:</span> <span class="n">admin</span> <span class="p">:</span> <span class="n">password1</span>
<span class="mf">192.168</span><span class="o">.</span><span class="mf">1.12</span> <span class="p">:</span> <span class="n">admin</span> <span class="p">:</span> <span class="n">password2</span>
<span class="o">...</span>
</pre></div>
</div>
</li>
</ul>
<p>解析：</p>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">server</span></code> 指令是设置 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 的基本配置参数，包括存储日志目录，core目录，以及时间戳等</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">global</span></code> 表示所有 <code class="docutils literal notranslate"><span class="pre">console</span></code> 指令都会包含的公共参数，其中 <code class="docutils literal notranslate"><span class="pre">global</span> <span class="pre">log=&quot;%N.log&quot;</span></code> 表示所有服务器的日志文件都按照 <code class="docutils literal notranslate"><span class="pre">名字.log</span></code> 来记录，也就是 <code class="docutils literal notranslate"><span class="pre">console</span> <span class="pre">name=&quot;server-0&quot;</span> <span class="pre">...</span></code> 记录的服务器 <code class="docutils literal notranslate"><span class="pre">192.168.1.10</span></code> 串口日志将按照命名记录为 <code class="docutils literal notranslate"><span class="pre">server-0.log</span></code> ，并且存储在 <code class="docutils literal notranslate"><span class="pre">/var/log/conman</span></code> 目录下。</p></li>
<li><p>每一行 <code class="docutils literal notranslate"><span class="pre">console</span> <span class="pre">...</span></code> 表示连接到一台服务器的串口。注意，每个 <code class="docutils literal notranslate"><span class="pre">name=xxxx</span></code> 表示conman的一个对象命名。启动conman服务之后，就可以通过这个命令连接到对应服务器的IPMI sol接口。即要连接 <code class="docutils literal notranslate"><span class="pre">192.168.1.10</span></code> 的IPMI sol，只需要输入命令 <code class="docutils literal notranslate"><span class="pre">conman</span> <span class="pre">server-0</span></code> 就可以实现。</p></li>
<li><p>启动 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 服务:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">systemctl</span> <span class="n">start</span> <span class="n">conman</span>
</pre></div>
</div>
</li>
</ul>
<p>启动后请使用命令 <code class="docutils literal notranslate"><span class="pre">systemctl</span> <span class="pre">status</span> <span class="pre">conman</span></code> 检查服务状态</p>
<p>启动服务后，可以看到系统中有conman服务对应进程:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">conmand</span> <span class="o">-</span><span class="n">c</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">conman</span><span class="o">.</span><span class="n">conf</span>
<span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">expect</span> <span class="o">-</span><span class="n">f</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">conman</span><span class="o">/</span><span class="n">exec</span><span class="o">/</span><span class="n">ipmitool</span><span class="o">.</span><span class="n">exp</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">1.10</span> <span class="n">admin</span>
<span class="n">ipmitool</span> <span class="o">-</span><span class="n">e</span> <span class="o">&amp;</span> <span class="o">-</span><span class="n">I</span> <span class="n">lanplus</span> <span class="o">-</span><span class="n">H</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">1.10</span> <span class="o">-</span><span class="n">U</span> <span class="n">admin</span> <span class="o">-</span><span class="n">a</span> <span class="n">sol</span> <span class="n">activate</span>
</pre></div>
</div>
<p>可以看到，实际上 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 巧妙的使用了 <code class="docutils literal notranslate"><span class="pre">expect</span></code> 工具来实现和服务器IPMI交互</p>
</section>
</section>
<section id="id8">
<h2>conman大规模案例</h2>
<p>当需要监控IDC机房海量服务器的串口时，单纯启动一个 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 服务进程是无法将负载分担到服务器的多处理器上。类似nginx配置，我们会针对服务器的CPU核心数启动相应数量的 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 服务。例如，针对64核心的服务器，启动64个 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 服务进程，每个服务进程负责数百台服务器的串口日志采集。这样，一台服务器可以充分发挥硬件性能，监控数千台甚至上万服务器。</p>
<p>注意每个 <code class="docutils literal notranslate"><span class="pre">conman</span></code> 服务器需要使用 <code class="docutils literal notranslate"><span class="pre">-p</span> <span class="pre">&lt;端口号&gt;</span></code> 分别使用不同端口，避免冲突(可以编写脚本批量启动):</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">conmand</span> <span class="o">-</span><span class="n">c</span> <span class="n">conman_192</span><span class="o">.</span><span class="mf">168.1</span><span class="o">.</span><span class="mf">1_7900.</span><span class="n">conf</span> <span class="o">-</span><span class="n">p</span> <span class="mi">7900</span>
<span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">conmand</span> <span class="o">-</span><span class="n">c</span> <span class="n">conman_192</span><span class="o">.</span><span class="mf">168.1</span><span class="o">.</span><span class="mf">1_7901.</span><span class="n">conf</span> <span class="o">-</span><span class="n">p</span> <span class="mi">7901</span>
<span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">conmand</span> <span class="o">-</span><span class="n">c</span> <span class="n">conman_192</span><span class="o">.</span><span class="mf">168.1</span><span class="o">.</span><span class="mf">1_7902.</span><span class="n">conf</span> <span class="o">-</span><span class="n">p</span> <span class="mi">7902</span>
<span class="o">...</span>
</pre></div>
</div>
<p>每个配置文件，分别对应一批被监控服务器(这里案例假设使用admin账号，密码password)，以下是 <code class="docutils literal notranslate"><span class="pre">conman_192.168.1.1_7900.conf</span></code> 配置举例:</p>
<div class="literal-block-wrapper docutils container" id="id13">
<div class="code-block-caption"><span class="caption-text">conman/conman_192.168.1.1_7900.conf</span></div>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># server: 192.168.1.1</span>
<span class="c1"># port: 7900</span>
server <span class="nv">syslog</span><span class="o">=</span><span class="s2">&quot;local4&quot;</span>
global <span class="nv">ipmiopts</span><span class="o">=</span><span class="s2">&quot;U:admin,P:password&quot;</span>
global <span class="nv">log</span><span class="o">=</span><span class="s2">&quot;/home/oob/conman/%N.log&quot;</span>
global <span class="nv">logopts</span><span class="o">=</span><span class="s2">&quot;lock,nosanitize,timestamp&quot;</span>

console <span class="nv">name</span><span class="o">=</span><span class="s1">&#39;server-1.example.com&#39;</span> <span class="nv">dev</span><span class="o">=</span><span class="s1">&#39;ipmi:192.168.1.123&#39;</span>
console <span class="nv">name</span><span class="o">=</span><span class="s1">&#39;server-2&#39;</span> <span class="nv">dev</span><span class="o">=</span><span class="s1">&#39;ipmi:192.168.1.162&#39;</span> <span class="nv">ipmiopts</span><span class="o">=</span><span class="s1">&#39;U:admin,P:test_pass&#39;</span>
...
</pre></div>
</td></tr></table></div>
</div>
<p>上述 <code class="docutils literal notranslate"><span class="pre">global</span></code> 配置提供了共用的IPMI访问账号密码，但是同时也有部分服务器有自己特定的访问密码，例如 <code class="docutils literal notranslate"><span class="pre">server-2</span></code> 就使用密码 <code class="docutils literal notranslate"><span class="pre">test_pass</span></code></p>
<section id="id9">
<h3>简化版本conman配置</h3>
<div class="literal-block-wrapper docutils container" id="id14">
<div class="code-block-caption"><span class="caption-text">conman/conman_simple.conf</span></div>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">1</span>
<span class="normal">2</span>
<span class="normal">3</span>
<span class="normal">4</span>
<span class="normal">5</span>
<span class="normal">6</span>
<span class="normal">7</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span>server <span class="nv">syslog</span><span class="o">=</span><span class="s2">&quot;local4&quot;</span>
global <span class="nv">ipmiopts</span><span class="o">=</span><span class="s2">&quot;U:admin,P:admin&quot;</span>
global <span class="nv">log</span><span class="o">=</span><span class="s2">&quot;/var/log/conman/console-%N.log&quot;</span>
global <span class="nv">logopts</span><span class="o">=</span><span class="s2">&quot;lock,nosanitize,timestamp&quot;</span>

console <span class="nv">name</span><span class="o">=</span><span class="s1">&#39;server-10&#39;</span> <span class="nv">dev</span><span class="o">=</span><span class="s1">&#39;ipmi:192.168.1.10&#39;</span> <span class="nv">ipmiopts</span><span class="o">=</span><span class="s1">&#39;U:admin,P:passwd0&#39;</span>
console <span class="nv">name</span><span class="o">=</span><span class="s1">&#39;server-11&#39;</span> <span class="nv">dev</span><span class="o">=</span><span class="s1">&#39;ipmi:192.168.1.11&#39;</span> <span class="nv">ipmiopts</span><span class="o">=</span><span class="s1">&#39;U:admin,P:passwd1&#39;</span>
</pre></div>
</td></tr></table></div>
</div>
</section>
</section>
<section id="id10">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://linux.die.net/man/1/conman">conman(1) - Linux man page</a><span class="link-target"> [https://linux.die.net/man/1/conman]</span></p></li>
<li><p><a class="reference external" href="https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-sg456en_us&amp;docLocale=en_US">sysrq via ipmi Serial over LAN</a><span class="link-target"> [https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-sg456en_us&amp;docLocale=en_US]</span></p></li>
<li><p><a class="reference external" href="https://shachimaru.wiki.fc2.com/wiki/conman">conman设置案例（日文）</a><span class="link-target"> [https://shachimaru.wiki.fc2.com/wiki/conman]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>