<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>zram - 基于内存的压缩块存储设备</title>
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="zram">
<span id="id1"></span><h1>zram - 基于内存的压缩块存储设备</h1>
<p>zram是一个Linux内核模块，可以用来创建最高5:1压缩率的基于RAM的块设备。zram设备可以和其他块设备一样使用。通常zram被用于作为swap设备来扩展主机内存。它们也可以用来存储 <code class="docutils literal notranslate"><span class="pre">/tmp</span></code> 并且用于作为一个压缩性RAM设备。</p>
<p>Fedora 33+ 使用系统内存的一半来创建一个zram swap设备，并且限制最大使用4GB空间，使用的工具名为 <code class="docutils literal notranslate"><span class="pre">zram-generator</span></code> 。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>现代大规模集群的日志采集是分析集群性能的重要基础，由于日志采集写磁盘非常消耗系统资源并且效率低下，如果能够实现日志即时传输出去，就不需要持久化存储(磁盘)，完全可以使用 <code class="docutils literal notranslate"><span class="pre">tmpfs</span></code>  来存储日志。</p>
<p>在 <code class="docutils literal notranslate"><span class="pre">tmpfs</span></code> 上结合 <code class="docutils literal notranslate"><span class="pre">zram</span></code> ，就可以大幅度压缩 <code class="docutils literal notranslate"><span class="pre">tmpfs</span></code> 占用的内存空间，把宝贵的内存用于应用系统。所消耗的只是压缩处理的cpu资源，通常系统cpu资源都有剩余，所以这种架构对于大型集群的日志采集应该是有很大帮助。我后续会做一个实践汇总。</p>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p><a class="reference internal" href="../../../machine_learning/jetson/jetson_nano.xhtml#jetson-nano"><span class="std std-ref">Jetson Nano开发套件概览</span></a> 官方操作系统 L4T 的 <a class="reference internal" href="../../../machine_learning/jetson/studio/jetson_swap.xhtml#jetson-swap"><span class="std std-ref">Jetson Nano的swap</span></a> 就是采用zram来实现的。</p>
</div>
<section id="id2">
<h2>zram基本使用</h2>
<p><code class="docutils literal notranslate"><span class="pre">zram</span></code> 内核模块必须在使用zram之前加载，可以通过 <code class="docutils literal notranslate"><span class="pre">modprobe</span> <span class="pre">zram</span></code> 加载，不过默认只有1个zram设备。如果你希望创建4个zram设备，则使用 <code class="docutils literal notranslate"><span class="pre">modprobe</span> <span class="pre">zram</span> <span class="pre">num_devices=4</span></code> 。</p>
<p>也可以通过创建 <code class="docutils literal notranslate"><span class="pre">/etc/modprobe.d/zswap.conf</span></code> 配置实现:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">options</span> <span class="n">zram</span> <span class="n">num_devices</span><span class="o">=</span><span class="mi">4</span>
</pre></div>
</div>
<ul>
<li><p>基本使用方法:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">modprobe</span> <span class="o">-</span><span class="n">v</span> <span class="n">zram</span>
<span class="n">echo</span> <span class="n">zstd</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">block</span><span class="o">/</span><span class="n">zram0</span><span class="o">/</span><span class="n">comp_algorithm</span>
<span class="n">echo</span> <span class="mi">2</span><span class="n">G</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">block</span><span class="o">/</span><span class="n">zram0</span><span class="o">/</span><span class="n">disksize</span>
<span class="n">mkswap</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span>
<span class="n">swapon</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span>
</pre></div>
</div>
</li>
</ul>
<p>此时检查:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cat</span> <span class="o">/</span><span class="n">proc</span><span class="o">/</span><span class="n">swaps</span>
</pre></div>
</div>
<p>可以看到:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">Filename</span>                <span class="n">Type</span>        <span class="n">Size</span>      <span class="n">Used</span>  <span class="n">Priority</span>
<span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span>              <span class="n">partition</span>   <span class="mi">2097148</span>   <span class="mi">0</span>     <span class="mi">5</span>
</pre></div>
</div>
</section>
<section id="id3">
<h2>创建设备</h2>
<p>zram设备可以创建为 <code class="docutils literal notranslate"><span class="pre">/dev/zram0</span></code> ， <code class="docutils literal notranslate"><span class="pre">/dev/zram1</span></code> 依次类推。添加的设备数量可以通过读取 <code class="docutils literal notranslate"><span class="pre">/sys/class/zram-control/hot_add</span></code> 来获得:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cat</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">class</span><span class="o">/</span><span class="n">zram</span><span class="o">-</span><span class="n">control</span><span class="o">/</span><span class="n">hot_add</span>
</pre></div>
</div>
<p>例如当前设备数量4个:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="mi">4</span>
</pre></div>
</div>
<ul>
<li><p>压缩算法可以通过 <code class="docutils literal notranslate"><span class="pre">/sys/block/zram0/comp_algorithm</span></code> 获得:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cat</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">block</span><span class="o">/</span><span class="n">zram0</span><span class="o">/</span><span class="n">comp_algorithm</span>
</pre></div>
</div>
</li>
</ul>
<p>输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="p">[</span><span class="n">lzo</span><span class="p">]</span> <span class="n">deflate</span>
</pre></div>
</div>
<p>这个算法可能包含 <code class="docutils literal notranslate"><span class="pre">lzo</span> <span class="pre">lzo-rle</span> <span class="pre">lz4</span> <span class="pre">lz4hc</span> <span class="pre">842</span> <span class="pre">[zstd]</span></code></p>
<p>zram设备的空间大小初始化时候是0，直到你修改容量(只需要echo一个数值到 <code class="docutils literal notranslate"><span class="pre">/sys/block/zram{devicenumber}/disksize</span></code> )，单位可以是K,M,G:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">echo</span> <span class="mi">512</span><span class="n">M</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">block</span><span class="o">/</span><span class="n">zram0</span><span class="o">/</span><span class="n">disksize</span>
<span class="n">echo</span> <span class="mi">1</span><span class="n">G</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">block</span><span class="o">/</span><span class="n">zram1</span><span class="o">/</span><span class="n">disksize</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>zram不会使用任何实际内存，直到设备开始填充数据。举例，一个2GB的zram设备存储了5.8MB数据，压缩以后数据实际只有443.9K，仅使用780K存储空间，而不会使用2GB内存。</p>
</div>
<p>zram块设备初始化成基于RAM的压缩swap，只需要使用 <code class="docutils literal notranslate"><span class="pre">mkswap</span></code> 初始化设备，然后用 <code class="docutils literal notranslate"><span class="pre">swapon</span></code> 激活。使用 <code class="docutils literal notranslate"><span class="pre">swapon</span></code> 参数 <code class="docutils literal notranslate"><span class="pre">-p</span> <span class="pre">32767</span></code> 将给予zram设备最高优先级:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">mkswap</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span>
<span class="n">swapon</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span> <span class="o">-</span><span class="n">p</span> <span class="mi">32767</span>
</pre></div>
</div>
</section>
<section id="id4">
<h2>删除zram设备</h2>
<p>当zswap设备在使用时你不能删除它，需要首先umount文件系统或者swap设备，然后通过 <code class="docutils literal notranslate"><span class="pre">/sys/class/zram-control/hot_remove</span></code> 来移除:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">swapoff</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span>
<span class="n">echo</span> <span class="mi">0</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">class</span><span class="o">/</span><span class="n">zram</span><span class="o">-</span><span class="n">control</span><span class="o">/</span><span class="n">hot_remove</span>
</pre></div>
</div>
</section>
<section id="id5">
<h2>检查设备</h2>
<p><code class="docutils literal notranslate"><span class="pre">util-linux</span></code> 软件包提供了一个工具 <code class="docutils literal notranslate"><span class="pre">zramctl</span></code> 可以用来检查设备的真实压缩率以及其他信息，这些信息也可以通过 <code class="docutils literal notranslate"><span class="pre">/sys/block/zram{devicenumber}/</span></code> 目录下的文件提供。</p>
</section>
<section id="zramswap">
<h2>使用zram作为swap的脚本</h2>
<p>以下是一个简单的脚本用来创建zram swap设备，注意，这个脚本假设你还没有使用zram，并提供了启动的systemd配置:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">/usr/local/bin/zramswap-on</span></code> :</p></li>
</ul>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1"># Disable zswap</span>
<span class="nb">echo</span> <span class="m">0</span> &gt; /sys/module/zswap/parameters/enabled

<span class="c1"># Load zram module</span>
modprobe zram

<span class="c1"># use zstd compression</span>
<span class="nb">echo</span> zstd &gt; /sys/block/zram0/comp_algorithm

<span class="c1"># echo 512M &gt; /sys/block/zram0/disksize</span>
<span class="nb">echo</span> 2G &gt; /sys/block/zram0/disksize

mkswap /dev/zram0

<span class="c1"># Priority can have values between -1 and 32767</span>
swapon /dev/zram0 -p <span class="m">32767</span>
</pre></div>
</td></tr></table></div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">/usr/local/bin/zramswap-off</span></code> :</p></li>
</ul>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">1</span>
<span class="normal">2</span>
<span class="normal">3</span>
<span class="normal">4</span>
<span class="normal">5</span>
<span class="normal">6</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
swapoff /dev/zram0
<span class="nb">echo</span> <span class="m">0</span> &gt; /sys/class/zram-control/hot_remove
<span class="c1"># Not required, but creating a blank uninitalzed drive</span>
<span class="c1"># after removing one may be desired</span>
cat /sys/class/zram-control/hot_add
</pre></div>
</td></tr></table></div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">/etc/systemd/system/create-zram-swap.service</span></code> :</p></li>
</ul>
<div class="highlight-bash notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="o">[</span>Unit<span class="o">]</span>
<span class="nv">Description</span><span class="o">=</span>Configures zram swap device
<span class="nv">After</span><span class="o">=</span>local-fs.target

<span class="o">[</span>Service<span class="o">]</span>
<span class="nv">Type</span><span class="o">=</span>oneshot
<span class="nv">ExecStart</span><span class="o">=</span>/usr/local/bin/zramswap-on
<span class="nv">ExecStop</span><span class="o">=</span>/usr/local/bin/zramswap-off
<span class="nv">RemainAfterExit</span><span class="o">=</span>yes

<span class="o">[</span>Install<span class="o">]</span>
<span class="nv">WantedBy</span> <span class="o">=</span> multi-user.target
</pre></div>
</td></tr></table></div>
<ul>
<li><p>然后执行服务配置加载和激活:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">systemctl</span> <span class="n">daemon</span><span class="o">-</span><span class="n">reload</span>
<span class="n">systemctl</span> <span class="n">enable</span> <span class="o">--</span><span class="n">now</span> <span class="n">create</span><span class="o">-</span><span class="n">zram</span><span class="o">-</span><span class="n">swap</span><span class="o">.</span><span class="n">service</span>
</pre></div>
</div>
</li>
</ul>
</section>
<section id="id6">
<h2>zram压缩算法对比</h2>
<ul class="simple">
<li><p>比较zram压缩算法的简单方法是向zram设备文件系统中复制大文件或者大量文件，观察不同压缩算法的zram设备耗时、压缩后空间</p></li>
<li><p>也可以通过设置zram设备作为swap，然后编译大型软件(如Chromium)来对比观察，例如在6GB总系统内存虚拟机中设置3GB zram swap，并添加HDD后端的swap来观察编译时间</p></li>
</ul>
<section id="id7">
<h3>性能影响</h3>
<p>根据 <a class="reference external" href="https://linuxreviews.org/Zram">LinuxReviews docs: Zram</a><span class="link-target"> [https://linuxreviews.org/Zram]</span> 的测试，使用缓慢的旧型号Athlon 5350 APU with a slow HDD as a swap device in addition to a zram swap device 测试:</p>
<ul class="simple">
<li><p>使用50%的物理内存配置为zram swap，得到的编译收益最大，不过zstd和lzo-rle两种算法差别不大</p></li>
</ul>
<p>但是，使用新型 Ryzen 2600, 6 Cores/Threads (QEMU VM), 8 GiB RAM 设备，则配置2G zram swap得到性能收益(虽然不多)，但配置4G zram swap则性能下降。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>使用zram的swap配置和具体硬件相关，可能需要做不断的验证测试才能找到合适比例。</p>
</div>
</section>
</section>
<section id="id8">
<h2>zram工具</h2>
<p><code class="docutils literal notranslate"><span class="pre">util-linux</span></code> 软件包提供的zramctl提供了设置和配置zram的功能</p>
<ul>
<li><p>检查设备:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">zramctl</span>
</pre></div>
</div>
</li>
</ul>
<p>显示输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>       <span class="n">ALGORITHM</span> <span class="n">DISKSIZE</span> <span class="n">DATA</span> <span class="n">COMPR</span> <span class="n">TOTAL</span> <span class="n">STREAMS</span> <span class="n">MOUNTPOINT</span>
<span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram3</span> <span class="n">lzo</span>         <span class="mf">495.5</span><span class="n">M</span>   <span class="mi">4</span><span class="n">K</span>   <span class="mi">76</span><span class="n">B</span>   <span class="mi">12</span><span class="n">K</span>       <span class="mi">4</span> <span class="p">[</span><span class="n">SWAP</span><span class="p">]</span>
<span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram2</span> <span class="n">lzo</span>         <span class="mf">495.5</span><span class="n">M</span>   <span class="mi">4</span><span class="n">K</span>   <span class="mi">76</span><span class="n">B</span>   <span class="mi">12</span><span class="n">K</span>       <span class="mi">4</span> <span class="p">[</span><span class="n">SWAP</span><span class="p">]</span>
<span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram1</span> <span class="n">lzo</span>         <span class="mf">495.5</span><span class="n">M</span>   <span class="mi">4</span><span class="n">K</span>   <span class="mi">76</span><span class="n">B</span>   <span class="mi">12</span><span class="n">K</span>       <span class="mi">4</span> <span class="p">[</span><span class="n">SWAP</span><span class="p">]</span>
<span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">zram0</span> <span class="n">lzo</span>         <span class="mf">495.5</span><span class="n">M</span>   <span class="mi">4</span><span class="n">K</span>   <span class="mi">76</span><span class="n">B</span>   <span class="mi">12</span><span class="n">K</span>       <span class="mi">4</span> <span class="p">[</span><span class="n">SWAP</span><span class="p">]</span>
</pre></div>
</div>
<ul>
<li><p>zramctl提供了 <code class="docutils literal notranslate"><span class="pre">-f</span></code> 或 <code class="docutils literal notranslate"><span class="pre">--find</span></code> 选项可以用来找到第一个没有使用的zram设备，或创建一个新的zram设备。此外提供了 <code class="docutils literal notranslate"><span class="pre">-s</span></code> 或 <code class="docutils literal notranslate"><span class="pre">--size</span></code> 选项以及 <code class="docutils literal notranslate"><span class="pre">-s</span></code> 或 <code class="docutils literal notranslate"><span class="pre">--algorithm</span></code> 选项:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">zramctl</span> <span class="o">--</span><span class="n">find</span> <span class="o">--</span><span class="n">size</span> <span class="mi">512</span><span class="n">M</span> <span class="o">--</span><span class="n">algorithm</span> <span class="n">zstd</span>
</pre></div>
</div>
</li>
</ul>
<section id="zram-generator">
<h3>zram-generator</h3>
<p>从Fedora 33+ 开始默认提供了一个 <code class="docutils literal notranslate"><span class="pre">zram-generator</span></code> 的工具 ，这个工具是 <a class="reference external" href="https://github.com/systemd/zram-generator">systemd/zram-generator</a><span class="link-target"> [https://github.com/systemd/zram-generator]</span></p>
<p>zram-generator 用于配置最大4GB zram ，或者是系统内存的一半。默认使用 <code class="docutils literal notranslate"><span class="pre">lzo-rle</span></code> 压缩算法。可以通过 <code class="docutils literal notranslate"><span class="pre">/etc/systemd/zram-generator.conf</span></code> 来覆盖默认的 <code class="docutils literal notranslate"><span class="pre">/usr/lib/systemd/zram-generator.conf</span></code> 配置。</p>
<ul>
<li><p>举例 <code class="docutils literal notranslate"><span class="pre">/etc/systemd/zram-generator.conf</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="p">[</span><span class="n">zram0</span><span class="p">]</span>
<span class="c1"># Use 20% of system memory for zswap. Default: 0.5</span>
<span class="n">zram</span><span class="o">-</span><span class="n">fraction</span> <span class="o">=</span> <span class="mf">0.2</span>
<span class="c1"># Limits the maximum size. Set in MiB. 2048 means</span>
<span class="c1"># it will never be larger than 2 GiB. Default: 4096</span>
<span class="nb">max</span><span class="o">-</span><span class="n">zram</span><span class="o">-</span><span class="n">size</span> <span class="o">=</span> <span class="mi">2048</span>

<span class="c1"># Fedora defaults to lzo-rle which is very inefficient</span>
<span class="c1"># compared to vastly superior zstd compression</span>
<span class="n">compression</span><span class="o">-</span><span class="n">algorithm</span> <span class="o">=</span> <span class="n">zstd</span>
</pre></div>
</div>
</li>
</ul>
<p>zram-generator可以通过以下3种方式之一来禁用:</p>
<ul>
<li><p>屏蔽运行:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">systemctl</span> <span class="n">mask</span> <span class="n">swap</span><span class="o">-</span><span class="n">create</span><span class="o">@.</span><span class="n">service</span>
</pre></div>
</div>
</li>
</ul>
<p>是的，确实是 <code class="docutils literal notranslate"><span class="pre">swap-create&#64;.service</span></code> 而不是 <code class="docutils literal notranslate"><span class="pre">zram-generator</span></code></p>
<ul>
<li><p>创建一个空的配置:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">echo</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">systemd</span><span class="o">/</span><span class="n">zram</span><span class="o">-</span><span class="n">generator</span><span class="o">.</span><span class="n">conf</span>
</pre></div>
</div>
</li>
<li><p>卸载 <code class="docutils literal notranslate"><span class="pre">zram-generator</span></code> 和 <code class="docutils literal notranslate"><span class="pre">zram-generator-defaults</span></code> 软件包:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">dnf</span> <span class="o">-</span><span class="n">y</span> <span class="n">remove</span> <span class="n">zram</span><span class="o">-</span><span class="n">generator</span> <span class="n">zram</span><span class="o">-</span><span class="n">generator</span><span class="o">-</span><span class="n">defaults</span>
</pre></div>
</div>
</li>
</ul>
</section>
</section>
<section id="id9">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://linuxreviews.org/Zram">LinuxReviews docs: Zram</a><span class="link-target"> [https://linuxreviews.org/Zram]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>