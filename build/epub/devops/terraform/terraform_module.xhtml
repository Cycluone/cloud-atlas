<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Terraform Module</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="terraform-module">
<span id="id1"></span><h1>Terraform Module</h1>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>当前对Terraform学习阶段，摘抄阿里云的文档，后续再重写实践笔记</p>
</div>
<p>Terraform Module是Terraform模板，对多个子节点，子资源，子架构模板的组合和抽象。</p>
<p>随着架构的不断扩展和复杂，Terraform模板所采用的Resource和DataSource也不断增加，模板编写的复杂度不断增加。为了能够使Terraform模板更加简单和重用，引入Module来简化Terraform的模板。</p>
<section id="id2">
<h2>编写规则</h2>
<section id="id3">
<h3>模板的编方法</h3>
<ul class="simple">
<li><p>将所有Resource放到一个模板中统一管理</p></li>
</ul>
<p>所有资源在一个模板中管理，编写时就容易搞清楚资源之间的引用关系</p>
<ul class="simple">
<li><p>分类管理，将目录作为单元化资源</p></li>
</ul>
<p>很多资源是有层级关系的，但有些资源和其他资源又没有直接关联关系。所以，为了架构逻辑清晰，可以采用类似目录树的方式，对资源进行分类，将每一类资源用一个单独的目录进行管理，最后用一个模板来管理所有目录，进而完成对所有资源和资源关系的串联。</p>
<p>案例 - 资源分为网络（VPC），负载均衡（SLB），计算（ECS），数据库（RDS）和存储（OSS）:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>├── main.tf
├── variables.tf
├── outputs.tf
├── modules/
│   ├── vpc/
│   │   ├── variables.tf
│   │   ├── main.tf
│   │   ├── outputs.tf
│   ├── slb/
│   │   ├── variables.tf
│   │   ├── main.tf
│   │   ├── outputs.tf
│   ├── ecs/
│   ├── rds/
│   ├── oss/
</pre></div>
</div>
<p>然后使用统一的模板 <code class="docutils literal notranslate"><span class="pre">main.tf</span></code> 将这些目录关联:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">//</span> <span class="n">VPC</span> <span class="n">module</span>
<span class="n">module</span> <span class="s2">&quot;vpc&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/vpc&quot;</span>
  <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;new-netwtok&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
<span class="o">//</span> <span class="n">Web</span> <span class="n">Tier</span> <span class="n">module</span>
<span class="n">module</span> <span class="s2">&quot;web&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/ecs&quot;</span>
  <span class="n">instance_count</span> <span class="o">=</span> <span class="mi">2</span>
  <span class="n">vswitch_ids</span> <span class="o">=</span> <span class="s2">&quot;$</span><span class="si">{module.vpc.this_vswitch_ids}</span><span class="s2">&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
<span class="o">//</span> <span class="n">Web</span> <span class="n">App</span> <span class="n">module</span>
<span class="n">module</span> <span class="s2">&quot;app&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/ecs&quot;</span>
  <span class="n">instance_count</span> <span class="o">=</span> <span class="mi">2</span>
  <span class="n">vswitch_ids</span> <span class="o">=</span> <span class="s2">&quot;$</span><span class="si">{module.vpc.this_vswitch_ids}</span><span class="s2">&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
<span class="o">//</span> <span class="n">SLB</span> <span class="n">module</span><span class="p">(</span><span class="n">intranet</span><span class="p">)</span>
<span class="n">module</span> <span class="s2">&quot;slb&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/slb&quot;</span>
  <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;slb-internal&quot;</span>
  <span class="n">vswitch_id</span> <span class="o">=</span> <span class="s2">&quot;$</span><span class="si">{module.vpc.this_vswitch_ids.0.id}</span><span class="s2">&quot;</span>
  <span class="n">instances</span> <span class="o">=</span> <span class="s2">&quot;${concat(module.web.instance_ids, module.app.instance_ids,)}&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
<span class="o">//</span> <span class="n">SLB</span> <span class="n">module</span><span class="p">(</span><span class="n">internet</span><span class="p">)</span>
<span class="n">module</span> <span class="s2">&quot;slb&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/slb&quot;</span>
  <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;slb-external&quot;</span>
  <span class="n">internet</span> <span class="o">=</span> <span class="n">true</span>
  <span class="n">instances</span> <span class="o">=</span> <span class="s2">&quot;$</span><span class="si">{module.web.instance_ids}</span><span class="s2">&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
<span class="o">//</span> <span class="n">RDS</span> <span class="n">module</span>
<span class="n">module</span> <span class="s2">&quot;oss&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/rds&quot;</span>
  <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;new-rds&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
<span class="o">//</span> <span class="n">OSS</span> <span class="n">module</span>
<span class="n">module</span> <span class="s2">&quot;oss&quot;</span> <span class="p">{</span>
  <span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;./modules/oss&quot;</span>
  <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;new-bucket&quot;</span>
  <span class="o">...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>在上述 <code class="docutils literal notranslate"><span class="pre">main.tf</span></code> 中采用了 <code class="docutils literal notranslate"><span class="pre">module</span></code> ，通过 <code class="docutils literal notranslate"><span class="pre">module</span></code> 将资源目录联系起来。</p>
</section>
</section>
<section id="module">
<h2>Module概念</h2>
<p>Module 是 Terraform 为了管理单元化资源而设计的，是子节点，子资源，子架构模板的整合和抽象。</p>
<p><a class="reference external" href="https://www.terraform.io/docs/configuration/modules.html">Terraform官方文档 - Modules</a><span class="link-target"> [https://www.terraform.io/docs/configuration/modules.html]</span> 定义：将多种可以复用的资源定义为一个module，通过对module的管理简化模板的架构，降低模板管理的复杂度。</p>
<p>对开发者和用户而言，只需关心 module 的 input 参数即可，无需关心module中资源的定义，参数，语法等细节问题，抽出更多的时间和精力投入到架构设计和资源关系整合上。</p>
<p>Terraform提供了 <a class="reference external" href="https://registry.terraform.io/">Terraform Registry</a><span class="link-target"> [https://registry.terraform.io/]</span> 作为Terraform Modules注册，将自己开发的module上传到Github，并注册为Terraform Module之后，就可以将远端的Module应用到模板中。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>我的理解和比喻，module就好像是js仓库，只要引用了某个module，你编写的模板就可以包含这部分功能，不需要自己再重复编写。</p>
</div>
</section>
<section id="id4">
<h2>案例参考</h2>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p><a class="reference external" href="https://yq.aliyun.com/articles/674174?spm=a2c4e.11153940.0.0.3a471970fBdKAn">【最佳实践】通过Terraform 管理OSS资源</a><span class="link-target"> [https://yq.aliyun.com/articles/674174?spm=a2c4e.11153940.0.0.3a471970fBdKAn]</span> 提供了一个很好的起点，可以模仿其配置结构。</p>
<p><a class="reference external" href="https://yq.aliyun.com/articles/657716?spm=a2c4e.11153940.0.0.3a471970fBdKAn">利用Packer和Terraform，一键创建即拿即用的迷你并行计算集群</a><span class="link-target"> [https://yq.aliyun.com/articles/657716?spm=a2c4e.11153940.0.0.3a471970fBdKAn]</span> 也提供了一个批量创建小型集群的案例。</p>
<p><a class="reference external" href="https://yq.aliyun.com/articles/642624?spm=a2c4e.11153940.0.0.131a702278ND5o">Terraform Module 编写指南</a><span class="link-target"> [https://yq.aliyun.com/articles/642624?spm=a2c4e.11153940.0.0.131a702278ND5o]</span> 详细介绍了如何编写和注册Module的方法，本文将参考实践。</p>
</div>
</section>
<section id="modulegithub">
<h2>创建Module的GitHub仓库</h2>
<p>在Terraform官方 <a class="reference external" href="https://registry.terraform.io/">Terraform Registry</a><span class="link-target"> [https://registry.terraform.io/]</span> 注册module，之支持GitHub仓库，所以首先创建一个GitHub仓库：</p>
<ul class="simple">
<li><p>仓库必须是Public</p></li>
<li><p>仓库名必须符合格式: <code class="docutils literal notranslate"><span class="pre">terraform-&lt;PROVIDER&gt;-&lt;NAME&gt;</span></code> ，我创建了一个 <a class="reference external" href="https://github.com/huataihuang/terraform-alicloud-gluster">terraform-alicloud-gluster</a><span class="link-target"> [https://github.com/huataihuang/terraform-alicloud-gluster]</span></p></li>
</ul>
</section>
<section id="id7">
<h2>编写Module</h2>
<ul>
<li><p>将仓库clone出来:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">clone</span> <span class="n">git</span><span class="nd">@github</span><span class="o">.</span><span class="n">com</span><span class="p">:</span><span class="n">huataihuang</span><span class="o">/</span><span class="n">terraform</span><span class="o">-</span><span class="n">alicloud</span><span class="o">-</span><span class="n">gluster</span><span class="o">.</span><span class="n">git</span>
</pre></div>
</div>
</li>
<li><p>Terraform官方提供了一个 <a class="reference external" href="https://www.terraform.io/docs/modules/index.html#standard-module-structure">Terraform Standard Module Structure</a><span class="link-target"> [https://www.terraform.io/docs/modules/index.html#standard-module-structure]</span> 指南，建议参考构建自己的module</p></li>
</ul>
<section id="id8">
<h3>编写原则</h3>
<ul class="simple">
<li><p>每个Module不宜包含过多的资源，要尽可能只包含同一产品的相关资源，这样带来的好处是Module的复杂度不高，便于维护和阅读</p></li>
<li><p>对于统一产品的不同资源，应该分别放在不同的子module中，然后在最外层的main.tf中组织所有的子资源</p></li>
<li><p>每个module要尽可能单元化，以便可以在实际使用过程中自由添加和删除而不影响其他resource</p></li>
</ul>
</section>
<section id="id9">
<h3>module结构</h3>
<ul class="simple">
<li><p>main.tf</p></li>
</ul>
<p>每个module都有一个用于存放resource 和 datasource 的main.tf 。resource和datasource的参数禁止使用硬编码，必须通过变量进行引用。</p>
<ul class="simple">
<li><p>variables.tf</p></li>
</ul>
<p>每个变量都要添加该参数对应的描述信息，这个信息最终是要呈现在terraform registry官网上的。</p>
<ul class="simple">
<li><p>outputs.tf</p></li>
</ul>
<p>module中output的作用是被其他模板和module引用，因此，每个module要讲一些重要的信息输出出来，如资源ID，资源name 等</p>
<ul class="simple">
<li><p>README</p></li>
</ul>
<p>描述当前Module是用来干什么的，涉及哪些resource和data source 增加 Usage，指明该如何使用这个 Module。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>阿里云提供了一个 <a class="reference external" href="https://github.com/terraform-alicloud-modules/terraform-alicloud-demo">terraform-alicloud-demo</a><span class="link-target"> [https://github.com/terraform-alicloud-modules/terraform-alicloud-demo]</span> 可参考学习</p>
<p>不过，我感觉还是需要综合不少文档和实践才能真正掌握。</p>
</div>
<p>Terraform在运行时，会读取该目录空间下所有 <code class="docutils literal notranslate"><span class="pre">.tf</span></code> 以及 <code class="docutils literal notranslate"><span class="pre">.tfvars</span></code> 文件。因此，没有必要将所有配置信息写在1个配置文件中:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">provider</span><span class="o">.</span><span class="n">tf</span>                <span class="o">--</span> <span class="n">provider</span> <span class="n">配置</span>
<span class="n">terraform</span><span class="o">.</span><span class="n">tfvars</span>           <span class="o">--</span> <span class="n">配置</span> <span class="n">provider</span> <span class="n">要用到的变量</span>
<span class="n">varable</span><span class="o">.</span><span class="n">tf</span>                 <span class="o">--</span> <span class="n">通用变量</span>
<span class="n">resource</span><span class="o">.</span><span class="n">tf</span>                <span class="o">--</span> <span class="n">资源定义</span>
<span class="n">data</span><span class="o">.</span><span class="n">tf</span>                    <span class="o">--</span> <span class="n">包文件定义</span>
<span class="n">output</span><span class="o">.</span><span class="n">tf</span>                  <span class="o">--</span> <span class="n">输出</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>如果变量文件命名不是 <code class="docutils literal notranslate"><span class="pre">terraform.tfvars</span></code> 或者 <code class="docutils literal notranslate"><span class="pre">*.auto.tfvars</span></code> ，则需要传递 <code class="docutils literal notranslate"><span class="pre">-var-file</span></code> 参数给terraform命令，例如:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">terraform</span> <span class="n">apply</span> <span class="o">-</span><span class="n">var</span><span class="o">-</span><span class="n">file</span><span class="o">=</span><span class="n">myvars</span><span class="o">.</span><span class="n">tfvars</span>
</pre></div>
</div>
<p>此外，支持多个 <code class="docutils literal notranslate"><span class="pre">.tfvars</span></code> 文件:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">terraform</span> <span class="n">apply</span> \
<span class="o">-</span><span class="n">var</span><span class="o">-</span><span class="n">file</span><span class="o">=</span><span class="n">non</span><span class="o">-</span><span class="n">secret</span><span class="o">-</span><span class="n">variables</span><span class="o">.</span><span class="n">tfvars</span> \
<span class="o">-</span><span class="n">var</span><span class="o">-</span><span class="n">file</span><span class="o">=</span><span class="n">secret</span><span class="o">-</span><span class="n">variables</span><span class="o">.</span><span class="n">tfvars</span>
</pre></div>
</div>
</div>
<ul>
<li><p>provider.tf:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">provider</span> <span class="s2">&quot;alicloud&quot;</span> <span class="p">{</span>
    <span class="n">profile</span> <span class="o">=</span> <span class="s2">&quot;terraform&quot;</span>
    <span class="n">region</span> <span class="o">=</span> <span class="s2">&quot;cn-hangzhou&quot;</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
</ul>
<p>provider.tf 提供用户身份认证信息，这里同上配置使用 profile 来引用凭证。</p>
</section>
</section>
<section id="id10">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://yq.aliyun.com/articles/642624?spm=a2c4e.11153940.0.0.131a702278ND5o">Terraform Module 编写指南</a><span class="link-target"> [https://yq.aliyun.com/articles/642624?spm=a2c4e.11153940.0.0.131a702278ND5o]</span></p></li>
<li><p><a class="reference external" href="https://yq.aliyun.com/articles/642625?spm=a2c4e.11153940.0.0.26167e08kHpsc0">Module 让 Terraform 使用更简单</a><span class="link-target"> [https://yq.aliyun.com/articles/642625?spm=a2c4e.11153940.0.0.26167e08kHpsc0]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>