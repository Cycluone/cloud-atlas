<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>写文档</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="write-doc">
<span id="id1"></span><h1>写文档</h1>
<p>正如我在撰写 <a class="reference internal" href="../../index.xhtml#cloud-atlas"><span class="std std-ref">云图 – 云计算图志</span></a> ，文档是我梳理知识和想法最好的方式。我采用以下方式撰写文档:</p>
<ul class="simple">
<li><p>Sphinx Doc</p></li>
<li><p>MkDocs</p></li>
<li><p>GitBook</p></li>
<li><p>Hugo</p></li>
</ul>
<p>GitBook是我最早撰写 <a class="reference internal" href="../../index.xhtml#cloud-atlas"><span class="std std-ref">云图 – 云计算图志</span></a> 的 <a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft">Cloud Atlas 草稿</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft]</span> 时使用的文档撰写平台。但我感觉GitBook采用Node.js来生成html，效率比较低，对于大量文档生成非常缓慢。所以我仅更新源文件，很少再build生成最终的html文件。</p>
<p>Sphinx Doc是我撰写 <a class="reference internal" href="../../index.xhtml#cloud-atlas"><span class="std std-ref">云图 – 云计算图志</span></a> 的文档平台，我是模仿Kernel Doc的结构来撰写文档的，现在已经使用比较得心应手，感觉作为撰写书籍，使用Sphinx Doc是比较好的选择。</p>
<p>不过，Sphinx采用的reStructureText格式比较复杂(功能强大)，日常做快速笔记不如MarkDown格式。我发现MkDocs比较符合我的需求：</p>
<ul class="simple">
<li><p>美观</p></li>
<li><p>MarkDown语法</p></li>
<li><p>文档生成快速</p></li>
</ul>
<p>此外，在很多Go语言开发项目中采用了 Hugo 作为文档系统，同样采用MarkDown格式的静态网站，定制性更强(也更复杂)，提供了大量的theme实现，甚至可以生成类似WordPress的个人网站。</p>
<p>我目前结合Sphinx 和 MkDoc 来完成日常工作学习的笔记</p>
<ul class="simple">
<li><p>Sphinx用于撰写集结成册的技术手册</p></li>
<li><p>MkDoc用于日常工作笔记，记录各种资料信息采集</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>Sphinx Doc 和 MkDocs 都采用Python编写，可以共用Python virtualenv环境，这也是我比较喜欢这两个文档撰写工具的原因。</p>
</div>
<p>并且，我准备采用 Hugo 来制作个人Blog(待进行…)</p>
<section id="vim">
<h2>Vim设置</h2>
<p>为了方便使用vim进行文档撰写和编写代码，请参考 <a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/vim/using_vim_as_ide_in_macos.md">使用vim作为macos平台的IDE</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/vim/using_vim_as_ide_in_macos.md]</span> 中我的实践，这是一个非常快捷初始化工作环境的方法:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">git</span> <span class="n">clone</span> <span class="o">--</span><span class="n">depth</span><span class="o">=</span><span class="mi">1</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">amix</span><span class="o">/</span><span class="n">vimrc</span><span class="o">.</span><span class="n">git</span> <span class="o">~/.</span><span class="n">vim_runtime</span>
<span class="n">sh</span> <span class="o">~/.</span><span class="n">vim_runtime</span><span class="o">/</span><span class="n">install_awesome_vimrc</span><span class="o">.</span><span class="n">sh</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>默认开启了代码折叠功能，但是我觉得非常不好用，所以设置 <cite>~/.vimrc</cite> 默认关闭:</p>
<blockquote>
<div><p>set foldlevelstart=99</p>
</div></blockquote>
</div>
</section>
<section id="python-virtualenv">
<h2>Python Virtualenv</h2>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>如果是Linux环境，请参考 <a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/python/startup/install_python_3_and_virtualenv_on_centos.md">在CentOS上安装 Python3 virtualenv</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/python/startup/install_python_3_and_virtualenv_on_centos.md]</span></p>
</div>
<section id="macos">
<h3>macOS安装</h3>
<ul>
<li><p>安装 <a class="reference external" href="https://brew.sh">Homebrew</a><span class="link-target"> [https://brew.sh]</span></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">ruby</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</pre></div>
</div>
</li>
<li><p>通过Homebrew安装Python3</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">brew</span> <span class="n">install</span> <span class="n">python3</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>安装在目录 <code class="docutils literal notranslate"><span class="pre">/usr/local/bin/pyton3</span></code> ，执行时使用 <code class="docutils literal notranslate"><span class="pre">python3</span></code></p>
</div>
<ul>
<li><p>升级pip版本:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="o">-</span><span class="n">H</span> <span class="n">pip3</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="n">pip</span>
</pre></div>
</div>
</li>
<li><p>安装virtualenv</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="o">-</span><span class="n">H</span> <span class="n">pip3</span> <span class="n">install</span> <span class="n">virtualenv</span>
</pre></div>
</div>
</li>
</ul>
</section>
<section id="arch-linux">
<h3>Arch Linux安装</h3>
<p>Arch Linux默认安装了Python3，所以仅需要安装pip:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sudo</span> <span class="n">pacman</span> <span class="o">-</span><span class="n">S</span> <span class="n">python</span><span class="o">-</span><span class="n">pip</span>
</pre></div>
</div>
<p>安装virtualenv:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>  sudo pacman -S python-virtualenv

Ubuntu Linux安装
---------------------

Ubuntu Linux现在默认安装了Python3，所以也仅安装pip::

   sudo apt install python3-pip

安装virtualenv::

   sudo apt install python3-venv
</pre></div>
</div>
</section>
<section id="virtualenv">
<h3>设置virtualenv</h3>
<ul>
<li><p>创建工作目录下的Python 3 Virtualenv:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cd</span> <span class="o">~</span>
<span class="n">python3</span> <span class="o">-</span><span class="n">m</span> <span class="n">venv</span> <span class="n">venv3</span>
</pre></div>
</div>
</li>
<li><p>使用Virtualenv (每次使用Python3 Virtualenv之前要激活，后续所有基于文档撰写都使用此环境)</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">.</span> <span class="o">~/</span><span class="n">venv3</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">activate</span>
</pre></div>
</div>
</li>
</ul>
</section>
</section>
<section id="sphinx-doc">
<h2>Sphinx Doc</h2>
<ul>
<li><p>安装Sphinx 以及 rtd</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pip</span> <span class="n">install</span> <span class="n">sphinx</span>
<span class="n">pip</span> <span class="n">install</span> <span class="n">sphinx_rtd_theme</span>
</pre></div>
</div>
</li>
<li><p>初始化和创建sphinx文档项目:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">mkdir</span> <span class="n">cloud</span><span class="o">-</span><span class="n">atlas</span>
<span class="n">cd</span> <span class="n">cloud</span><span class="o">-</span><span class="n">atlas</span>
<span class="n">sphinx</span><span class="o">-</span><span class="n">quickstart</span>
</pre></div>
</div>
</li>
</ul>
<p>接下来就是文档撰写了，撰写在 <code class="docutils literal notranslate"><span class="pre">source</span></code> 目录下，结构请参考 <cite>我的云图项目 &lt;https://github.com/huataihuang/cloud-atlas&gt;`_</cite></p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>Sphinx撰写时经常需要引用代码片段，请参考 <a class="reference external" href="https://www.cnblogs.com/youxin/p/3653027.html">sphinx插入代码</a><span class="link-target"> [https://www.cnblogs.com/youxin/p/3653027.html]</span> 和 <a class="reference external" href="https://zh-sphinx-doc.readthedocs.io/en/latest/markup/code.html">展示示例代码</a><span class="link-target"> [https://zh-sphinx-doc.readthedocs.io/en/latest/markup/code.html]</span></p>
</div>
</section>
<section id="mkdoc">
<h2>MkDoc</h2>
<ul>
<li><p>继承已经安装部署的Python3 Virtualenv环境，安装 mkdocs</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pip</span> <span class="n">install</span> <span class="n">mkdocs</span>
<span class="n">pip</span> <span class="n">install</span> <span class="n">mkdocs</span><span class="o">-</span><span class="n">material</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>采用Google Material Design风格的theme <a class="reference external" href="https://squidfunk.github.io/mkdocs-material/">Material for MkDocs</a><span class="link-target"> [https://squidfunk.github.io/mkdocs-material/]</span></p>
</div>
<ul>
<li><p>创建项目:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">mkdocs</span> <span class="n">new</span> <span class="n">works</span>
<span class="n">cd</span> <span class="n">works</span>
</pre></div>
</div>
</li>
</ul>
<p>在项目目录下有一个 <code class="docutils literal notranslate"><span class="pre">mkdocs.yml</span></code> 配置文件，修订:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">site_name</span><span class="p">:</span> <span class="n">我的工作</span>
<span class="n">nav</span><span class="p">:</span>
  <span class="o">-</span> <span class="n">Home</span><span class="p">:</span> <span class="n">index</span><span class="o">.</span><span class="n">md</span>
  <span class="o">-</span> <span class="n">About</span><span class="p">:</span> <span class="n">about</span><span class="o">.</span><span class="n">md</span>
<span class="n">theme</span><span class="p">:</span> <span class="s1">&#39;material&#39;</span>
</pre></div>
</div>
<ul>
<li><p>启动服务:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">mkdocs</span> <span class="n">serv</span>
</pre></div>
</div>
</li>
</ul>
<p>然后撰写的文档可以通过 <a class="reference external" href="http://127.0.0.1:8000">http://127.0.0.1:8000</a> 看到实时更新</p>
<ul>
<li><p>如果要build文档:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">mkdocs</span> <span class="n">build</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>如果你想看看mkdocs的网站案例，可以参考一下 <a class="reference external" href="https://argoproj.github.io/argo-cd/">Argo CD 官方文档</a><span class="link-target"> [https://argoproj.github.io/argo-cd/]</span> ，提供了一个生动形象的 <a class="reference external" href="https://github.com/argoproj/argo-cd/blob/master/mkdocs.yml">Argo CD 手册案例</a><span class="link-target"> [https://github.com/argoproj/argo-cd/blob/master/mkdocs.yml]</span> 。</p>
</div>
</section>
<section id="gitbook">
<h2>GitBook</h2>
<ul>
<li><p>安装 nvm 来管理node.js版本</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">o</span><span class="o">-</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">raw</span><span class="o">.</span><span class="n">githubusercontent</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">nvm</span><span class="o">-</span><span class="n">sh</span><span class="o">/</span><span class="n">nvm</span><span class="o">/</span><span class="n">v0</span><span class="o">.</span><span class="mf">35.2</span><span class="o">/</span><span class="n">install</span><span class="o">.</span><span class="n">sh</span> <span class="o">|</span> <span class="n">bash</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>安装脚本会在用户目录下的shell profile文件中添加加载nvm的配置，但是如果用户目录下没有任何profile，则添加会失败。所以建议至少要touch一个空的profile，或者类似我在macOS环境下使用zsh，采用 <a class="reference external" href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a><span class="link-target"> [https://github.com/robbyrussell/oh-my-zsh]</span> 先生成环境配置:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sh</span> <span class="o">-</span><span class="n">c</span> <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span>
</pre></div>
</div>
<p>然后再执行上述按章nvm的脚本。</p>
</div>
<ul>
<li><p>使用 nvm 安装node.js稳定版:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">nvm</span> <span class="n">install</span> <span class="n">stable</span>
</pre></div>
</div>
</li>
<li><p>使用npm安装Gitbook:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">npm</span> <span class="n">install</span> <span class="n">gitbook</span><span class="o">-</span><span class="n">cli</span> <span class="o">-</span><span class="n">g</span>
<span class="n">npm</span> <span class="n">install</span> <span class="n">gitbook</span> <span class="o">-</span><span class="n">g</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>如果要升级版本，可以采用:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">npm</span> <span class="n">update</span> <span class="o">-</span><span class="n">g</span>
<span class="n">gitbook</span> <span class="n">update</span>
</pre></div>
</div>
</div>
<ul>
<li><p>安装插件disques:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">npm</span> <span class="n">install</span> <span class="n">react</span> <span class="n">react</span><span class="o">-</span><span class="n">dom</span> <span class="n">react</span><span class="o">-</span><span class="n">disqus</span><span class="o">-</span><span class="n">thread</span> <span class="n">gitbook</span><span class="o">-</span><span class="n">plugin</span><span class="o">-</span><span class="n">disqus</span> <span class="o">-</span><span class="n">g</span>
</pre></div>
</div>
</li>
<li><p>初始化目录:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">gitbook</span> <span class="n">init</span> <span class="n">cloud</span><span class="o">-</span><span class="n">atlas</span><span class="o">-</span><span class="n">draft</span>
</pre></div>
</div>
</li>
<li><p>在生成的 <cite>cloud-atlas-draft</cite> 目录下创建配置文件 <cite>book.json</cite> 配置启用插件:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="p">{</span>
  <span class="s2">&quot;plugins&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;disqus&quot;</span><span class="p">],</span>
  <span class="s2">&quot;pluginsConfig&quot;</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">&quot;disqus&quot;</span><span class="p">:</span> <span class="p">{</span>
      <span class="s2">&quot;shortName&quot;</span><span class="p">:</span> <span class="s2">&quot;huatai-gitbooks&quot;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>这里 <cite>shortName</cite> 是你在disqus 网站上申请的论坛名称，将附加到你的gitbook上。</p>
</div>
<ul>
<li><p>请参考我的文档项目 <a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft">Cloud Atlas 草稿</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft]</span> ，关键文件是 <cite>SUMMARY.md</cite> ，用于生成文档导航，引用的就是markdown格式的文档。</p></li>
<li><p>编译:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">gitbook</span> <span class="n">build</span> <span class="o">./</span> <span class="o">--</span><span class="n">log</span><span class="o">=</span><span class="n">debug</span> <span class="o">--</span><span class="n">debug</span>
</pre></div>
</div>
</li>
</ul>
<p>或者使用:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">gitbook</span> <span class="n">build</span> <span class="o">./</span> <span class="o">--</span><span class="n">timing</span>
</pre></div>
</div>
<p>可以debug编译的过程以及每个文档的时间，这样容易发现存在问题的文档。</p>
<ul class="simple">
<li><p>直接将内容推送到github仓库，并在gitbook官方网站上连接github仓库，就可以在推送github仓库时自动生成gitbook网站的书籍文档。</p></li>
</ul>
</section>
<section id="markdownrestructuredtext">
<h2>Markdown和reStructuredText转换格式</h2>
<p>同时使用gitbook和sphinx撰写文档就有一个困扰，两者使用的文档格式不同，有时候需要互相转换。这时候就需要强大的开源工具 <code class="docutils literal notranslate"><span class="pre">pandoc</span></code> 。</p>
<p>首先通过Homebrew安装pandoc:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">brew</span> <span class="n">install</span> <span class="n">pandoc</span>
</pre></div>
</div>
<p>然后就可以使用如下命令转换格式(案例是markdown转换成rst):</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pandoc</span> <span class="o">--</span><span class="n">from</span><span class="o">=</span><span class="n">markdown</span> <span class="o">--</span><span class="n">to</span><span class="o">=</span><span class="n">rst</span> <span class="o">--</span><span class="n">output</span><span class="o">=</span><span class="n">README</span><span class="o">.</span><span class="n">rst</span> <span class="n">README</span><span class="o">.</span><span class="n">md</span>
</pre></div>
</div>
</section>
<section id="id5">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/vim/using_vim_as_ide_in_macos.md">使用vim作为macOS的IDE</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/vim/using_vim_as_ide_in_macos.md]</span></p></li>
<li><p><a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/python/startup/install_python_3_and_virtualenv_on_macos.md">在macOS上安装Python3 virtualenv</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/python/startup/install_python_3_and_virtualenv_on_macos.md]</span></p></li>
<li><p><a class="reference external" href="https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/doc/sphinx/sphinx_for_python_doc.md">使用Sphinx撰写python文档</a><span class="link-target"> [https://github.com/huataihuang/cloud-atlas-draft/blob/master/develop/doc/sphinx/sphinx_for_python_doc.md]</span></p></li>
<li><p><a class="reference external" href="https://wiki.archlinux.org/index.php/Python/Virtual_environment">Arch Linux社区文档 - Python/Virtual environment</a><span class="link-target"> [https://wiki.archlinux.org/index.php/Python/Virtual_environment]</span></p></li>
<li><p><a class="reference external" href="https://bfroehle.com/2013/04/26/converting-md-to-rst/">Converting Markdown to reStructuredText</a><span class="link-target"> [https://bfroehle.com/2013/04/26/converting-md-to-rst/]</span></p></li>
<li><p><a class="reference external" href="https://naysan.ca/2019/08/05/install-python-3-virtualenv-on-ubuntu/">python3 + virtualenv + ubuntu</a><span class="link-target"> [https://naysan.ca/2019/08/05/install-python-3-virtualenv-on-ubuntu/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>