<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>配置Liveness, Readiness和Startup侦测</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="liveness-readinessstartup">
<span id="configure-liveness-readiness-and-startup-probes"></span><h1>配置Liveness, Readiness和Startup侦测</h1>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在Kubernetes更新master节点的管控组件时，合理配置 <code class="docutils literal notranslate"><span class="pre">readinessProbe</span></code> 可以使得升级组件平滑(确保pod轮转完全工作正常后再切换下一个pod)。</p>
</div>
<p>kubelet使用 <code class="docutils literal notranslate"><span class="pre">liveness</span></code> 侦测来获知合适重启一个容器。例如，liveness probes会捕获死锁，即一个应用程序处于运行状态，但是不能工作的情况。在这种状态下重启一个容器可以使得应用程序避免受到bug影响。</p>
<p>kubelet使用 <code class="docutils literal notranslate"><span class="pre">readiness</span></code> 侦测来获知一个容器是否已经就绪可以接受流量。当Pod中所有容器都就绪时就认为Pod就绪了。这种情况特别适合Pod作为服务后台的情况。当Pod没有就绪时，会自动从服务负载均衡中移除。</p>
<p>kubelet使用 <code class="docutils literal notranslate"><span class="pre">startup</span></code> 侦测来获知一个容器应用是否已经启动。如果配置了这个侦测，kubelet就会在 <code class="docutils literal notranslate"><span class="pre">startup</span></code> 侦测成功之前禁止 livenes 和 readiness 侦测，这要可以确保不必要的侦测影响应用启动。这个 startup 侦测可以在启动缓慢的容器上结合liveness侦测使用，就可以避免容器还没有启动和运行就被kubelet杀死。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>本文案例可以采用 <a class="reference internal" href="../startup_prepare/install_run_minikube.xhtml#install-run-minikube"><span class="std std-ref">安装和运行minikube</span></a> 来验证。</p>
</div>
<section id="liveness">
<h2>定义liveness命令</h2>
<p>很多应用程序运行很长时间以后会阻塞，并且只有重启才能恢复。Kubenetes提供了 <code class="docutils literal notranslate"><span class="pre">liveness</span></code> 侦测来检查并处理这种情况。</p>
</section>
<section id="id1">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/">Configure Liveness, Readiness and Startup Probes</a><span class="link-target"> [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>