<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>DaemonSet</title>
    <link rel="stylesheet" href="../../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="daemonset">
<span id="id1"></span><h1>DaemonSet</h1>
<p>DaemonSet是指在每个节点上运行一个Pod实例，并且每个节点只运行一个Pod实例的部署模式。这就相当于服务器Host操作系统中的一个daemon服务(如每个服务器上通常都会运行sshd服务一样)，当新节点加入集群，这个节点上就会相应部署一个daemonset；反之，当节点从集群移除，则该daemonset也会回收。</p>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>和 <a class="reference internal" href="replicaset.xhtml#replicaset"><span class="std std-ref">ReplicaSet</span></a> 不同， ReplicaSet是确保集群中存在指定数量的pod副本，而DaemonSet则是确保每个节点上运行一个pod副本。所以，当节点从集群中删除时，不会再其他地方重新创建DaemonSet pod。</p>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>设置了不可调度属性的节点依然会部署DaemonSet，因为DaemonSet管理的pod完全绕过调度器。DaemonSet目的是运行系统服务，所以即使在不可调度的节点上，系统服务通常也需要运行。</p>
</div>
<p>删除DaemonSet将删除它所创建的所有Pod。</p>
<p>DaemonSet通常用于部署：</p>
<ul class="simple">
<li><p>在每个节点上运行集群存储DaemonSet，如 <a class="reference internal" href="../../../../gluster/admin/glusterd.xhtml#glusterd"><span class="std std-ref">Glusterd服务</span></a> <a class="reference internal" href="../../../../ceph/index.xhtml#ceph"><span class="std std-ref">Ceph Atlas</span></a></p></li>
<li><p>在每个节点上运行日志采集DaemonSet，如 <a class="reference internal" href="../../../monitor/fluentd/index.xhtml#fluentd"><span class="std std-ref">Fluentd日志采集系统</span></a> <a class="reference internal" href="../../../../big_data/elasticsearch/logstash.xhtml#logstash"><span class="std std-ref">Logstash</span></a></p></li>
<li><p>在每个节点上运行监控DaemonSet，如 <a class="reference internal" href="../../../monitor/prometheus/prometheus_node_exporter.xhtml#prometheus-node-exporter"><span class="std std-ref">Prometheus Node Exporter</span></a> <a class="reference internal" href="../../../../linux/server/collectd/index.xhtml#collectd"><span class="std std-ref">collectd - 系统信息采集服务</span></a> 以及各种Agent</p></li>
<li><p>在每个节点上运行Kubernetes自己的DaemonSet，如 kube-proxy</p></li>
</ul>
<p>简单的部署方式是在所有节点上启动相同配置的DaemonSet，不区分硬件类型。较为复杂一些的配置是结合标签对不同硬件(例如GPU设备，SSD存储硬件)使用不同DaemonSet。</p>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://kubernetes.io/zh/docs/concepts/workloads/controllers/daemonset/">Kubernetes官方文档 DaemonSet</a><span class="link-target"> [https://kubernetes.io/zh/docs/concepts/workloads/controllers/daemonset/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>