<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>理解Kubernetes对象</title>
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="kubernetes">
<span id="understand-k8s-objects"></span><h1>理解Kubernetes对象</h1>
<p><code class="docutils literal notranslate"><span class="pre">Kubernetes</span> <span class="pre">Objects</span></code> 是kubernetes系统的持久实体。Kubernetes使用这些实体来表述集群的状态。特别是，Kubernetes对象可以描述:</p>
<ul class="simple">
<li><p>哪些容器化应用正在运行（以及在哪个节点运行）</p></li>
<li><p>应用程序的可用资源</p></li>
<li><p>应用程序特性相关的策略，例如重启策略，更新以及故障恢复侧露</p></li>
</ul>
<p>Kubernetes对象是一种”声明的记录” – 一旦创建对象，Kubernetes系统将持续确保对象存在。即创建对象就是要求集群持续照看对象，确保集群的终态正确。</p>
<section id="id1">
<h2>对象规格和状态</h2>
<p>每个kubernetes对象包含两个嵌套对象字段决定了对象配置：</p>
<ul class="simple">
<li><p>object spec（对象规格）：描述对象的终态，即你需要对象具有的特性</p></li>
<li><p>object status（对象状态）：描述对象当前实际状态，这个状态是通过kubernetes系统提供更新</p></li>
</ul>
<p>在 <code class="docutils literal notranslate"><span class="pre">任何时刻</span></code> ，Kubernetes管控平台（Kubernetes Control Plane）将实时管理对象的状态(object status)以符合你指定的状态(object spec)。例如，设置deployment spec指定运行的应用程序采用3副本，则Kubernetes系统会读取部署规格并启动3个指定应用程序实例以更新状态符合你的spec。任何实例故障（即状态变化），kubernetes就会对比两个spec差异并修正状态 – 也就是启动一个替代实例，使得最终状态依然保持3个应用程序运行实例。</p>
</section>
<section id="id2">
<h2>描述Kubernetes对象</h2>
<p>在创建Kubernetes对象时，需要提供 obejct spec 描述对象的终态。这样，在使用 Kuernetes API创建对象（或者通过 <code class="docutils literal notranslate"><span class="pre">kubectl</span></code> ），API请求中必须包含使用JSON作为请求内容的信息。 通常是通过一个 <code class="docutils literal notranslate"><span class="pre">.yaml</span></code> 文件提供信息给 <code class="docutils literal notranslate"><span class="pre">kubectl</span></code> ，而 <code class="docutils literal notranslate"><span class="pre">kubectl</span></code> 会将yaml数据转换成JSON然后发出API请求。</p>
<p>kubernetes官方提供的案例 <code class="docutils literal notranslate"><span class="pre">deployment.yaml</span></code> 可以帮助我们理解如何完成一个部署:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">apply</span> <span class="o">-</span><span class="n">f</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">k8s</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">examples</span><span class="o">/</span><span class="n">application</span><span class="o">/</span><span class="n">deployment</span><span class="o">.</span><span class="n">yaml</span> <span class="o">--</span><span class="n">record</span>
</pre></div>
</div>
<p>执行后提示信息:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">deployment</span><span class="o">.</span><span class="n">apps</span><span class="o">/</span><span class="n">nginx</span><span class="o">-</span><span class="n">deployment</span> <span class="n">created</span>
</pre></div>
</div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">application/deployment.yaml</span></code></p></li>
</ul>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span></pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="nt">apiVersion</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">apps/v1</span> <span class="c1"># for versions before 1.9.0 use apps/v1beta2</span>
<span class="nt">kind</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">Deployment</span>
<span class="nt">metadata</span><span class="p">:</span>
  <span class="nt">name</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">nginx-deployment</span>
<span class="nt">spec</span><span class="p">:</span>
  <span class="nt">selector</span><span class="p">:</span>
    <span class="nt">matchLabels</span><span class="p">:</span>
      <span class="nt">app</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">nginx</span>
  <span class="nt">replicas</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">2</span> <span class="c1"># tells deployment to run 2 pods matching the template</span>
  <span class="nt">template</span><span class="p">:</span>
    <span class="nt">metadata</span><span class="p">:</span>
      <span class="nt">labels</span><span class="p">:</span>
        <span class="nt">app</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">nginx</span>
    <span class="nt">spec</span><span class="p">:</span>
      <span class="nt">containers</span><span class="p">:</span>
      <span class="p p-Indicator">-</span> <span class="nt">name</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">nginx</span>
        <span class="nt">image</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">nginx:1.7.9</span>
        <span class="nt">ports</span><span class="p">:</span>
        <span class="p p-Indicator">-</span> <span class="nt">containerPort</span><span class="p">:</span> <span class="l l-Scalar l-Scalar-Plain">80</span>
</pre></div>
</td></tr></table></div>
<ul class="simple">
<li><p>解析 <code class="docutils literal notranslate"><span class="pre">application/deployment.yaml</span></code>
- <code class="docutils literal notranslate"><span class="pre">apiVersion:</span> <span class="pre">apps/v1</span></code> 设置创建对象时使用的Kubernetes API版本
- <code class="docutils literal notranslate"><span class="pre">kind:</span> <span class="pre">Deployment</span></code> 创建对象的类型
- <code class="docutils literal notranslate"><span class="pre">metadata</span></code> - 元数据唯一标识对象，包括 <code class="docutils literal notranslate"><span class="pre">name</span></code> 字符串， <code class="docutils literal notranslate"><span class="pre">UID</span></code> 和可选的 <code class="docutils literal notranslate"><span class="pre">namespace</span></code>
- 需要提供对象 <code class="docutils literal notranslate"><span class="pre">spec</span></code> 字段，对象 <code class="docutils literal notranslate"><span class="pre">spec</span></code> 的清晰格式对于每个Kubernetes对象都是不同的，并且包含嵌套字段来描述对象。</p></li>
</ul>
<p>执行上述创建后，kubernetes将根据模版（标签是 <code class="docutils literal notranslate"><span class="pre">app:</span> <span class="pre">nginx</span></code> ）采用指定镜像 <code class="docutils literal notranslate"><span class="pre">image:</span> <span class="pre">nginx:1.7.9</span></code> 创建容器，采用端口 <code class="docutils literal notranslate"><span class="pre">containerPort:</span> <span class="pre">80</span></code> 共创建2个pod（ <code class="docutils literal notranslate"><span class="pre">replicas:</span> <span class="pre">2</span></code> ），并且这个容器的模版具备了标签 <code class="docutils literal notranslate"><span class="pre">app:</span> <span class="pre">nginx</span></code> 。</p>
<figure class="align-default">
<img alt="../../../_images/deployment_pod_example.png" src="../../../_images/deployment_pod_example.png" style="width: 584.0px; height: 382.0px;" />
</figure>
<ul>
<li><p>检查部署:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">deployments</span>
</pre></div>
</div>
</li>
</ul>
<p>输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>               <span class="n">READY</span>   <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>   <span class="n">AVAILABLE</span>   <span class="n">AGE</span>
<span class="n">nginx</span><span class="o">-</span><span class="n">deployment</span>   <span class="mi">2</span><span class="o">/</span><span class="mi">2</span>     <span class="mi">2</span>            <span class="mi">2</span>           <span class="mi">91</span><span class="n">m</span>
</pre></div>
</div>
<p>可以进一步检查这个部署:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">deployments</span> <span class="n">nginx</span><span class="o">-</span><span class="n">deployment</span> <span class="o">-</span><span class="n">o</span> <span class="n">yaml</span>

<span class="n">kubectl</span> <span class="n">describe</span> <span class="n">deployments</span> <span class="n">nginx</span><span class="o">-</span><span class="n">deployment</span>
</pre></div>
</div>
<p>则可以看到详细的部署信息</p>
<ul>
<li><p>检查pod:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pods</span>
</pre></div>
</div>
</li>
</ul>
<p>输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>                               <span class="n">READY</span>   <span class="n">STATUS</span>    <span class="n">RESTARTS</span>   <span class="n">AGE</span>
<span class="n">nginx</span><span class="o">-</span><span class="n">deployment</span><span class="o">-</span><span class="mi">6</span><span class="n">dd86d77d</span><span class="o">-</span><span class="n">lmg92</span>   <span class="mi">1</span><span class="o">/</span><span class="mi">1</span>     <span class="n">Running</span>   <span class="mi">0</span>          <span class="mi">90</span><span class="n">m</span>
<span class="n">nginx</span><span class="o">-</span><span class="n">deployment</span><span class="o">-</span><span class="mi">6</span><span class="n">dd86d77d</span><span class="o">-</span><span class="n">zr9c4</span>   <span class="mi">1</span><span class="o">/</span><span class="mi">1</span>     <span class="n">Running</span>   <span class="mi">0</span>          <span class="mi">90</span><span class="n">m</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>虽然已经启动了pod，但是此时还没有把部署输出到外部网络，所以此时还无法访问nginx的页面。请参考 <a class="reference internal" href="../../deployment/stateless_application/kubernetes_expose_service.xhtml#kubernetes-expose-service"><span class="std std-ref">输出Kubernetes应用服务</span></a> 完成服务输出。</p>
<p>在kubernetes中展示的pod命名和运行主机上的docker容器命名相关，在物理主机上使用 <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">ps</span></code> 可以看到 <code class="docutils literal notranslate"><span class="pre">XXXX_nginx-deployment-6dd86d77d-lmg92_YYYY</span></code> 命名的容器。</p>
</div>
</section>
<section id="id3">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">Understanding Kubernetes Objects</a><span class="link-target"> [https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>