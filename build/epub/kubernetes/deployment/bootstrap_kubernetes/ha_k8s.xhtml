<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>高可用(HA)Kubernetes集群</title>
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="ha-kubernetes">
<span id="ha-k8s"></span><h1>高可用(HA)Kubernetes集群</h1>
<p>Kubernetes高可用集群实现方法:</p>
<ul class="simple">
<li><p>通过堆叠的控制平面节点(stacked control plane nodes)，即etcd节点和控制平面节点结合在一起</p></li>
<li><p>通过外部的etcd节点，即etcd节点运行在控制平面节点之外</p></li>
</ul>
<p>请注意上述两种高可用部署方案各有优缺点，请仔细考虑利弊：</p>
<section id="etcd">
<h2>堆叠etcd方案</h2>
<p>堆叠etcd的HHA集群是将提供分布式数据存储的etcd集群建立在集群构建的节点上，并且由kubeadm管理和作为控制平面组件。</p>
<p>每个控制平面节点都是运行了 <code class="docutils literal notranslate"><span class="pre">kube-apiserver</span></code> , <code class="docutils literal notranslate"><span class="pre">kube-scheduler</span></code> 和 <code class="docutils literal notranslate"><span class="pre">kube-controller-manager</span></code> 实例的节点，并且 <code class="docutils literal notranslate"><span class="pre">kube-apiserver</span></code> 是通过负载均衡输出给集群的worker节点。</p>
<p>每个控制平面节点创建一个本地etcd成员，并且这个etcd成员 <strong>只和</strong> 这个节点的 <code class="docutils literal notranslate"><span class="pre">kube-apiserver</span></code> 通讯。同样的通讯模式也发生在 <code class="docutils literal notranslate"><span class="pre">kube-controller-manager</span></code> 和 <code class="docutils literal notranslate"><span class="pre">kube-scheculer</span></code> 实例上。（etcd堆叠部署在控制平面节点上，则控制平面节点上的管控组件只和本地的etcd通讯）</p>
<p>这种紧密结合了控制平面和etcd在同一节点上的部署拓扑简化了集群的设置（不需要部署外部etcd节点），并且也简化了复制管理。</p>
<p>但是，堆叠集群部署方案存在失效结合(failed coupling)的风险。如果一个节点故障，则etcd和管控平面实例同时失效，此时就存在冗灾风险。要解决这个风险，需要添加更多的管控平面节点。</p>
<p>在HA集群中，至少需要运行3个堆叠的管控平面节点。</p>
<p>这种堆叠部署管控节点是默认的kubeadm生成架构，即 <code class="docutils literal notranslate"><span class="pre">kubeadm</span> <span class="pre">init</span></code> 和 <code class="docutils literal notranslate"><span class="pre">kubeadm</span> <span class="pre">join</span> <span class="pre">--control-plane</span></code> 命令自动创建的管控节点就是运行一个本地etcd服务的部署方式。</p>
<figure class="align-default" id="id3">
<img alt="../../../_images/kubeadm-ha-topology-stacked-etcd.svg" src="../../../_images/kubeadm-ha-topology-stacked-etcd.svg" /><figcaption>
<p><span class="caption-text">Figure 1: Kubeadm HA topology - stacked etcd</span></p>
</figcaption>
</figure>
</section>
<section id="id1">
<h2>外部etcd部署</h2>
<p>另一种HA集群部署模式是将etcd独立出来单独部署，这样就可以控制平面节点分离。此时，etcd节点运行在独立的服务器，并且每个etcd主机和每个控制平面节点上的apiserver通讯。</p>
<p>采用独立的etcd集群部署可以获得更为稳定的高可用集群，即使某个控制平面实例或者etcd压力过大也不会像堆叠etcd模式那样影响整个kubernetes集群。</p>
<p>但是，独立外部etcd部署需要两倍的管控服务器，即至少3台控制平面节点和3台etcd节点服务器来部署高可用集群。</p>
<figure class="align-default" id="id4">
<img alt="../../../_images/kubeadm-ha-topology-external-etcd.svg" src="../../../_images/kubeadm-ha-topology-external-etcd.svg" /><figcaption>
<p><span class="caption-text">Figure 2: Kubeadm HA topology - external etcd</span></p>
</figcaption>
</figure>
</section>
<section id="id2">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/">Options for Highly Available topology</a><span class="link-target"> [https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>