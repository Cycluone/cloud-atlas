<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Minikube对外输出应用</title>
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="minikube">
<span id="minikube-expose-app"></span><h1>Minikube对外输出应用</h1>
<p>Kubernetes中Pod是关键要素。Pod实际上有一个称为 <a class="reference internal" href="../concepts/workloads/pods/pod_lifecycle.xhtml#pod-lifecycle"><span class="std std-ref">Pod生命周期</span></a> 的概念。当一个worker节点故障，则运行在这个节点当Pods也就随之丢失了。</p>
<p><a class="reference internal" href="../concepts/workloads/controllers/replicaset.xhtml#replicaset"><span class="std std-ref">ReplicaSet</span></a> 可以通过创建新的Pod来保持应用程序运行，这样就可以动态驱动集群恢复指定状态。举例，假设有一个图形处理后端运行了3个副本。这些副本是可替换的，前端系统不会知道后端副本出现某个Pod丢失然后重建，即在Kuberneetes集群中每个Pod有一个唯一的IP地址，甚至当这些Pod在相同节点也是这样，需要有一种方式自动保持Pod的最终一致性，这样应用程序就可以持续工作。</p>
<p>在Kubernetes中，服务(Service)是一个抽象概念，服务定义了一个Pod的逻辑集合，以及如何访问这些Pod的策略。Service激活了在相关Pod之间的松散连接。Service使用YAML或JSON定义，类似所有的Kubernettes对象。通过Service定义的一组Pod通常使用 LabelSelector 来定位。</p>
<p>虽然每个Pod有一个唯一IP地址（内部），但是如果没有定义服务Service，则这些IP不能被集群外访问。Services允许应用程序收到流量，并且额可以通过指定ServiceSpecc的 <code class="docutils literal notranslate"><span class="pre">type</span></code> 来输出不同方式:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">ClusterIP</span></code> (默认) - 通过集群中的一个内部IP来输出服务。这是默认方式，这使得服务在集群内部能够被访问到。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">NodePort</span></code> - 使用NAT方式，把集群的每个被选择节点使用相同端口输出服务。让服务在外部可以访问是使用 <code class="docutils literal notranslate"><span class="pre">&lt;NodeIP&gt;:&lt;NodePort&gt;</span></code> 。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">LoadBalancer</span></code> - 在当前云（如果支持）创建一个外部负载均衡，并且设置一个固定的外部IP地址提供服务。这种负载均衡模式是NodePort的超集。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">ExternalName</span></code> - 通过返回一个CNAME别名记录实现一个强制名字（arbitrary name）输出服务（即在spec中指定 <code class="docutils literal notranslate"><span class="pre">externalName</span></code> ）。不需要使用proxy，这种类型需要 v1.7或更高版本的 <code class="docutils literal notranslate"><span class="pre">kube-dns</span></code> 。</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>详细请参考 <a class="reference internal" href="../concepts/services_networking/connect_applications_service.xhtml#connect-applications-service"><span class="std std-ref">通过服务连接应用程序</span></a></p>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>一些服务的使用案例在spec中没有定义 <code class="docutils literal notranslate"><span class="pre">selector</span></code> ，这种没有具备 <code class="docutils literal notranslate"><span class="pre">selector</span></code> 的服务也就不会创建相应的Endpoints对象。这种方式允许用户手工映射一个服务到特定的endpoints。另一种不使用selector的可能是使用 <code class="docutils literal notranslate"><span class="pre">type:</span> <span class="pre">ExternalName</span></code> 。</p>
</div>
<section id="servicces-and-labels">
<h2>服务和标签(Servicces and Labels)</h2>
<figure class="align-default">
<img alt="../../_images/services_and_labels.svg" src="../../_images/services_and_labels.svg" /></figure>
<ul class="simple">
<li><p>Service会路由一个Pod集合的流量
- Service能够抽象Pod对外提供的服务，这样Pod的消亡和替换不会影响Kubernetes对外的应用（实际上就是通过ReplicaSet的最终一致性确保Kubernetes集群有指定数量的Pod对外提供服务）
- Service可以处理发现和路由相关Pods（例如对于一个应用需要组合前端和后端组件）</p>
<ul>
<li><p>通过 <a class="reference internal" href="../concepts/objects/labels_and_selectors.xhtml#labels-and-selectors"><span class="std std-ref">标签和选择器(labels and selectors)</span></a> （Kubernetes的逻辑集合）Service可以匹配Pods集合以便能够统一操作。 标签和key/value键值对是Kubernetes对象所具备的，可以通过以下方式使用:
- 为开发、测试和生产环境命名对象
- 嵌入版本tag
- 使用tag来分类一个对象</p></li>
</ul>
</li>
</ul>
<figure class="align-default">
<img alt="../../_images/services_labels.svg" src="../../_images/services_labels.svg" /></figure>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>通过在Pod上设置标签 <code class="docutils literal notranslate"><span class="pre">app=B</span></code> 可以把一组Pod逻辑组合成面向service B，然后通过标签选择器选择这组pod，来设置对外服务。</p>
</div>
</section>
<section id="id1">
<h2>输出服务</h2>
<p>在 <a class="reference internal" href="minikube_deploy_app.xhtml#minikube-deploy-app"><span class="std std-ref">使用Minikube集群部署应用</span></a> 中，我们已经部署了一个 <code class="docutils literal notranslate"><span class="pre">my-dev</span></code> 的Pod，并且我们手工在这个Pod中安装了Nginx服务。虽然此时我们只有通过 <code class="docutils literal notranslate"><span class="pre">kubectl</span> <span class="pre">proxy</span></code> 连接到Kubernetes内部网络才能看到WEB页面。现在我们来实践上文介绍的几种输出service的方式，让这个Pod真正能够对外服务。</p>
<ul>
<li><p>检查deployment:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">deployments</span>
</pre></div>
</div>
</li>
</ul>
<p>可以看到输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>     <span class="n">READY</span>   <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>   <span class="n">AVAILABLE</span>   <span class="n">AGE</span>
<span class="n">my</span><span class="o">-</span><span class="n">dev</span>   <span class="mi">1</span><span class="o">/</span><span class="mi">1</span>     <span class="mi">1</span>            <span class="mi">1</span>           <span class="mi">4</span><span class="n">d1h</span>
</pre></div>
</div>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">NodePort</span></code> - 使用NAT方式，把集群的每个被选择节点使用相同端口输出服务。让服务在外部可以访问是使用 <code class="docutils literal notranslate"><span class="pre">&lt;NodeIP&gt;:&lt;NodePort&gt;</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">expose</span> <span class="n">deployment</span><span class="o">/</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span> <span class="o">--</span><span class="nb">type</span><span class="o">=</span><span class="s2">&quot;NodePort&quot;</span> <span class="o">--</span><span class="n">port</span> <span class="mi">80</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>请注意，所谓 <code class="docutils literal notranslate"><span class="pre">NodePort</span></code> 实际上就是把Kubernetes内部私网IP上的服务器端口映射到所在节点IP的对外端口（随机选择），虽然能够对外使用，实际上并不符合我们常规的对外服务（因为端口不固定，并且使用的是NodeIP）。</p>
</div>
<ul>
<li><p>现在我们检查输出的服务:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">services</span>
</pre></div>
</div>
</li>
</ul>
<p>输出显示:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>         <span class="n">TYPE</span>        <span class="n">CLUSTER</span><span class="o">-</span><span class="n">IP</span>       <span class="n">EXTERNAL</span><span class="o">-</span><span class="n">IP</span>   <span class="n">PORT</span><span class="p">(</span><span class="n">S</span><span class="p">)</span>        <span class="n">AGE</span>
<span class="n">kubernetes</span>   <span class="n">ClusterIP</span>   <span class="mf">10.96</span><span class="o">.</span><span class="mf">0.1</span>        <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>        <span class="mi">443</span><span class="o">/</span><span class="n">TCP</span>        <span class="mi">5</span><span class="n">d6h</span>
<span class="n">my</span><span class="o">-</span><span class="n">dev</span>       <span class="n">NodePort</span>    <span class="mf">10.103</span><span class="o">.</span><span class="mf">127.241</span>   <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>        <span class="mi">80</span><span class="p">:</span><span class="mi">32124</span><span class="o">/</span><span class="n">TCP</span>   <span class="mi">18</span><span class="n">s</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>注意， <code class="docutils literal notranslate"><span class="pre">NodePort</span></code> 是需要获取到node节点的IP地址才能访问的（不是 <code class="docutils literal notranslate"><span class="pre">get</span> <span class="pre">services</span></code> 显示的 <code class="docutils literal notranslate"><span class="pre">CLUSTER-IP</span></code> ，这个cluster-ip是内部私有地址）</p>
</div>
<ul>
<li><p>获取输出的 <code class="docutils literal notranslate"><span class="pre">NodePort</span></code></p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>export NODE_PORT=$(kubectl get services/my-dev -o go-template=&#39;{{(index .spec.ports 0).nodePort}}&#39;)
echo NODE_PORT=$NODE_PORT
</pre></div>
</div>
</li>
</ul>
<p>显示输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NODE_PORT</span><span class="o">=</span><span class="mi">32124</span>
</pre></div>
</div>
<ul>
<li><p>现在我们就可以执行以下命令获取Node节点对外输出的服务（这里 Node 节点 IP 是 192.168.101.81）:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>curl http://192.168.101.81:$NODE_PORT
</pre></div>
</div>
</li>
</ul>
<p>正确的话，输出内容如下:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">header</span><span class="o">&gt;&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="n">MiniKube</span><span class="o">&lt;/</span><span class="n">title</span><span class="o">&gt;&lt;/</span><span class="n">header</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
<span class="n">Hello</span> <span class="n">world</span>
<span class="o">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</pre></div>
</div>
</section>
<section id="label">
<h2>使用标签(label)</h2>
<p>在 Deployment 部署时候会自动为Pod创建一个Label，例如，之前我们创建的 <code class="docutils literal notranslate"><span class="pre">my-dev</span></code> 这个pod，使用以下 <code class="docutils literal notranslate"><span class="pre">describe</span> <span class="pre">deployment</span></code> 可以查看Pod的详细信息:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">describe</span> <span class="n">deployment</span>
</pre></div>
</div>
<p>显示输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">Name</span><span class="p">:</span>                   <span class="n">my</span><span class="o">-</span><span class="n">dev</span>
<span class="n">Namespace</span><span class="p">:</span>              <span class="n">default</span>
<span class="n">CreationTimestamp</span><span class="p">:</span>      <span class="n">Thu</span><span class="p">,</span> <span class="mi">13</span> <span class="n">Jun</span> <span class="mi">2019</span> <span class="mi">15</span><span class="p">:</span><span class="mi">36</span><span class="p">:</span><span class="mi">10</span> <span class="o">+</span><span class="mi">0800</span>
<span class="n">Labels</span><span class="p">:</span>                 <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
<span class="n">Annotations</span><span class="p">:</span>            <span class="n">deployment</span><span class="o">.</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">revision</span><span class="p">:</span> <span class="mi">1</span>
<span class="n">Selector</span><span class="p">:</span>               <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
<span class="n">Replicas</span><span class="p">:</span>               <span class="mi">1</span> <span class="n">desired</span> <span class="o">|</span> <span class="mi">1</span> <span class="n">updated</span> <span class="o">|</span> <span class="mi">1</span> <span class="n">total</span> <span class="o">|</span> <span class="mi">1</span> <span class="n">available</span> <span class="o">|</span> <span class="mi">0</span> <span class="n">unavailable</span>
<span class="n">StrategyType</span><span class="p">:</span>           <span class="n">RollingUpdate</span>
<span class="n">MinReadySeconds</span><span class="p">:</span>        <span class="mi">0</span>
<span class="n">RollingUpdateStrategy</span><span class="p">:</span>  <span class="mi">25</span><span class="o">%</span> <span class="nb">max</span> <span class="n">unavailable</span><span class="p">,</span> <span class="mi">25</span><span class="o">%</span> <span class="nb">max</span> <span class="n">surge</span>
<span class="n">Pod</span> <span class="n">Template</span><span class="p">:</span>
  <span class="n">Labels</span><span class="p">:</span>  <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
  <span class="n">Containers</span><span class="p">:</span>
   <span class="n">my</span><span class="o">-</span><span class="n">dev</span><span class="p">:</span>
    <span class="n">Image</span><span class="p">:</span>      <span class="n">ubuntu</span>
    <span class="n">Port</span><span class="p">:</span>       <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
    <span class="n">Host</span> <span class="n">Port</span><span class="p">:</span>  <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
    <span class="n">Args</span><span class="p">:</span>
      <span class="n">bash</span>
    <span class="n">Environment</span><span class="p">:</span>  <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
    <span class="n">Mounts</span><span class="p">:</span>       <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
  <span class="n">Volumes</span><span class="p">:</span>        <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
<span class="n">Conditions</span><span class="p">:</span>
  <span class="n">Type</span>           <span class="n">Status</span>  <span class="n">Reason</span>
  <span class="o">----</span>           <span class="o">------</span>  <span class="o">------</span>
  <span class="n">Available</span>      <span class="kc">True</span>    <span class="n">MinimumReplicasAvailable</span>
  <span class="n">Progressing</span>    <span class="kc">True</span>    <span class="n">NewReplicaSetAvailable</span>
<span class="n">OldReplicaSets</span><span class="p">:</span>  <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
<span class="n">NewReplicaSet</span><span class="p">:</span>   <span class="n">my</span><span class="o">-</span><span class="n">dev</span><span class="o">-</span><span class="mi">558</span><span class="n">d6cdd</span> <span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">1</span> <span class="n">replicas</span> <span class="n">created</span><span class="p">)</span>
<span class="n">Events</span><span class="p">:</span>          <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>可以看到默认的Label是 <code class="docutils literal notranslate"><span class="pre">run=my-dev</span></code> ，并且有一个选择器 <code class="docutils literal notranslate"><span class="pre">Selector</span></code> 是 <code class="docutils literal notranslate"><span class="pre">run=my-dev</span></code></p>
</div>
<ul class="simple">
<li><p>根据标签找pod</p></li>
</ul>
<p>既然有标签，现在我们就可以通过标签来找到这个pod（这里是一个演示，实际上在生产环境，对于海量的pod，我们就是通过label来找到这些pod的）:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pods</span> <span class="o">-</span><span class="n">l</span> <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
</pre></div>
</div>
<p>输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>                    <span class="n">READY</span>   <span class="n">STATUS</span>    <span class="n">RESTARTS</span>   <span class="n">AGE</span>
<span class="n">my</span><span class="o">-</span><span class="n">dev</span><span class="o">-</span><span class="mi">558</span><span class="n">d6cdd</span><span class="o">-</span><span class="mi">4</span><span class="n">bnxq</span>   <span class="mi">1</span><span class="o">/</span><span class="mi">1</span>     <span class="n">Running</span>   <span class="mi">0</span>          <span class="mi">4</span><span class="n">d5h</span>
</pre></div>
</div>
<ul class="simple">
<li><p>根据标签找service</p></li>
</ul>
<p>同样也可以根据标签来找service:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">services</span> <span class="o">-</span><span class="n">l</span> <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
</pre></div>
</div>
<p>输出:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>     <span class="n">TYPE</span>       <span class="n">CLUSTER</span><span class="o">-</span><span class="n">IP</span>       <span class="n">EXTERNAL</span><span class="o">-</span><span class="n">IP</span>   <span class="n">PORT</span><span class="p">(</span><span class="n">S</span><span class="p">)</span>        <span class="n">AGE</span>
<span class="n">my</span><span class="o">-</span><span class="n">dev</span>   <span class="n">NodePort</span>   <span class="mf">10.103</span><span class="o">.</span><span class="mf">127.241</span>   <span class="o">&lt;</span><span class="n">none</span><span class="o">&gt;</span>        <span class="mi">80</span><span class="p">:</span><span class="mi">32124</span><span class="o">/</span><span class="n">TCP</span>   <span class="mi">3</span><span class="n">h58m</span>
</pre></div>
</div>
<ul class="simple">
<li><p>label可以随时添加和修改，这里我们给pod增加一个新的标签 <code class="docutils literal notranslate"><span class="pre">app=v1</span></code></p></li>
</ul>
<p>首先我们获取Pod的名字并存放在环境变量 <code class="docutils literal notranslate"><span class="pre">POD_NAME</span></code> 中:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>export POD_NAME=$(kubectl get pods -o go-template --template &#39;{{range .items}}{{.metadata.name}}{{&quot;\n&quot;}}{{end}}&#39;)
echo Name of the Pod: $POD_NAME
</pre></div>
</div>
<p>输出显示:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>echo Name of the Pod: $POD_NAME
</pre></div>
</div>
<p>现在为这个pod打上新标签:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>kubectl label pod $POD_NAME app=v1
</pre></div>
</div>
<p>输出显示:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">pod</span><span class="o">/</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span><span class="o">-</span><span class="mi">558</span><span class="n">d6cdd</span><span class="o">-</span><span class="mi">4</span><span class="n">bnxq</span> <span class="n">labeled</span>
</pre></div>
</div>
<p>检查:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>kubectl describe pods $POD_NAME
</pre></div>
</div>
<p>输出显示:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">Name</span><span class="p">:</span>               <span class="n">my</span><span class="o">-</span><span class="n">dev</span><span class="o">-</span><span class="mi">558</span><span class="n">d6cdd</span><span class="o">-</span><span class="mi">4</span><span class="n">bnxq</span>
<span class="o">...</span>
<span class="n">Labels</span><span class="p">:</span>             <span class="n">app</span><span class="o">=</span><span class="n">v1</span>
                    <span class="n">pod</span><span class="o">-</span><span class="n">template</span><span class="o">-</span><span class="nb">hash</span><span class="o">=</span><span class="mi">558</span><span class="n">d6cdd</span>
                    <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
<span class="o">...</span>
</pre></div>
</div>
<ul>
<li><p>通过新增加label来找寻pod:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pods</span> <span class="o">-</span><span class="n">l</span> <span class="n">app</span><span class="o">=</span><span class="n">v1</span>
</pre></div>
</div>
</li>
</ul>
<p>同样我们也找到这个pod，输出显示如下:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">NAME</span>                    <span class="n">READY</span>   <span class="n">STATUS</span>    <span class="n">RESTARTS</span>   <span class="n">AGE</span>
<span class="n">my</span><span class="o">-</span><span class="n">dev</span><span class="o">-</span><span class="mi">558</span><span class="n">d6cdd</span><span class="o">-</span><span class="mi">4</span><span class="n">bnxq</span>   <span class="mi">1</span><span class="o">/</span><span class="mi">1</span>     <span class="n">Running</span>   <span class="mi">0</span>          <span class="mi">4</span><span class="n">d5h</span>
</pre></div>
</div>
</section>
<section id="id2">
<h2>删除服务</h2>
<ul>
<li><p>通过label我们可以查询到服务，所以我们也可以根据label来删除服务:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">delete</span> <span class="n">service</span> <span class="o">-</span><span class="n">l</span> <span class="n">run</span><span class="o">=</span><span class="n">my</span><span class="o">-</span><span class="n">dev</span>
</pre></div>
</div>
</li>
</ul>
<p>显示:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">service</span> <span class="s2">&quot;my-dev&quot;</span> <span class="n">deleted</span>
</pre></div>
</div>
<p>删除服务之后，再次检查服务列表:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">service</span>
</pre></div>
</div>
<p>可以看到自己定义的 <code class="docutils literal notranslate"><span class="pre">my-dev</span></code> 服务已经消失。</p>
<p>当然，我们现在在外部网络已经不能访问到Kubernetes内部网络的服务端口（外部服务暴露接口已经删除），但是我们可以通过pod内部的检查确认app还是运行的，只是没有外部服务:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>kubectl exec -ti $POD_NAME curl localhost:80
</pre></div>
</div>
</section>
<section id="id3">
<h2>参考</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/">Using a Service to Expose Your App</a><span class="link-target"> [https://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/]</span></p></li>
</ul>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>